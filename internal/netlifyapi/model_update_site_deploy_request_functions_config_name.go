/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the UpdateSiteDeployRequestFunctionsConfigName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSiteDeployRequestFunctionsConfigName{}

// UpdateSiteDeployRequestFunctionsConfigName struct for UpdateSiteDeployRequestFunctionsConfigName
type UpdateSiteDeployRequestFunctionsConfigName struct {
	DisplayName *string `json:"display_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSiteDeployRequestFunctionsConfigName UpdateSiteDeployRequestFunctionsConfigName

// NewUpdateSiteDeployRequestFunctionsConfigName instantiates a new UpdateSiteDeployRequestFunctionsConfigName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSiteDeployRequestFunctionsConfigName() *UpdateSiteDeployRequestFunctionsConfigName {
	this := UpdateSiteDeployRequestFunctionsConfigName{}
	return &this
}

// NewUpdateSiteDeployRequestFunctionsConfigNameWithDefaults instantiates a new UpdateSiteDeployRequestFunctionsConfigName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSiteDeployRequestFunctionsConfigNameWithDefaults() *UpdateSiteDeployRequestFunctionsConfigName {
	this := UpdateSiteDeployRequestFunctionsConfigName{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequestFunctionsConfigName) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequestFunctionsConfigName) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequestFunctionsConfigName) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UpdateSiteDeployRequestFunctionsConfigName) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o UpdateSiteDeployRequestFunctionsConfigName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSiteDeployRequestFunctionsConfigName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSiteDeployRequestFunctionsConfigName) UnmarshalJSON(data []byte) (err error) {
	varUpdateSiteDeployRequestFunctionsConfigName := _UpdateSiteDeployRequestFunctionsConfigName{}

	err = json.Unmarshal(data, &varUpdateSiteDeployRequestFunctionsConfigName)

	if err != nil {
		return err
	}

	*o = UpdateSiteDeployRequestFunctionsConfigName(varUpdateSiteDeployRequestFunctionsConfigName)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "display_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSiteDeployRequestFunctionsConfigName struct {
	value *UpdateSiteDeployRequestFunctionsConfigName
	isSet bool
}

func (v NullableUpdateSiteDeployRequestFunctionsConfigName) Get() *UpdateSiteDeployRequestFunctionsConfigName {
	return v.value
}

func (v *NullableUpdateSiteDeployRequestFunctionsConfigName) Set(val *UpdateSiteDeployRequestFunctionsConfigName) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSiteDeployRequestFunctionsConfigName) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSiteDeployRequestFunctionsConfigName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSiteDeployRequestFunctionsConfigName(val *UpdateSiteDeployRequestFunctionsConfigName) *NullableUpdateSiteDeployRequestFunctionsConfigName {
	return &NullableUpdateSiteDeployRequestFunctionsConfigName{value: val, isSet: true}
}

func (v NullableUpdateSiteDeployRequestFunctionsConfigName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSiteDeployRequestFunctionsConfigName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


