/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the UpdateSiteBuildLogRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSiteBuildLogRequest{}

// UpdateSiteBuildLogRequest struct for UpdateSiteBuildLogRequest
type UpdateSiteBuildLogRequest struct {
	Message *string `json:"message,omitempty"`
	Error *bool `json:"error,omitempty"`
	Section *string `json:"section,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSiteBuildLogRequest UpdateSiteBuildLogRequest

// NewUpdateSiteBuildLogRequest instantiates a new UpdateSiteBuildLogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSiteBuildLogRequest() *UpdateSiteBuildLogRequest {
	this := UpdateSiteBuildLogRequest{}
	return &this
}

// NewUpdateSiteBuildLogRequestWithDefaults instantiates a new UpdateSiteBuildLogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSiteBuildLogRequestWithDefaults() *UpdateSiteBuildLogRequest {
	this := UpdateSiteBuildLogRequest{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateSiteBuildLogRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteBuildLogRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateSiteBuildLogRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateSiteBuildLogRequest) SetMessage(v string) {
	o.Message = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UpdateSiteBuildLogRequest) GetError() bool {
	if o == nil || IsNil(o.Error) {
		var ret bool
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteBuildLogRequest) GetErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UpdateSiteBuildLogRequest) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given bool and assigns it to the Error field.
func (o *UpdateSiteBuildLogRequest) SetError(v bool) {
	o.Error = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *UpdateSiteBuildLogRequest) GetSection() string {
	if o == nil || IsNil(o.Section) {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteBuildLogRequest) GetSectionOk() (*string, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *UpdateSiteBuildLogRequest) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *UpdateSiteBuildLogRequest) SetSection(v string) {
	o.Section = &v
}

func (o UpdateSiteBuildLogRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSiteBuildLogRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSiteBuildLogRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateSiteBuildLogRequest := _UpdateSiteBuildLogRequest{}

	err = json.Unmarshal(data, &varUpdateSiteBuildLogRequest)

	if err != nil {
		return err
	}

	*o = UpdateSiteBuildLogRequest(varUpdateSiteBuildLogRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "error")
		delete(additionalProperties, "section")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSiteBuildLogRequest struct {
	value *UpdateSiteBuildLogRequest
	isSet bool
}

func (v NullableUpdateSiteBuildLogRequest) Get() *UpdateSiteBuildLogRequest {
	return v.value
}

func (v *NullableUpdateSiteBuildLogRequest) Set(val *UpdateSiteBuildLogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSiteBuildLogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSiteBuildLogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSiteBuildLogRequest(val *UpdateSiteBuildLogRequest) *NullableUpdateSiteBuildLogRequest {
	return &NullableUpdateSiteBuildLogRequest{value: val, isSet: true}
}

func (v NullableUpdateSiteBuildLogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSiteBuildLogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


