/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the AccountComplianceMaxMembers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountComplianceMaxMembers{}

// AccountComplianceMaxMembers struct for AccountComplianceMaxMembers
type AccountComplianceMaxMembers struct {
	InCompliance *bool `json:"in_compliance,omitempty"`
	Count *int64 `json:"count,omitempty"`
	InNegotiation *bool `json:"in_negotiation,omitempty"`
	ContinuousDeploymentDisabled *bool `json:"continuous_deployment_disabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountComplianceMaxMembers AccountComplianceMaxMembers

// NewAccountComplianceMaxMembers instantiates a new AccountComplianceMaxMembers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountComplianceMaxMembers() *AccountComplianceMaxMembers {
	this := AccountComplianceMaxMembers{}
	return &this
}

// NewAccountComplianceMaxMembersWithDefaults instantiates a new AccountComplianceMaxMembers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountComplianceMaxMembersWithDefaults() *AccountComplianceMaxMembers {
	this := AccountComplianceMaxMembers{}
	return &this
}

// GetInCompliance returns the InCompliance field value if set, zero value otherwise.
func (o *AccountComplianceMaxMembers) GetInCompliance() bool {
	if o == nil || IsNil(o.InCompliance) {
		var ret bool
		return ret
	}
	return *o.InCompliance
}

// GetInComplianceOk returns a tuple with the InCompliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountComplianceMaxMembers) GetInComplianceOk() (*bool, bool) {
	if o == nil || IsNil(o.InCompliance) {
		return nil, false
	}
	return o.InCompliance, true
}

// HasInCompliance returns a boolean if a field has been set.
func (o *AccountComplianceMaxMembers) HasInCompliance() bool {
	if o != nil && !IsNil(o.InCompliance) {
		return true
	}

	return false
}

// SetInCompliance gets a reference to the given bool and assigns it to the InCompliance field.
func (o *AccountComplianceMaxMembers) SetInCompliance(v bool) {
	o.InCompliance = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *AccountComplianceMaxMembers) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountComplianceMaxMembers) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *AccountComplianceMaxMembers) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *AccountComplianceMaxMembers) SetCount(v int64) {
	o.Count = &v
}

// GetInNegotiation returns the InNegotiation field value if set, zero value otherwise.
func (o *AccountComplianceMaxMembers) GetInNegotiation() bool {
	if o == nil || IsNil(o.InNegotiation) {
		var ret bool
		return ret
	}
	return *o.InNegotiation
}

// GetInNegotiationOk returns a tuple with the InNegotiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountComplianceMaxMembers) GetInNegotiationOk() (*bool, bool) {
	if o == nil || IsNil(o.InNegotiation) {
		return nil, false
	}
	return o.InNegotiation, true
}

// HasInNegotiation returns a boolean if a field has been set.
func (o *AccountComplianceMaxMembers) HasInNegotiation() bool {
	if o != nil && !IsNil(o.InNegotiation) {
		return true
	}

	return false
}

// SetInNegotiation gets a reference to the given bool and assigns it to the InNegotiation field.
func (o *AccountComplianceMaxMembers) SetInNegotiation(v bool) {
	o.InNegotiation = &v
}

// GetContinuousDeploymentDisabled returns the ContinuousDeploymentDisabled field value if set, zero value otherwise.
func (o *AccountComplianceMaxMembers) GetContinuousDeploymentDisabled() bool {
	if o == nil || IsNil(o.ContinuousDeploymentDisabled) {
		var ret bool
		return ret
	}
	return *o.ContinuousDeploymentDisabled
}

// GetContinuousDeploymentDisabledOk returns a tuple with the ContinuousDeploymentDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountComplianceMaxMembers) GetContinuousDeploymentDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ContinuousDeploymentDisabled) {
		return nil, false
	}
	return o.ContinuousDeploymentDisabled, true
}

// HasContinuousDeploymentDisabled returns a boolean if a field has been set.
func (o *AccountComplianceMaxMembers) HasContinuousDeploymentDisabled() bool {
	if o != nil && !IsNil(o.ContinuousDeploymentDisabled) {
		return true
	}

	return false
}

// SetContinuousDeploymentDisabled gets a reference to the given bool and assigns it to the ContinuousDeploymentDisabled field.
func (o *AccountComplianceMaxMembers) SetContinuousDeploymentDisabled(v bool) {
	o.ContinuousDeploymentDisabled = &v
}

func (o AccountComplianceMaxMembers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountComplianceMaxMembers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InCompliance) {
		toSerialize["in_compliance"] = o.InCompliance
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.InNegotiation) {
		toSerialize["in_negotiation"] = o.InNegotiation
	}
	if !IsNil(o.ContinuousDeploymentDisabled) {
		toSerialize["continuous_deployment_disabled"] = o.ContinuousDeploymentDisabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountComplianceMaxMembers) UnmarshalJSON(data []byte) (err error) {
	varAccountComplianceMaxMembers := _AccountComplianceMaxMembers{}

	err = json.Unmarshal(data, &varAccountComplianceMaxMembers)

	if err != nil {
		return err
	}

	*o = AccountComplianceMaxMembers(varAccountComplianceMaxMembers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "in_compliance")
		delete(additionalProperties, "count")
		delete(additionalProperties, "in_negotiation")
		delete(additionalProperties, "continuous_deployment_disabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountComplianceMaxMembers struct {
	value *AccountComplianceMaxMembers
	isSet bool
}

func (v NullableAccountComplianceMaxMembers) Get() *AccountComplianceMaxMembers {
	return v.value
}

func (v *NullableAccountComplianceMaxMembers) Set(val *AccountComplianceMaxMembers) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountComplianceMaxMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountComplianceMaxMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountComplianceMaxMembers(val *AccountComplianceMaxMembers) *NullableAccountComplianceMaxMembers {
	return &NullableAccountComplianceMaxMembers{value: val, isSet: true}
}

func (v NullableAccountComplianceMaxMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountComplianceMaxMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


