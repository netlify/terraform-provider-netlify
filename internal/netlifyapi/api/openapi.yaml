openapi: 3.1.0
info:
  description: |
    Netlify is a hosting service for the programmable web. It understands your
    documents and provides an API to handle atomic deploys of websites, manage
    form submissions, inject JavaScript snippets, and much more. This is a
    REST-style API that uses JSON for serialization and OAuth 2 for
    authentication.


    This document is an OpenAPI reference for the Netlify API that you can
    explore. For more detailed instructions for common uses, please visit the
    [online documentation](https://docs.netlify.com/api/get-started/). Visit our
    Community forum to join the conversation about
    [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).


    Additionally, we have two API clients for your convenience:
    - [Go Client](https://github.com/netlify/open-api#go-client)
    - [JS Client](https://github.com/netlify/js-client)
  termsOfService: https://www.netlify.com/legal/terms-of-use/
  title: Netlify's API documentation
  version: "1.0"
  x-logo:
    url: netlifyapi.png
    href: https://docs.netlify.com/
    altText: Netlify
externalDocs:
  description: Getting Started in Netlfy Docs
  url: https://docs.netlify.com/api/get-started/
servers:
- url: https://api.netlify.com/
security:
- netlifyAuth: []
- bearerAuth: []
tags:
- description: This document describes the API for revoking access tokens.
  name: Access tokens
- description: "Endpoints for managing accounts. In the Netlify UI, accounts are known\
    \ as teams."
  name: Accounts
- description: Endpoints for managing Analytics.
  name: Analytics
- description: Endpoints for managing build hooks.
  name: Build Hooks
- description: ""
  name: Builds
- description: Endpoints for managing deploy keys.
  name: Deploy keys
- description: Endpoints for managing deploys.
  name: Deploys
- description: Endpoints for managing dev server hooks.
  name: Dev Server Hooks
- description: Endpoints for managing DNS zones and records.
  name: DNS zones
- description: |-
    Endpoints to retrieve, create, update, and delete environment variables.
    During the beta period, you must opt in to the new environment variable experience
    using the Netlify UI before you can use these endpoints to set contextual values and specific scopes.
  name: Environment variables
- description: Endpoints for managing files for sites and deploys.
  name: Files
- description: ""
  name: Form submissions
- description: Endpoints for managing forms.
  name: Forms
- description: Endpoints for managing functions.
  name: Functions
- description: Endpoints for managing outgoing hooks with sites and forms.
  name: Hooks
- description: "Endpoints for managing members. The member endpoints help you invite,\
    \ retrieve, update, or delete members of a team. Accounts are equivalent to teams."
  name: Members
- description: Endpoints for managing site metadata.
  name: Metadata
- description: |-
    This document describes the API for creating and reading OAuth tickets,
    or authorizing and exchanging tickets.
  name: OAuth tickets
- description: Endpoints for managing organization receipts.
  name: Organization receipts
- description: This document describes the API for organizations
  name: Organizations
- description: Endpoints for managing payment methods.
  name: Payment Methods
- description: Endpoints for managing services instances. Services are also known
    as Add-ons
  name: Service instances
- description: Endpoints for managing services. Services are also known as Add-ons
  name: Services
- description: |-
    Endpoints for managing private assets.
    _This endpoint is only available to certain sites._
  name: Site assets
- description: Endpoints for managing sites.
  name: Sites
- description: Endpoints for managing TLS certificates.
  name: SNI certificates
- description: Endpoints for managing snippets.
  name: Snippets
- description: ""
  name: Split tests
- description: Endpoints for managing users.
  name: Users
- description: Endpoints to manage WorkOS SCIM integration.
  name: WorkOSScim
paths:
  /api/v1/access_tokens/revoke:
    delete:
      description: |-
        Revokes the token that the client is currently using to access to the
        API.
      operationId: revokeAccessToken
      parameters: []
      responses:
        "204":
          description: successfully revoked
      tags:
      - Access tokens
      x-controller: api/v1/access_tokens
      x-action: revoke
  /api/v1/accounts/{account_id}/builds/status:
    get:
      operationId: getAccountBuildStatus
      parameters:
      - description: account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: site_id
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      - description: state
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountBuild'
                type: array
          description: ""
      tags:
      - Builds
      x-controller: api/v1/account_builds
      x-action: status
  /api/v1/{account_id}/members:
    get:
      description: Returns a list of members for the account (team).
      operationId: listMembersForAccount
      parameters:
      - description: Account ID or slug
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: Search for members in email field
        explode: true
        in: query
        name: emails
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      - description: Filter members by role(s)
        explode: true
        in: query
        name: roles
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter members by a site
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      - description: Field of member to sort by (descending). When reviewer role is
          specified self_invite_pending and invite_pending are the defaults.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - id
          - full_name
          - email
          - updated_at
          - created_at
          - self_invite_pending
          - invite_pending
          type: string
        style: form
      - description: Filter members by invite state(s)
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            enum:
            - invite_pending
            - self_invite_pending
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
          description: ""
      tags:
      - Members
      x-controller: api/v1/account_members
      x-action: index
    post:
      description: Creates a new member for the account (team).
      operationId: addMemberToAccount
      parameters:
      - description: Account ID or slug
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: Build ID member was invited from
        explode: true
        in: query
        name: build_id
        required: false
        schema:
          type: string
        style: form
      - description: Email to invite to the account
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      - description: Role of the new member
        explode: true
        in: query
        name: role
        required: false
        schema:
          enum:
          - Reviewer
          - Billing Admin
          - Content Editor
          - Publisher
          - Developer Lite
          - Developer
          - Owner
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ""
      tags:
      - Members
      x-controller: api/v1/account_members
      x-action: create
  /api/v1/{account_slug}/sites:
    get:
      description: Returns a list of sites for an account (team).
      operationId: listSitesForAccount
      parameters:
      - description: The account slug
        explode: false
        in: path
        name: account_slug
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - owner
          - guest
          type: string
        style: form
      - description: name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: page
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: per_page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: sort_by
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - created_at
          - updated_at
          - alphabetical
          - published_at
          type: string
        style: form
      - description: "When provided, returns only SSO/password protected / unprotected\
          \ sites"
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          enum:
          - protected
          - public
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: ""
      tags:
      - Sites
      x-controller: api/v1/account_sites
      x-action: index
    post:
      description: Creates a site for an account (team).
      operationId: createSiteInTeam
      parameters:
      - description: The account slug
        explode: false
        in: path
        name: account_slug
        required: true
        schema:
          type: string
        style: simple
      - description: configure_dns
        explode: true
        in: query
        name: configure_dns
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      tags:
      - Sites
      x-controller: api/v1/account_sites
      x-action: create
  /api/v1/accounts:
    get:
      description: |-
        Returns a list of accounts for the current user.
        The accounts list excludes accounts that only allow SSO if the current
        user is not logged in with SSO. If the user is logged in with SSO, all
        accounts are listed.
      operationId: listAccountsForUser
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: ""
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: index
    post:
      description: Creates an account (team).
      operationId: createAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAccount_request'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: create
  /api/v1/accounts/{account_id}:
    delete:
      description: Cancels an account (team).
      operationId: cancelAccount
      parameters:
      - description: The ID of the account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: destroy
    get:
      description: Returns the details of an account (team).
      operationId: getAccount
      parameters:
      - description: The ID of the account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        "404":
          description: Not Found
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: show
    put:
      description: Updates an account (team).
      operationId: updateAccount
      parameters:
      - description: The ID of the account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateParams'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        "422":
          description: Unprocessable Entity
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: update
  /api/v1/accounts/types:
    get:
      description: Returns a list of account types.
      operationId: listAccountTypesForUser
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountType'
          description: ""
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: types
  /api/v1/accounts/{account_id}/audit:
    get:
      description: Return an account's audit logs.
      operationId: listAccountAuditEvents
      parameters:
      - description: The ID of the account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter logs by one of the accepted types
        explode: true
        in: query
        name: log_type
        required: false
        schema:
          items:
            enum:
            - team
            - site
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuditLog'
                type: array
          description: ""
      tags:
      - Accounts
      x-controller: api/v1/accounts
      x-action: audit
  /api/v1/sites/{site_id}/analytics:
    post:
      description: Enables Analytics for the site.
      operationId: enableAnalytics
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: ""
        "422":
          description: "Payment Method not found, Analytics already enabled"
      tags:
      - Analytics
      x-controller: api/v1/analytics
      x-action: create
  /api/v1/sites/{site_id}/analytics/{id}:
    delete:
      description: Disables Analytics for the site.
      operationId: disableAnalytics
      parameters:
      - description: Scope response to id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "422":
          description: Error during disabling
      tags:
      - Analytics
      x-controller: api/v1/analytics
      x-action: destroy
  /api/v1/sites/{site_id}/assets:
    get:
      description: |-
        Returns a list of assets for the site.
        _This endpoint is only available to certain sites._
      operationId: listSiteAssets
      parameters:
      - description: filter
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: search
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Asset'
                type: array
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: index
    post:
      description: |-
        Creates an asset for the site.
        _This endpoint is only available to certain sites._
      operationId: createSiteAsset
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateParams'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCreateResult'
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: create
  /api/v1/sites/{site_id}/assets/{asset_id}:
    delete:
      description: |-
        Deletes an asset.
        _This endpoint is only available to certain sites._
      operationId: deleteSiteAsset
      parameters:
      - description: The asset ID
        explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: destroy
    get:
      description: |-
        Returns an asset for the site.
        _This endpoint is only available to certain sites._
      operationId: getSiteAssetInfo
      parameters:
      - description: The asset ID
        explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: show
    put:
      description: |-
        Updates a state of the asset.
        _This endpoint is only available to certain sites._
      operationId: updateSiteAsset
      parameters:
      - description: The asset ID
        explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The state of the asset
        explode: true
        in: query
        name: state
        required: true
        schema:
          enum:
          - prepared
          - uploaded
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: update
  /api/v1/sites/{site_id}/assets/{asset_id}/public_signature:
    get:
      description: |-
        Returns a URL of the asset. If the asset isn't publicly visible, returns
        the signed URL of the asset.
        _This endpoint is only available to certain sites._
      operationId: getSiteAssetPublicSignature
      parameters:
      - description: The asset ID
        explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSiteAssetPublicSignature_200_response'
          description: ""
      tags:
      - Site assets
      x-controller: api/v1/assets
      x-action: public_signature
  /api/v1/billing/payment_methods:
    get:
      description: |-
        Returns available payment methods for the current user. Returns list
        of payment methods for the account if account_id is provided.
      operationId: listPaymentMethodsForUser
      parameters:
      - description: The account ID
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentMethod'
                type: array
          description: ""
      tags:
      - Payment Methods
      x-controller: api/v1/billing/payment_methods
      x-action: index
  /api/v1/sites/{site_id}/build_hooks:
    get:
      description: Returns a list of build hooks for a site.
      operationId: listSiteBuildHooks
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildHook'
                type: array
          description: ""
      tags:
      - Build Hooks
      x-controller: api/v1/build_hooks
      x-action: index
    post:
      description: Creates a build hook for a site.
      operationId: createSiteBuildHook
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBuildHook'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildHook'
          description: ""
      tags:
      - Build Hooks
      x-controller: api/v1/build_hooks
      x-action: create
  /api/v1/sites/{site_id}/build_hooks/{id}:
    delete:
      description: Deletes a build hook for a site.
      operationId: deleteSiteBuildHook
      parameters:
      - description: The build hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Build Hooks
      x-controller: api/v1/build_hooks
      x-action: destroy
    get:
      description: Returns a build hook for a site.
      operationId: getSiteBuildHook
      parameters:
      - description: The build hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildHook'
          description: ""
      tags:
      - Build Hooks
      x-controller: api/v1/build_hooks
      x-action: show
    put:
      description: Updates a build hook for a site.
      operationId: updateSiteBuildHook
      parameters:
      - description: The build hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBuildHook'
        description: ""
        required: true
      responses:
        "204":
          description: ""
      tags:
      - Build Hooks
      x-controller: api/v1/build_hooks
      x-action: update
  /api/v1/builds/{build_id}:
    get:
      operationId: getSiteBuild
      parameters:
      - description: build_id
        explode: false
        in: path
        name: build_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ""
      tags:
      - Builds
      x-controller: api/v1/builds
      x-action: show
  /sites/{site_id}/builds:
    get:
      operationId: listSiteBuilds
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Build'
                type: array
          description: ""
      tags:
      - Builds
      x-controller: api/v1/builds
      x-action: index
  /api/v1/sites/{site_id}/builds:
    post:
      description: "Runs a build for a site. The build will be scheduled to run at\
        \ the first opportunity, but it might not start immediately if insufficient\
        \ account build capacity is available."
      operationId: createSiteBuild
      parameters:
      - description: The branch to build; defaults to main branch
        explode: true
        in: query
        name: branch
        required: false
        schema:
          type: string
        style: form
      - description: Whether to clear the build cache before building
        explode: true
        in: query
        name: clear_cache
        required: false
        schema:
          type: boolean
        style: form
      - description: The build image tag to use for the build
        explode: true
        in: query
        name: image
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The build template to use for the build
        explode: true
        in: query
        name: template_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ""
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Builds
      x-controller: api/v1/builds
      x-action: create
  /api/v1/builds/{build_id}/log:
    post:
      description: Add a message to the build log.
      operationId: updateSiteBuildLog
      parameters:
      - description: build_id
        explode: false
        in: path
        name: build_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSiteBuildLog_request'
        description: ""
        required: true
      responses:
        "204":
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateSiteBuildLog_422_response'
          description: Unprocessable Entity
      tags:
      - Builds
      x-controller: api/v1/builds
      x-action: log
  /api/v1/builds/{build_id}/start:
    post:
      description: Mark that the build has started.
      operationId: notifyBuildStart
      parameters:
      - description: build_id
        explode: false
        in: path
        name: build_id
        required: true
        schema:
          type: string
        style: simple
      - description: build_version
        explode: true
        in: query
        name: build_version
        required: false
        schema:
          type: string
        style: form
      - description: buildbot_version
        explode: true
        in: query
        name: buildbot_version
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: ""
      tags:
      - Builds
      x-controller: api/v1/builds
      x-action: start
  /api/v1/deploy_keys:
    get:
      description: Returns a list of deploy keys.
      operationId: listDeployKeys
      parameters:
      - description: Page of results to retrieve. Default is 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of deploys to retrieve per page. The default and maximum
          value is 100.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployKey'
                type: array
          description: ""
      tags:
      - Deploy keys
      x-controller: api/v1/deploy_keys
      x-action: index
    post:
      description: Creates a deploy key for the current user.
      operationId: createDeployKey
      parameters: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployKey'
          description: ""
      tags:
      - Deploy keys
      x-controller: api/v1/deploy_keys
      x-action: create
  /api/v1/deploy_keys/{key_id}:
    delete:
      description: Deletes a deploy key.
      operationId: deleteDeployKey
      parameters:
      - description: The deploy key ID
        explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Deploy keys
      x-controller: api/v1/deploy_keys
      x-action: destroy
    get:
      description: Returns a deploy key.
      operationId: getDeployKey
      parameters:
      - description: The deploy key ID
        explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployKey'
          description: ""
      tags:
      - Deploy keys
      x-controller: api/v1/deploy_keys
      x-action: show
  /api/v1/sites/{site_id}/deploys:
    get:
      description: Lists the deploys of a site.
      operationId: listSiteDeploys
      parameters:
      - description: "If provided, the branch on which to filter the list of deploys."
        explode: true
        in: query
        name: branch
        required: false
        schema:
          type: string
        style: form
      - description: "If provided, filters the list of deploys to just deploy previews."
        explode: true
        in: query
        name: deploy-previews
        required: false
        schema:
          type: boolean
        style: form
      - description: A Unix timestamp to filter for deploys created since a certain
          time
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: "If provided, sorts the list of deploys by published_at date,\
          \ with the most recent deploy first."
        explode: true
        in: query
        name: latest-published
        required: false
        schema:
          type: boolean
        style: form
      - description: Page of results to retrieve. Default is 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of deploys to retrieve per page. The default and maximum
          value is 100.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: "If provided, filters the list of deploys to just production\
          \ deploys."
        explode: true
        in: query
        name: production
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: "If provided, the state on which to filter the list of deploys."
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - new
          - pending_review
          - accepted
          - rejected
          - enqueued
          - building
          - uploading
          - uploaded
          - preparing
          - prepared
          - processing
          - ready
          - error
          - retrying
          type: string
        style: form
      - description: A Unix timestamp to filter for deploys created before a certain
          time
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deploy'
                type: array
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: index
    post:
      description: Creates a deploy for a site.
      operationId: createSiteDeploy
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The title of the deploy
        explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSiteDeploy_request'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: create
  /api/v1/deploys/{deploy_id}:
    delete:
      description: Marks a deploy for deletion.
      operationId: deleteDeploy
      parameters:
      - description: The ID of the deploy to delete
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: "/api/v1/deploys/{deploy_id}_DELETE"
    get:
      description: Returns details about a deploy.
      operationId: getDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: "/api/v1/deploys/{deploy_id}_GET"
  /api/v1/sites/{site_id}/deploys/{deploy_id}:
    delete:
      description: Marks a deploy for deletion.
      operationId: deleteSiteDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: destroy
    get:
      description: Returns details about a deploy.
      operationId: getSiteDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: show
    put:
      description: Updates a deploy for a site.
      operationId: updateSiteDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSiteDeploy_request'
        description: ", await_ready_signal: boolean]"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: update
  /api/v1/sites/{site_id}/deploys/{deploy_id}/restore:
    post:
      description: Deploys a different version of a site.
      operationId: restoreSiteDeploy
      parameters:
      - description: The ID of the deploy to restore the site to
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: restore
  /api/v1/deploys/{deploy_id}/lock:
    post:
      description: Locks a specific deploy (subsequent deploys will be built but not
        published).
      operationId: lockDeploy
      parameters:
      - description: The ID of the deploy to lock
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: lock
  /api/v1/deploys/{deploy_id}/unlock:
    post:
      description: Unlocks a specific deploy.
      operationId: unlockDeploy
      parameters:
      - description: The ID of the deploy to unlock
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: unlock
  /api/v1/deploys/{deploy_id}/cancel:
    post:
      description: Cancels a deploy.
      operationId: cancelSiteDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: cancel
  /api/v1/deploys/{deploy_id}/simple:
    get:
      description: Returns public information about a deploy.
      operationId: getSimplePublicDeploy
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deploy_Simple'
          description: ""
      tags:
      - Deploys
      x-controller: api/v1/deploys
      x-action: "/api/v1/deploys/{deploy_id}/simple_GET"
  /api/v1/sites/{site_id}/dev_server_hooks:
    get:
      description: Returns a list of dev server hooks for a site.
      operationId: listSiteDevServerHooks
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DevServerHook'
                type: array
          description: ""
      tags:
      - Dev Server Hooks
      x-controller: api/v1/dev_server_hooks
      x-action: index
    post:
      description: Creates a dev server hook for a site.
      operationId: createSiteDevServerHook
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevServerHook'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevServerHook'
          description: ""
      tags:
      - Dev Server Hooks
      x-controller: api/v1/dev_server_hooks
      x-action: create
  /api/v1/sites/{site_id}/dev_server_hooks/{id}:
    delete:
      description: Deletes a dev server hook for a site.
      operationId: deleteSiteDevServerHook
      parameters:
      - description: The dev server hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Dev Server Hooks
      x-controller: api/v1/dev_server_hooks
      x-action: destroy
    get:
      description: Returns a dev server hook for a site.
      operationId: getSiteDevServerHook
      parameters:
      - description: The dev server hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevServerHook'
          description: ""
      tags:
      - Dev Server Hooks
      x-controller: api/v1/dev_server_hooks
      x-action: show
    put:
      description: Updates a dev server hook for a site.
      operationId: updateSiteDevServerHook
      parameters:
      - description: The dev server hook ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevServerHook'
        description: ""
        required: true
      responses:
        "204":
          description: ""
      tags:
      - Dev Server Hooks
      x-controller: api/v1/dev_server_hooks
      x-action: update
  /api/v1/dns_zones/{zone_id}/dns_records:
    get:
      description: Returns a list of DNS records.
      operationId: getDnsRecords
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsRecord'
                type: array
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_records
      x-action: index
    post:
      description: Creates a DNS record.
      operationId: createDnsRecord
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRecordCreateParams'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRecord'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_records
      x-action: create
  /api/v1/dns_zones/{zone_id}/dns_records/{dns_record_id}:
    delete:
      description: Deletes a DNS record.
      operationId: deleteDnsRecord
      parameters:
      - description: The ID of the DNS record
        explode: false
        in: path
        name: dns_record_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_records
      x-action: destroy
    get:
      description: Returns a DNS record.
      operationId: getIndividualDnsRecord
      parameters:
      - description: The ID of the DNS record
        explode: false
        in: path
        name: dns_record_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRecord'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_records
      x-action: show
  /api/v1/dns_zones:
    get:
      description: |-
        Returns a list of DNS zones. If the `account_slug` is passed, returns
        the list for the account. Otherwise, returns the list for all DNS zones
        that the current user has access to.
      operationId: getDnsZones
      parameters:
      - description: The account slug
        explode: true
        in: query
        name: account_slug
        required: false
        schema:
          type: string
        style: form
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsZone'
                type: array
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: index
    post:
      description: Creates a DNS zone.
      operationId: createDnsZone
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneCreateParams'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZone'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: create
  /api/v1/dns_zones/{zone_id}:
    delete:
      description: Deletes a DNS zone.
      operationId: deleteDnsZone
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: destroy
    get:
      description: Returns a DNS zone.
      operationId: getDnsZone
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZone'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: show
  /api/v1/dns_zones/{zone_id}/enable-ipv6:
    put:
      description: Enables IPv6 with a DNS zone.
      operationId: enableDnsZoneIpv6
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZone'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: enable_ipv6
  /api/v1/dns_zones/{zone_id}/transfer:
    put:
      description: Transfers a DNS zone to the different account.
      operationId: transferDnsZone
      parameters:
      - description: The ID or the name of the DNS zone
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneTransferParams'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferDnsZone_200_response'
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: transfer
  /api/v1/sites/{site_id}/dns:
    get:
      description: Returns a list of the DNS configuration for a site.
      operationId: getDNSForSite
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsZone'
                type: array
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: show_dns_configuration
    put:
      description: |-
        Configures all automatic DNS entries for a site. Based on the custom
        domain and domain aliases, create DNS zones and/or records if they
        don't exist already.
        This configuration usually runs automatically when the custom domain or
        domain aliases are modified.
      operationId: configureDNSForSite
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsZone'
                type: array
          description: ""
      tags:
      - DNS zones
      x-controller: api/v1/dns_zones
      x-action: update_dns_configuration
  /api/v1/accounts/{account_id}/env:
    get:
      description: Returns all environment variables for an account or site. An account
        corresponds to a team in the Netlify UI.
      operationId: getEnvVars
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by deploy context
        explode: true
        in: query
        name: context
        required: false
        schema:
          enum:
          - all
          - dev
          - branch-deploy
          - deploy-preview
          - production
          type: string
        style: form
      - description: Filter by scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          enum:
          - builds
          - functions
          - runtime
          - post_processing
          type: string
        style: form
      - description: "If specified, only return environment variables set on this\
          \ site"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvVar'
                type: array
          description: ""
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to create
            environment variables)
        "404":
          description: Not Found (site_id not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: index
    post:
      description: Creates new environment variables. Granular scopes are available
        on Pro plans and above.
      operationId: createEnvVars
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: Optional parameter that identifies where the request is coming
          from (added originally for telemetry purposes)
        explode: true
        in: query
        name: client
        required: false
        schema:
          type: string
        style: form
      - description: "If provided, create an environment variable on the site level,\
          \ not the account level"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EnvVar'
              type: array
        description: The array of environment variables to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvVar'
                type: array
          description: ""
        "400":
          description: Bad Request (request structured incorrectly)
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to create
            environment variables)
        "404":
          description: Not Found (site_id not found)
        "409":
          description: Conflict (key already exists on site/team)
        "422":
          description: Unprocessable Entity (catchall for other error types)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: create
  /api/v1/sites/{site_id}/env:
    get:
      description: Returns all environment variables for a site.
      operationId: getSiteEnvVars
      parameters:
      - description: Filter by deploy context
        explode: true
        in: query
        name: context
        required: false
        schema:
          enum:
          - all
          - dev
          - branch-deploy
          - deploy-preview
          - production
          type: string
        style: form
      - description: Filter by scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          enum:
          - builds
          - functions
          - runtime
          - post_processing
          type: string
        style: form
      - description: Scope response to site_id
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvVar'
                type: array
          description: ""
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to create
            environment variables)
        "404":
          description: Not Found (site_id not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: site_index_for_openapi
  /api/v1/accounts/{account_id}/env/{env_key}:
    delete:
      description: Deletes an environment variable.
      operationId: deleteEnvVar
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The environment variable key (case-sensitive)
        explode: false
        in: path
        name: env_key
        required: true
        schema:
          type: string
        style: simple
      - description: "If provided, delete the environment variable from this site"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content (success)
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to delete
            environment variables)
        "404":
          description: Not Found (site_id or env var not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: destroy
    get:
      description: Returns an individual environment variable.
      operationId: getEnvVar
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The environment variable key (case-sensitive)
        explode: false
        in: path
        name: env_key
        required: true
        schema:
          type: string
        style: simple
      - description: "If provided, return the environment variable for a specific\
          \ site (no merging is performed)"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVar'
          description: ""
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to create
            environment variables)
        "404":
          description: Not Found (no environment variable found for the account or
            site)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: show
    patch:
      description: (SET) Updates or creates a value on an environment variable.
      operationId: setEnvVarValue
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The existing environment variable key name (case-sensitive)
        explode: false
        in: path
        name: env_key
        required: true
        schema:
          type: string
        style: simple
      - description: "If provided, update an environment variable set on this site"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvVarSet'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVar'
          description: ""
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to update
            environment variables)
        "404":
          description: Not Found (site_id or env var not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: set_value
    put:
      description: Updates an existing environment variable and all of its values.
        Existing values will be replaced by values provided.
      operationId: updateEnvVar
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The existing environment variable key name (case-sensitive)
        explode: false
        in: path
        name: env_key
        required: true
        schema:
          type: string
        style: simple
      - description: "The existing or new name of the key, if you wish to rename it\
          \ (case-sensitive)"
        explode: true
        in: query
        name: key
        required: true
        schema:
          type: string
        style: form
      - description: "If provided, update an environment variable set on this site"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEnvVar_request'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVar'
          description: ""
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to update
            environment variables)
        "404":
          description: Not Found (site_id or env var not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: update
  /api/v1/accounts/{account_id}/env/{env_key}/value/{id}:
    delete:
      description: Deletes a specific environment variable value.
      operationId: deleteEnvVarValue
      parameters:
      - description: Scope response to account_id
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The environment variable key name (case-sensitive)
        explode: false
        in: path
        name: env_key
        required: true
        schema:
          type: string
        style: simple
      - description: The environment variable value's ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "If provided, delete the value from an environment variable on\
          \ this site"
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content (success)
        "401":
          description: Unauthorized (not logged in; not on team; not allowed to delete
            environment variables)
        "404":
          description: Not Found (site_id or id not found)
      tags:
      - Environment variables
      x-controller: api/v1/environment_variables
      x-action: destroy_value
  /api/v1/sites/{site_id}/files:
    get:
      description: Returns a list of files for a site.
      operationId: listSiteFiles
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SiteFile'
                type: array
          description: ""
      tags:
      - Files
      x-controller: api/v1/files
      x-action: index
  /api/v1/sites/{site_id}/files/{file_path}:
    get:
      description: Returns a file for a site by a path name.
      operationId: getSiteFileByPathName
      parameters:
      - description: The file path of the site
        explode: false
        in: path
        name: file_path
        required: true
        schema:
          type: string
        style: simple
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - Files
      x-controller: api/v1/files
      x-action: show
  /api/v1/sites/{site_id}/forms:
    get:
      description: Returns a list of forms for the site.
      operationId: listSiteForms
      parameters:
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Form'
                type: array
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Forms
      x-controller: api/v1/forms
      x-action: index
  /api/v1/sites/{site_id}/forms/{form_id}:
    delete:
      description: Deletes a form and all its submissions.
      operationId: deleteSiteForm
      parameters:
      - description: The ID or name of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Forms
      x-controller: api/v1/forms
      x-action: destroy
  /api/v1/deploys/{deploy_id}/functions/{name}:
    put:
      description: Uploads a function of the deploy.
      operationId: uploadDeployFunction
      parameters:
      - description: The ID of the deploy
        explode: false
        in: path
        name: deploy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the function
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The runtime of the function
        explode: true
        in: query
        name: runtime
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
        description: file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadDeployFunction_200_response'
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "422":
          description: ""
      tags:
      - Functions
      x-controller: api/v1/functions
      x-action: update
  /api/v1/hooks:
    get:
      description: |-
        Returns a list of outgoing hooks of site. You can pass form_id or
        event to filter the result.
      operationId: listHooksBySiteId
      parameters:
      - description: The name of the hook event
        explode: true
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - description: form_id
        explode: true
        in: query
        name: form_id
        required: false
        schema:
          type: string
        style: form
      - description: site_id
        explode: true
        in: query
        name: site_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingHook'
                type: array
          description: ""
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: index
    post:
      description: Creates a new outgoing hook.
      operationId: createHookBySiteId
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOutgoingHook'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingHook'
          description: ""
        "404":
          description: Associated form with given form_id or form_name not found
        "422":
          description: Invalid parameters
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: create
  /api/v1/hooks/{hook_id}:
    delete:
      description: Deletes an outgoing hook.
      operationId: deleteHook
      parameters:
      - description: The hook ID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: destroy
    get:
      description: Returns an outgoing hook.
      operationId: getHook
      parameters:
      - description: The hook ID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingHook'
          description: ""
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: show
    put:
      description: Updates an outgoing hook.
      operationId: updateHook
      parameters:
      - description: The hook ID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutgoingHook'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingHook'
          description: ""
        "404":
          description: Associated form with given form_id not found
        "422":
          description: Invalid parameters
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: update
  /api/v1/hooks/types:
    get:
      description: |-
        Returns a list of hook types that are available.

        Returns only a list of available hook types to the site if the `site_id`.
        is given.
      operationId: listHookTypes
      parameters:
      - description: site_id
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingHookType'
                type: array
          description: ""
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: types
  /api/v1/hooks/{hook_id}/enable:
    post:
      description: Enables an outgoing hook that was disabled due to the error count.
      operationId: enableHook
      parameters:
      - description: The hook ID
        explode: false
        in: path
        name: hook_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingHook'
          description: ""
      tags:
      - Hooks
      x-controller: api/v1/hooks
      x-action: enable
  /api/v1/sites/{site_id}/metadata:
    get:
      description: Returns metadata for a site.
      operationId: getSiteMetadata
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      tags:
      - Metadata
      x-controller: api/v1/metadata
      x-action: show
    put:
      description: Updates metadata for a site.
      operationId: updateSiteMetadata
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      tags:
      - Metadata
      x-controller: api/v1/metadata
      x-action: update
  /api/v1/oauth/tickets/{ticket_id}:
    get:
      description: Returns an OAuth ticket by ID.
      operationId: showTicket
      parameters:
      - description: The ticket ID
        explode: false
        in: path
        name: ticket_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth_Ticket'
          description: ""
        "404":
          description: OAuth ticket not found
      tags:
      - OAuth tickets
      x-controller: api/v1/oauth/tickets
      x-action: show
  /api/v1/oauth/tickets:
    post:
      description: Creates an OAuth ticket with the OAuth application.
      operationId: createTicket
      parameters:
      - description: The UID of the OAuth application
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth_Ticket'
          description: Created
        "401":
          description: OAuth application not found
      tags:
      - OAuth tickets
      x-controller: api/v1/oauth/tickets
      x-action: create
  /api/v1/oauth/tickets/{ticket_id}/authorize:
    post:
      description: Authorizes a current user with the OAuth ticket.
      operationId: authorizeWithTicket
      parameters:
      - description: Whether token should allow API access to currently authenticated
          SAML protected account
        explode: true
        in: query
        name: grant_saml
        required: false
        schema:
          type: boolean
        style: form
      - description: The ticket ID
        explode: false
        in: path
        name: ticket_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Authorized
        "404":
          description: OAuth ticket not found
      tags:
      - OAuth tickets
      x-controller: api/v1/oauth/tickets
      x-action: authorize
  /api/v1/oauth/tickets/{ticket_id}/exchange:
    post:
      description: Exchanges an OAuth ticket to an OAuth token.
      operationId: exchangeTicket
      parameters:
      - description: The ticket ID
        explode: false
        in: path
        name: ticket_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doorkeeper_AccessToken'
          description: Created
        "401":
          description: OAuth ticket not authorized
        "404":
          description: OAuth ticket not found
      tags:
      - OAuth tickets
      x-controller: api/v1/oauth/tickets
      x-action: exchange
  /api/v1/organizations/{organization_id}/receipts:
    get:
      description: Returns all receipts for an organization.
      operationId: getOrganizationReceipts
      parameters:
      - description: The organization ID or slug
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number to show per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Receipt'
                type: array
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrganizationReceipts_422_response'
          description: ""
        "401":
          description: Only owners are allowed to view receipts
      tags:
      - Organization receipts
      x-controller: api/v1/organization_receipts
      x-action: index
  /api/v1/organizations/{organization_id}/receipts/{id}:
    get:
      description: Returns a specific receipt for an organization.
      operationId: getOrganizationReceipt
      parameters:
      - description: The receipt ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The organization ID or slug
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: "Returns a specific receipt for an organization, either HTML\
            \ or PDF format"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrganizationReceipts_422_response'
          description: ""
        "401":
          description: Only owners are allowed to view receipts
      tags:
      - Organization receipts
      x-controller: api/v1/organization_receipts
      x-action: show
  /api/v1/organizations:
    get:
      description: Returns a list of all organizations that the current user is an
        owner of.
      operationId: listOrganizationsForUser
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: index
  /api/v1/organizations/:id:
    get:
      description: Returns an organization.
      operationId: getOrganization
      parameters:
      - description: The organization ID
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: show
    put:
      description: Updates an organization.
      operationId: updateOrganization
      parameters:
      - description: The organization ID
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: The name of the organization
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The slug of the organization
        explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: update
  /api/v1/organizations/{id}/logo:
    delete:
      description: Removes an organizations logo.
      operationId: deleteOrganizationLogo
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "401":
          description: Only owners are allowed to remove the logo
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: destroy_logo
    post:
      description: "Uploads an organization logo as multipart/form-data. Maximum file\
        \ size is 1 MB. Accepts JPEG, PNG, GIF image formats."
      operationId: createOrganizationLogo
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSiteAssetPublicSignature_200_response'
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrganizationReceipts_422_response'
          description: ""
        "401":
          description: Only owners are allowed to upload logo
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: logo
  /api/v1/organizations/{id}/accounts:
    get:
      description: Get all accounts associated to an organization.
      operationId: getOrganizationAccounts
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAccount'
                type: array
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: accounts
  /api/v1/organizations/{id}/invoices:
    get:
      description: Lists all the invoices for an organization.
      operationId: getOrganizationInvoices
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Billing_ZuoraInvoice'
                type: array
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: invoices
  /api/v1/organizations/{id}/invoices/{invoice_id}:
    get:
      description: Returns the invoice PDF for an organization.
      operationId: getOrganizationInvoice
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The invoice ID
        explode: false
        in: path
        name: invoice_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: invoice_pdf
  /api/v1/organizations/{id}/client_token:
    get:
      description: Returns a client token for an organization to use with credit card
        payments.
      operationId: getOrganizationClientToken
      parameters:
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrganizationClientToken_200_response'
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: client_token
  /api/v1/organizations/{id}/payments:
    post:
      description: Sets the payment method for an organization.
      operationId: createOrganizationPayment
      parameters:
      - description: The payment method data
        explode: true
        in: query
        name: data
        required: false
        schema:
          $ref: '#/components/schemas/createOrganizationPayment_data_parameter'
        style: form
      - description: Boolean to allow enterprise accounts to change payment type from
          ACH
        explode: true
        in: query
        name: enterprise_exception
        required: false
        schema:
          type: boolean
        style: form
      - description: The organization ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The type of payment method
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - card
          type: string
        style: form
      - description: The Zuora payment method ID
        explode: true
        in: query
        name: zuora_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ""
      tags:
      - Organizations
      x-controller: api/v1/organizations
      x-action: payments
  /api/v1/sites/{site_id}/services/{addon}/instances:
    post:
      operationId: createServiceInstance
      parameters:
      - description: The slug of the service
        explode: false
        in: path
        name: addon
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: ""
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Service instances
      x-controller: api/v1/service_instances
      x-action: create
  /api/v1/sites/{site_id}/services/{addon}/instances/{instance_id}:
    delete:
      operationId: deleteServiceInstance
      parameters:
      - description: The slug of the service
        explode: false
        in: path
        name: addon
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the service instance
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Service instances
      x-controller: api/v1/service_instances
      x-action: destroy
    get:
      operationId: showServiceInstance
      parameters:
      - description: The slug of the service
        explode: false
        in: path
        name: addon
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the service instance
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: ""
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Service instances
      x-controller: api/v1/service_instances
      x-action: show
    put:
      operationId: updateServiceInstance
      parameters:
      - description: The slug of the service
        explode: false
        in: path
        name: addon
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the service instance
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Service instances
      x-controller: api/v1/service_instances
      x-action: update
  /api/v1/sites/{site_id}/service-instances:
    get:
      operationId: listServiceInstancesForSite
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceInstance'
                type: array
          description: ""
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Service instances
      x-controller: api/v1/service_instances
      x-action: enabled
  /api/v1/services:
    get:
      operationId: getServices
      parameters:
      - description: search
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
          description: ""
        "401":
          description: Unauthorized
      tags:
      - Services
      x-controller: api/v1/services
      x-action: index
  /api/v1/service/{addonName}:
    get:
      operationId: showService
      parameters:
      - description: The slug of the service
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Services
      x-controller: api/v1/services
      x-action: show
  /api/v1/service/{addonName}/manifest:
    get:
      operationId: showServiceManifest
      parameters:
      - description: The name of the service
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Services
      x-controller: api/v1/services
      x-action: manifest
  /api/v1/sites:
    get:
      description: Lists available sites.
      operationId: listSites
      parameters:
      - description: filter
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - all
          - owner
          - guest
          type: string
        style: form
      - description: include_favorites
        explode: true
        in: query
        name: include_favorites
        required: false
        schema:
          type: boolean
        style: form
      - description: label_ids
        explode: true
        in: query
        name: label_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: page
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: per_page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: sort_by
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - created_at
          - updated_at
          - alphabetical
          - published_at
          type: string
        style: form
      - description: "When provided, returns only SSO/password protected / unprotected\
          \ sites"
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          enum:
          - protected
          - public
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: index
    post:
      description: Creates a site.
      operationId: createSite
      parameters:
      - description: configure_dns
        explode: true
        in: query
        name: configure_dns
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: create
  /api/v1/sites/{site_id}:
    delete:
      description: Deletes a site.
      operationId: deleteSite
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: destroy
    get:
      description: Returns the details of a site.
      operationId: getSite
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: show
    patch:
      description: Updates a site.
      operationId: updateSite
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: update
  /api/v1/sites/{site_id}/deployed-branches:
    get:
      description: Returns the deployed branches for a site.
      operationId: listSiteDeployedBranches
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: list_deployed_branches
  /api/v1/sites/{site_id}/rollback:
    put:
      description: |-
        Rolls back the production deploy for this site
        to the latest known based on the `rollback_id` attribute in the deploy.
        It does nothing if the rollback_id in the current production deploy is
        empty.
      operationId: rollbackSiteDeploy
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "404":
          description: Site not found
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: rollback
  /api/v1/sites/{id}/unlink_repo:
    put:
      description: |-
        Unlinks the repo from the site.
        This will:
        * Delete associated deploy keys
        * Delete outgoing webhooks for the repo
        * Delete the site's build hooks
      operationId: unlinkSiteRepo
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
        "404":
          description: Site not found
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: unlink_repo
  /api/v1/sites/{site_id}/simple:
    get:
      description: Returns public information about a site.
      operationId: getSimplePublicSite
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Simple'
          description: ""
      tags:
      - Sites
      x-controller: api/v1/sites
      x-action: "/api/v1/sites/{site_id}/simple_GET"
  /api/v1/sites/{site_id}/snippets:
    get:
      description: Returns a list of snippets for a site.
      operationId: listSiteSnippets
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Snippet'
                type: array
          description: ""
      tags:
      - Snippets
      x-controller: api/v1/snippets
      x-action: index
    post:
      description: Creates a snippet for a site.
      operationId: createSiteSnippet
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snippet'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
          description: ""
      tags:
      - Snippets
      x-controller: api/v1/snippets
      x-action: create
  /api/v1/sites/{site_id}/snippets/{snippet_id}:
    delete:
      description: Deletes a snippet.
      operationId: deleteSiteSnippet
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The snippet ID
        explode: false
        in: path
        name: snippet_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - Snippets
      x-controller: api/v1/snippets
      x-action: destroy
    get:
      description: Returns a snippet.
      operationId: getSiteSnippet
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The snippet ID
        explode: false
        in: path
        name: snippet_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
          description: ""
      tags:
      - Snippets
      x-controller: api/v1/snippets
      x-action: show
    put:
      description: Creates a snippet for a site.
      operationId: updateSiteSnippet
      parameters:
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The snippet ID
        explode: false
        in: path
        name: snippet_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snippet'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
          description: ""
      tags:
      - Snippets
      x-controller: api/v1/snippets
      x-action: update
  /api/v1/sites/{site_id}/ssl:
    get:
      description: Returns a TLS certificate of the site.
      operationId: showSiteTLSCertificate
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SniCertificate'
          description: ""
      tags:
      - SNI certificates
      x-controller: api/v1/ssl
      x-action: show
    post:
      description: |-
        Creates a certificate with the site. If the certificate param is passed,
        create a custom certificate with it. Otherwise, initiate the Let's
        Encrypt certificate provisioning.
        If there is already associated certificate with the site, update it.
      operationId: provisionSiteTLSCertificate
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateInfo'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SniCertificate'
          description: ""
      tags:
      - SNI certificates
      x-controller: api/v1/ssl
      x-action: create
  /api/v1/form/{form_id}/submissions:
    get:
      operationId: listFormSubmissions
      parameters:
      - description: The form ID
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FormSubmission'
                type: array
          description: ""
        "404":
          description: Not Found
        "401":
          description: Unauthorized
      tags:
      - Form submissions
      x-controller: api/v1/submissions
      x-action: "/api/v1/form/{form_id}/submissions_GET"
  /api/v1/sites/{site_id}/submissions:
    get:
      operationId: listSiteSubmissions
      parameters:
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FormSubmission'
                type: array
          description: ""
        "404":
          description: Not Found
        "401":
          description: Unauthorized
      tags:
      - Form submissions
      x-controller: api/v1/submissions
      x-action: index
  /api/v1/submissions/{submission_id}:
    delete:
      operationId: deleteSubmission
      parameters:
      - description: The submission ID
        explode: false
        in: path
        name: submission_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Form submissions
      x-controller: api/v1/submissions
      x-action: destroy
    get:
      operationId: listFormSubmission
      parameters:
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      - description: The submission ID
        explode: false
        in: path
        name: submission_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormSubmission'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Form submissions
      x-controller: api/v1/submissions
      x-action: show
  /api/v1/sites/{site_id}/traffic_splits:
    get:
      operationId: getSplitTests
      parameters:
      - description: Number of per_page to skip when returning records
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      - description: The site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SplitTest'
                type: array
          description: ""
        "404":
          description: Not Found
        "401":
          description: Unauthorized
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: index
    post:
      operationId: createSplitTest
      parameters:
      - description: The ID of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSplitTest_request'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitTest'
          description: ""
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: create
  /api/v1/sites/{site_id}/traffic_splits/{split_test_id}:
    get:
      operationId: getSplitTest
      parameters:
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the split test
        explode: false
        in: path
        name: split_test_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitTest'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: show
    put:
      operationId: updateSplitTest
      parameters:
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the split test
        explode: false
        in: path
        name: split_test_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSplitTest_request'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitTest'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: update
  /api/v1/sites/{site_id}/traffic_splits/{split_test_id}/unpublish:
    post:
      operationId: disableSplitTest
      parameters:
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the split test
        explode: false
        in: path
        name: split_test_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Disabled
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: unpublish
  /api/v1/sites/{site_id}/traffic_splits/{split_test_id}/publish:
    post:
      operationId: enableSplitTest
      parameters:
      - description: The ID or subdomain of the site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the split test
        explode: false
        in: path
        name: split_test_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Enabled
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      tags:
      - Split tests
      x-controller: api/v1/traffic_splits
      x-action: publish
  /api/v1/user:
    get:
      description: Returns the details of the current user.
      operationId: getCurrentUser
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
      tags:
      - Users
      x-controller: api/v1/users
      x-action: show
  /api/v1/organizations/{organization_id}/workos_scim:
    delete:
      description: Deletes the WorkOS directory
      operationId: deleteDirectory
      parameters:
      - description: The ID of the organization
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - WorkOSScim
      x-controller: api/v1/workos_scim
      x-action: destroy
    get:
      description: Returns the details of an existing directory.
      operationId: getDirectory
      parameters:
      - description: The ID of the organization
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDirectory_200_response'
          description: ""
        "404":
          description: Not Found
      tags:
      - WorkOSScim
      x-controller: api/v1/workos_scim
      x-action: show
  /api/v1/organizations/{organization_id}/workos_scim/delete_directory_sync:
    delete:
      description: Deletes the WorkOS directory keeping users in their teams.
      operationId: deleteDirectorySync
      parameters:
      - description: The ID of the organization
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - WorkOSScim
      x-controller: api/v1/workos_scim
      x-action: delete_directory_sync
components:
  schemas:
    AccountBuild:
      description: AccountBuild model definition
      example:
        review_id: review_id
        deploy_state: deploy_state
        review_url: review_url
        created_at: 2000-01-23T04:56:07.000+00:00
        error: error
        title: title
        branch: branch
        commit_url: commit_url
        committer: committer
        context: context
        id: id
        state: state
        deploy_time: 2000-01-23T04:56:07.000+00:00
        custom_domain: custom_domain
        deploy_pending_review_reason: deploy_pending_review_reason
        deploy_id: deploy_id
        error_message: error_message
        priority:
          prioritized_by: prioritized_by
          prioritized_at: 2000-01-23T04:56:07.000+00:00
        sha: sha
        done: true
        deploy_ssl_url: deploy_ssl_url
        site_id: site_id
        started_at: 2000-01-23T04:56:07.000+00:00
        subdomain: subdomain
        commit_ref: commit_ref
      properties:
        id:
          description: the identifier for the build
          type: string
        sha:
          type: string
        created_at:
          format: date-time
          type: string
        started_at:
          format: date-time
          type: string
        state:
          type: string
        error:
          type: string
        error_message:
          type: string
        done:
          type: boolean
        priority:
          $ref: '#/components/schemas/AccountBuild_priority'
        site_id:
          type: string
        subdomain:
          type: string
        custom_domain:
          type: string
        deploy_id:
          type: string
        context:
          type: string
        branch:
          type: string
        commit_ref:
          type: string
        commit_url:
          type: string
        committer:
          type: string
        title:
          type: string
        review_id:
          type: string
        review_url:
          type: string
        deploy_time:
          format: date-time
          type: string
        deploy_state:
          type: string
        deploy_pending_review_reason:
          type: string
        deploy_ssl_url:
          type: string
      required:
      - branch
      - commit_ref
      - commit_url
      - committer
      - context
      - created_at
      - custom_domain
      - deploy_id
      - deploy_pending_review_reason
      - deploy_ssl_url
      - deploy_state
      - deploy_time
      - done
      - error
      - error_message
      - id
      - priority
      - review_id
      - review_url
      - sha
      - site_id
      - started_at
      - state
      - subdomain
      - title
    AccountCompliance:
      description: AccountCompliance definition
      properties:
        private_corp_repos:
          $ref: '#/components/schemas/AccountCompliance_private_corp_repos'
        max_members:
          $ref: '#/components/schemas/AccountCompliance_max_members'
      required:
      - max_members
      - private_corp_repos
    AccountFirewallConfig:
      description: AccountFirewallConfig model definition
      properties:
        id:
          type: string
        unpublished_rules:
          $ref: '#/components/schemas/FirewallRuleSet'
        published_rules:
          $ref: '#/components/schemas/FirewallRuleSet'
        site_overrides:
          items:
            type: object
          type: array
        created_at:
          description: When the deployed branch was created
          format: date-time
          type: string
        updated_at:
          description: When the deployed branch was updated
          format: date-time
          type: string
      required:
      - created_at
      - id
      - published_rules
      - site_overrides
      - unpublished_rules
      - updated_at
    CreateAccountFirewallConfig:
      properties:
        unpublished:
          $ref: '#/components/schemas/FirewallRuleSet'
        published:
          $ref: '#/components/schemas/FirewallRuleSet'
    AccountMemberRole:
      example: {}
      properties: {}
      type: object
    AccountType:
      description: AccountType model definition
      example:
        yearly_dollar_price: yearly_dollar_price
        capabilities: "{}"
        yearly_seats_addon_dollar_price: yearly_seats_addon_dollar_price
        monthly_concurrent_builds_addon_dollar_price: monthly_concurrent_builds_addon_dollar_price
        zuora_products: "{}"
        name: name
        description: description
        skip_payment: true
        id: id
        monthly_dollar_price: monthly_dollar_price
        slug: slug
        monthly_seats_addon_dollar_price: monthly_seats_addon_dollar_price
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        capabilities:
          type: object
        monthly_dollar_price:
          type: string
        yearly_dollar_price:
          type: string
        monthly_seats_addon_dollar_price:
          type: string
        yearly_seats_addon_dollar_price:
          type: string
        monthly_concurrent_builds_addon_dollar_price:
          type: string
        skip_payment:
          type: boolean
        zuora_products:
          description: The Zuora products and their attributes given the Zuora environment
          type: object
      required:
      - capabilities
      - description
      - id
      - monthly_concurrent_builds_addon_dollar_price
      - monthly_dollar_price
      - monthly_seats_addon_dollar_price
      - name
      - slug
      - yearly_dollar_price
      - yearly_seats_addon_dollar_price
    Account:
      description: Account model definition
      example:
        billing_period: billing_period
        support_administration_enabled: true
        type_name: type_name
        capabilities: "{}"
        role: role
        type_slug: type_slug
        type_id: type_id
        deploy_diagnostics_setting: deploy_diagnostics_setting
        vat: vat
        created_at: 2000-01-23T04:56:07.000+00:00
        billing_name: billing_name
        member_roles:
        - {}
        - {}
        payment_method_id: payment_method_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        roles_allowed:
        - roles_allowed
        - roles_allowed
        billing_email: billing_email
        name: name
        id: id
        owner_ids:
        - owner_ids
        - owner_ids
        slug: slug
      properties:
        billing_email:
          type: string
        billing_name:
          type: string
        billing_period:
          type: string
        capabilities:
          type: object
        created_at:
          format: date-time
          type: string
        id:
          type: string
        member_roles:
          items:
            $ref: '#/components/schemas/AccountMemberRole'
          type: array
        name:
          type: string
        owner_ids:
          items:
            type: string
          type: array
        payment_method_id:
          type: string
        role:
          type: string
        roles_allowed:
          items:
            type: string
          type: array
        slug:
          type: string
        type_id:
          type: string
        type_name:
          type: string
        type_slug:
          type: string
        updated_at:
          format: date-time
          type: string
        vat:
          type: string
        support_administration_enabled:
          type: boolean
        deploy_diagnostics_setting:
          type: string
      required:
      - billing_email
      - billing_name
      - billing_period
      - capabilities
      - created_at
      - deploy_diagnostics_setting
      - id
      - member_roles
      - name
      - owner_ids
      - payment_method_id
      - role
      - roles_allowed
      - slug
      - support_administration_enabled
      - type_id
      - type_name
      - type_slug
      - updated_at
      - vat
    AccountUpdateParams:
      example:
        payment_method_id: payment_method_id
        period: monthly
        billing_details: billing_details
        type_id: type_id
        billing_email: billing_email
        name: name
        enforce_mfa: true
        billing_name: billing_name
        slug: slug
        free_trial: true
      properties:
        name:
          type: string
        slug:
          type: string
        type_id:
          type: string
        payment_method_id:
          type: string
        period:
          enum:
          - monthly
          - yearly
          type: string
        billing_name:
          type: string
        billing_email:
          type: string
        billing_details:
          type: string
        free_trial:
          type: boolean
        enforce_mfa:
          type: boolean
    AdminSite:
      allOf:
      - $ref: '#/components/schemas/Site'
      - properties:
          site_build_timelimit:
            type: number
          site_build_pre_process_timeout:
            type: number
          site_functions_config:
            $ref: '#/components/schemas/AdminSite_allOf_site_functions_config'
          edge_functions_manifest:
            $ref: '#/components/schemas/AdminSite_allOf_site_functions_config'
        required:
        - site_build_pre_process_timeout
        - site_build_timelimit
        - site_functions_config
      description: AdminSite model definition. Obfuscates private fields
    Administrator:
      description: Administrator model definition
      properties:
        avatar_url:
          description: The URL for the avatar
          type: string
        email:
          description: The administrator email
          type: string
        full_name:
          description: The administrator name
          type: string
        id:
          description: The identifier for the administrator record
          type: string
        last_login:
          description: When this user last logged in
          format: date-time
          type: string
        mfa_enabled:
          description: Whether the user has two-factor authentication enabled or not
          type: boolean
        role:
          description: The role of the administrator
          type: string
        scopes:
          description: A space-separated list of scopes given based on the role
          type: string
        user_id:
          description: The identifier for the user
          type: string
      required:
      - avatar_url
      - email
      - full_name
      - id
      - last_login
      - mfa_enabled
      - role
      - scopes
      - user_id
    Asset:
      description: Asset model definition
      example:
        visibility: visibility
        created_at: 2000-01-23T04:56:07.000+00:00
        url: url
        account_id: account_id
        size: 0
        content_type: content_type
        updated_at: 2000-01-23T04:56:07.000+00:00
        site_id: site_id
        name: name
        id: id
        state: state
        key: key
        uploaded_url: uploaded_url
      properties:
        id:
          type: string
        site_id:
          type: string
        account_id:
          type: string
        name:
          type: string
        size:
          type: integer
        content_type:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        state:
          type: string
        key:
          type: string
        url:
          type: string
        visibility:
          type: string
        uploaded_url:
          type: string
      required:
      - account_id
      - content_type
      - created_at
      - id
      - key
      - name
      - site_id
      - size
      - state
      - updated_at
      - uploaded_url
      - url
      - visibility
    AssetCreateParams:
      example:
        account_id: account_id
        size: 0
        content_type: content_type
        visibility: visibility
        name: name
        key: key
        uploaded_url: uploaded_url
      properties:
        account_id:
          type: string
        key:
          type: string
        name:
          type: string
        uploaded_url:
          type: string
        size:
          type: integer
        content_type:
          type: string
        visibility:
          type: string
    AssetCreateResult:
      example:
        form:
          fields:
            property2: property2
            property1: property1
          url: url
        asset:
          visibility: visibility
          created_at: 2000-01-23T04:56:07.000+00:00
          url: url
          account_id: account_id
          size: 0
          content_type: content_type
          updated_at: 2000-01-23T04:56:07.000+00:00
          site_id: site_id
          name: name
          id: id
          state: state
          key: key
          uploaded_url: uploaded_url
      properties:
        form:
          $ref: '#/components/schemas/AssetCreateForm'
        asset:
          $ref: '#/components/schemas/Asset'
    AssetCreateForm:
      example:
        fields:
          property2: property2
          property1: property1
        url: url
      properties:
        url:
          type: string
        fields:
          $ref: '#/components/schemas/AssetCreateForm_fields'
    AuditLog:
      description: AuditLog model definition
      example:
        account_id: account_id
        payload: "{}"
        id: id
      properties:
        id:
          type: string
        account_id:
          type: string
        payload:
          type: object
      required:
      - account_id
      - id
      - payload
    BandwidthUsage:
      example:
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        period_end_date: 2000-01-23T04:56:07.000+00:00
        additional: 1
        period_start_date: 2000-01-23T04:56:07.000+00:00
        used: 0
        included: 6
      properties:
        used:
          type: integer
        included:
          type: integer
        additional:
          type: integer
        last_updated_at:
          format: date-time
          type: string
        period_start_date:
          format: date-time
          type: string
        period_end_date:
          format: date-time
          type: string
      required:
      - additional
      - included
      - last_updated_at
      - period_end_date
      - period_start_date
      - used
    Billing_ZuoraInvoiceItem:
      description: ZuoraInvoiceItem model definition
      example:
        end_date: 2000-01-23
        tax_amount: 2
        amount: 7
        quantity: 9
        service_end_date: service_end_date
        service_start_date: service_start_date
        site_domain: site_domain
        recurring: true
        display_amount: display_amount
        title: title
        site_name: site_name
        domain_name: domain_name
        expires_at: expires_at
        site_id: 3
        id: id
        start_date: 2000-01-23
      properties:
        id:
          description: The Zuora id of the invoice item
          type: string
        title:
          description: The title of the Zuora invoice item
          type: string
        amount:
          description: The amount of the Zuora invoice item
          type: integer
        display_amount:
          description: The formatted amount with currency
          type: string
        quantity:
          description: The quantity of the Zuora invoice item
          type: integer
        start_date:
          description: The start date of the Zuora invoice item
          format: date
          type: string
        end_date:
          description: The end date of the Zuora invoice item
          format: date
          type: string
        service_start_date:
          description: The start date of the Zuora invoice item
          type: string
        service_end_date:
          description: The end date of the Zuora invoice item
          type: string
        site_id:
          description: The Netlify site ID in which this invoice belongs to
          type: integer
        domain_name:
          description: The domain name of the site connected to this Zuora invoice
            item
          type: string
        expires_at:
          description: The formatted domain expiration date
          type: string
        site_name:
          description: The site name of site connected to this Zuora invoice item
          type: string
        site_domain:
          description: The site domain of the site connected to this Zuora invoice
            item
          type: string
        recurring:
          description: If this Zuora invoice item is recurring
          type: boolean
        tax_amount:
          description: The tax amount on the Zuora invoice
          type: integer
      required:
      - amount
      - display_amount
      - domain_name
      - end_date
      - expires_at
      - id
      - quantity
      - recurring
      - service_end_date
      - service_start_date
      - site_domain
      - site_id
      - site_name
      - start_date
      - tax_amount
      - title
    Billing_ZuoraInvoice:
      description: ZuoraInvoice model definition
      example:
        tax_amount: 2
        amount: 6
        balance: 0
        invoice_items:
        - end_date: 2000-01-23
          tax_amount: 2
          amount: 7
          quantity: 9
          service_end_date: service_end_date
          service_start_date: service_start_date
          site_domain: site_domain
          recurring: true
          display_amount: display_amount
          title: title
          site_name: site_name
          domain_name: domain_name
          expires_at: expires_at
          site_id: 3
          id: id
          start_date: 2000-01-23
        - end_date: 2000-01-23
          tax_amount: 2
          amount: 7
          quantity: 9
          service_end_date: service_end_date
          service_start_date: service_start_date
          site_domain: site_domain
          recurring: true
          display_amount: display_amount
          title: title
          site_name: site_name
          domain_name: domain_name
          expires_at: expires_at
          site_id: 3
          id: id
          start_date: 2000-01-23
        due_date: 2000-01-23
        payment_amount: 1
        refund_amount: 5
        id: id
        credit_balance_adjustment_amount: 5
        invoice_number: invoice_number
        invoice_date: 2000-01-23
      properties:
        id:
          description: The Zuora ID of the invoice
          type: string
        invoice_number:
          description: The Zuora invoice number
          type: string
        invoice_date:
          description: The Zuora invoice date
          format: date
          type: string
        due_date:
          description: The Zuora due_date
          format: date
          type: string
        balance:
          description: The remaining balance in Zuora
          type: integer
        amount:
          description: The amount due in Zuora
          type: integer
        payment_amount:
          description: The payment amount on the Zuora invoice
          type: integer
        refund_amount:
          description: The refund amount on the Zuora invoice
          type: integer
        credit_balance_adjustment_amount:
          description: The credit balance adjustment amount
          type: integer
        tax_amount:
          description: The tax amount on the Zuora Invoice
          type: integer
        invoice_items:
          description: Zuora invoice items
          items:
            $ref: '#/components/schemas/Billing_ZuoraInvoiceItem'
          type: array
      required:
      - amount
      - balance
      - credit_balance_adjustment_amount
      - due_date
      - id
      - invoice_date
      - invoice_items
      - invoice_number
      - payment_amount
      - refund_amount
      - tax_amount
    BitbucketSelfHostedConfig:
      properties:
        instance_url:
          description: the url for the bitbucket instance
          type: string
        clone_url:
          description: the clone url for the bitbucket instance
          type: string
        client_id:
          description: the client id of the bitbucket application
          type: string
        client_secret:
          description: the client secret of the bitbucket application
          type: string
    BuildHook:
      example:
        msg: msg
        draft: true
        site_id: site_id
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        title: title
        branch: branch
        url: url
      properties:
        id:
          description: The ID of the build hook
          type: string
        site_id:
          description: The site ID of the build hook
          type: string
        title:
          description: The title of the build hook
          type: string
        branch:
          description: The branch of the build hook
          type: string
        url:
          description: The URL of the build hook
          type: string
        draft:
          description: If this build hook should be used to create draft deploys
          type: boolean
        msg:
          description: The message of the build hook
          type: string
        created_at:
          description: When the build hook was created
          format: date-time
          type: string
      required:
      - branch
      - created_at
      - draft
      - id
      - msg
      - site_id
      - title
      - url
    CreateBuildHook:
      example:
        draft: true
        title: title
        branch: branch
      properties:
        title:
          description: The title of the build hook
          type: string
        branch:
          description: The branch of the build hook
          type: string
        draft:
          description: If this build hook should be used to create draft deploys
          type: boolean
    UpdateBuildHook:
      example:
        draft: true
        title: title
        branch: branch
      properties:
        title:
          description: The title of the build hook
          type: string
        branch:
          description: The branch of the build hook
          type: string
        draft:
          description: If this build hook should be used to create draft deploys
          type: boolean
    Build:
      example:
        deploy_state: new
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        error: error
        sha: sha
        done: true
        deploy_id: deploy_id
      properties:
        id:
          type: string
        deploy_id:
          type: string
        deploy_state:
          description: "The state of the associated deploy, or empty string if there's\
            \ no associated deploy."
          enum:
          - new
          - pending_review
          - accepted
          - rejected
          - enqueued
          - building
          - uploading
          - uploaded
          - preparing
          - prepared
          - processing
          - ready
          - error
          - retrying
          type: string
        sha:
          type: string
        done:
          type: boolean
        error:
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - deploy_id
      - deploy_state
      - done
      - error
      - id
      - sha
    BuildStatus:
      example:
        enqueued: 2
        pending_concurrency: 5
        minutes:
          current: 7
          previous: 9
          period_end_date: 2000-01-23T04:56:07.000+00:00
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          included_minutes: 3
          period_start_date: 2000-01-23T04:56:07.000+00:00
          included_minutes_with_packs: 2
        active: 5
      properties:
        active:
          description: Number of active builds
          type: integer
        pending_concurrency:
          description: Number of pending concurrency
          type: integer
        enqueued:
          description: Number of enqueued builds
          type: integer
        minutes:
          $ref: '#/components/schemas/BuildStatus_minutes'
      required:
      - active
      - enqueued
      - minutes
      - pending_concurrency
    CDP_Comment:
      properties:
        id:
          description: The ID of the Event
          type: string
        user:
          $ref: '#/components/schemas/CDP_User'
        type:
          description: "The type of event (ticket, comment, view etc.)"
          type: string
        created_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        updated_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        metadata:
          description: Information about the metadata for the Event
          type: object
        body:
          description: The body of the comment
          type: string
        resolved:
          description: Whether the comment has been resolved
          type: boolean
        resolved_by:
          $ref: '#/components/schemas/CDP_User'
        service:
          description: The service the comment belongs to (github etc)
          type: string
        service_comment_id:
          description: The service id of the comment
          type: string
        review:
          description: "The review state of the comment (approved, denied)"
          type: string
        automated:
          description: Whether the comment is automated
          type: boolean
        pending:
          description: Whether the comment is pending
          type: boolean
        reviewer_id:
          description: The ID of the user who created the comment
          type: string
      required:
      - automated
      - body
      - created_at
      - id
      - metadata
      - pending
      - resolved
      - resolved_by
      - review
      - reviewer_id
      - service
      - service_comment_id
      - type
      - updated_at
      - user
    CDP_Data_Branch:
      description: CDP::Data::Branch model definition
      properties:
        additions:
          description: The number of git additions in the PullRequest
          type: integer
        author:
          $ref: '#/components/schemas/CDP_TicketData_Member'
        base:
          description: The base ref of the branch
          type: object
        body:
          description: The body text for the commit
          type: string
        created_at:
          description: When the commit was pushed
          format: date-time
          type: string
        deletions:
          description: The number of git deletions in the PullRequest
          type: integer
        files:
          description: The number of git files changed in the commit
          type: integer
        id:
          description: The sha of the commit
          type: string
        repo_id:
          description: The id of the vcs repository for associated with the commit
          type: integer
        title:
          description: The commit message of the commit
          type: string
        url:
          description: The web url of the commit
          type: string
        vcs:
          description: "The git host of the commit (github, gitlab, bitbucket)"
          type: string
      required:
      - additions
      - author
      - base
      - body
      - created_at
      - deletions
      - files
      - id
      - repo_id
      - title
      - url
      - vcs
    CDP_Data_PullRequest:
      description: CDP::Data::PullRequest model definition
      properties:
        additions:
          description: The number of git additions in the PullRequest
          type: integer
        assignees:
          description: Information about the assignees for the PullRequest
          items:
            $ref: '#/components/schemas/CDP_TicketData_Member'
          type: array
        author:
          $ref: '#/components/schemas/CDP_TicketData_Member'
        base:
          description: The base ref of the PullRequest
          type: object
        body:
          description: The body text for the PullRequest
          type: string
        closed_at:
          description: When the PullRequest was closed
          format: date-time
          type: string
        comments:
          description: Array of information about the comments for the PullRequest
          items:
            type: object
          type: array
        commits:
          description: Array of information about the commits for the PullRequest
          items:
            type: object
          type: array
        comments_count:
          description: The number of comments in the PullRequest
          type: integer
        commits_count:
          description: The number of commits in the PullRequest
          type: integer
        contributors:
          description: Array of information about the contributors to the PullRequest
          items:
            $ref: '#/components/schemas/CDP_TicketData_Member'
          type: array
        created_at:
          description: When the PullRequest was created
          format: date-time
          type: string
        deletions:
          description: The number of git deletions in the PullRequest
          type: integer
        draft:
          description: Whether the PullRequest is a draft
          type: boolean
        files:
          description: The number of git files changed in the PullRequest
          type: integer
        head:
          description: The head ref of the PullRequest
          type: object
        id:
          description: The id of the PullRequest
          type: string
        labels:
          description: Array of information about the labels for the PullRequest
          items:
            $ref: '#/components/schemas/CDP_TicketData_Label'
          type: array
        last_commit_at:
          description: When the last commit was authored
          format: date-time
          type: string
        merged_at:
          description: When the PullRequest was merged
          format: date-time
          type: string
        milestone:
          $ref: '#/components/schemas/CDP_TicketData_Epic'
        number:
          description: The review number of the PullRequest
          type: integer
        projects:
          description: Array of project_ids associated with the PullRequest
          items:
            type: string
          type: array
        repo_id:
          description: The id of the vcs repository for associated with the PullRequest
          type: integer
        reviewers:
          description: Array of information about the reviewers for the PullRequest
          items:
            $ref: '#/components/schemas/CDP_TicketData_Member'
          type: array
        state:
          description: "The state of the PullRequest (open, merged, closed)"
          type: string
        title:
          description: The title of the PullRequest
          type: string
        url:
          description: The web url of the PullRequest
          type: string
        vcs:
          description: "The git host of the PullRequest (github, gitlab, bitbucket)"
          type: string
      required:
      - additions
      - assignees
      - author
      - base
      - body
      - closed_at
      - comments
      - comments_count
      - commits
      - commits_count
      - contributors
      - created_at
      - deletions
      - draft
      - files
      - head
      - id
      - labels
      - last_commit_at
      - merged_at
      - milestone
      - number
      - projects
      - repo_id
      - reviewers
      - state
      - title
      - url
      - vcs
    CDP_Event:
      properties:
        id:
          description: The ID of the Event
          type: string
        user:
          $ref: '#/components/schemas/CDP_User'
        type:
          description: "The type of event (ticket, comment, view etc.)"
          type: string
        created_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        updated_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        metadata:
          description: Information about the metadata for the Event
          type: object
      required:
      - created_at
      - id
      - metadata
      - type
      - updated_at
      - user
    CDP_RunTimeError:
      properties:
        id:
          description: The ID of the Event
          type: string
        user:
          $ref: '#/components/schemas/CDP_User'
        type:
          description: "The type of event (ticket, comment, view etc.)"
          type: string
        created_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        updated_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        metadata:
          description: Information about the metadata for the Event
          type: object
        data:
          description: Information about the data for the Error
          type: object
      required:
      - created_at
      - data
      - id
      - metadata
      - type
      - updated_at
      - user
    CDP_TicketData_Board:
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        project_ids:
          items:
            type: string
          type: array
        states:
          items:
            $ref: '#/components/schemas/CDP_TicketData_State'
          type: array
      required:
      - created_at
      - description
      - id
      - name
      - project_ids
      - states
    CDP_TicketData_Epic:
      properties:
        archived:
          type: boolean
        completed:
          type: boolean
        created_at:
          format: date-time
          type: string
        description:
          type: string
        ended_at:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        state_type:
          type: string
        started_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - archived
      - completed
      - created_at
      - description
      - ended_at
      - id
      - name
      - started_at
      - state_type
      - updated_at
    CDP_TicketData_Label:
      properties:
        archived:
          type: boolean
        created_at:
          format: date-time
          type: string
        color:
          type: string
        description:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
      required:
      - archived
      - color
      - created_at
      - description
      - id
      - name
    CDP_TicketData_Member:
      properties:
        avatar:
          type: string
        created_at:
          format: date-time
          type: string
        disabled:
          type: boolean
        email:
          type: string
        id:
          type: string
        name:
          type: string
        role:
          type: string
        username:
          type: string
      required:
      - avatar
      - created_at
      - disabled
      - email
      - id
      - name
      - role
      - username
    CDP_TicketData_Milestone:
      properties:
        archived:
          type: boolean
        completed:
          type: boolean
        created_at:
          format: date-time
          type: string
        description:
          type: string
        ended_at:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        state_type:
          type: string
        started_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - archived
      - completed
      - created_at
      - description
      - ended_at
      - id
      - name
      - started_at
      - state_type
      - updated_at
    CDP_TicketData_Project:
      properties:
        archived:
          type: boolean
        color:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        updated_at:
          format: date-time
          type: string
        issue_types:
          description: An array of issue types of the project. Only available for
            Jira
          items:
            $ref: '#/components/schemas/CDP_TicketData_Project_IssueType'
          type: array
      required:
      - archived
      - color
      - created_at
      - description
      - id
      - issue_types
      - name
      - updated_at
    CDP_TicketData_Project_IssueType:
      properties:
        id:
          description: The ID of the issue type
          type: string
        name:
          description: The name of the issue type
          type: string
    CDP_TicketData_Sprint:
      properties:
        archived:
          type: boolean
        created_at:
          format: date-time
          type: string
        description:
          type: string
        ended_at:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        started_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - archived
      - created_at
      - description
      - ended_at
      - id
      - name
      - started_at
      - updated_at
    CDP_TicketData_State:
      properties:
        color:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        position:
          type: integer
        state_type:
          type: string
      required:
      - color
      - created_at
      - description
      - id
      - name
      - position
      - state_type
    CDP_TicketData_Team:
      properties:
        archived:
          type: boolean
        color:
          type: string
        id:
          type: string
        name:
          type: string
      required:
      - archived
      - color
      - id
      - name
    CDP_TicketData_Template:
      properties:
        created_at:
          format: date-time
          type: string
        fields:
          type: object
        id:
          type: string
        name:
          type: string
      required:
      - created_at
      - fields
      - id
      - name
    CDP_Ticket:
      properties:
        confidential:
          description: Whether the ticket is only visible to members with certain
            access
          type: boolean
        description:
          description: The body text of the ticket
          type: string
        due_at:
          description: The Date the ticket is due
          format: date-time
          type: string
        epic:
          description: The Epic ID for the ticket
          type: string
        estimate:
          description: The estimate for the ticket
          type: integer
        labels:
          description: The labels for the ticket
          items:
            type: string
          type: array
        owners:
          description: The IDs for the owners of the ticket
          items:
            type: string
          type: array
        priority:
          description: The priority of the ticket
          type: integer
        project:
          description: The project id for the ticket
          type: string
        sprint:
          description: The sprint id for the ticket
          type: string
        state:
          description: The state of the ticket
          type: string
        subscribers:
          description: The IDs for the subscribers to the ticket
          items:
            type: string
          type: array
        team:
          description: The team ID of the ticket
          type: string
        title:
          description: The title of the ticket
          type: string
        ticket_type:
          description: The type of the ticket
          type: string
        number:
          description: The ticket number
          type: string
        url:
          description: The web url of the ticket
          type: string
        service:
          description: "The Ticket's service (github, clubhouse, trello etc)"
          type: string
      required:
      - confidential
      - description
      - due_at
      - epic
      - estimate
      - labels
      - number
      - owners
      - priority
      - project
      - service
      - sprint
      - state
      - subscribers
      - team
      - ticket_type
      - title
      - url
    CDP_UserIntegration:
      properties:
        id:
          description: The ID of the UserIntegration
          type: string
        slug:
          description: The slug if the integration provider
          type: string
        created_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        updated_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        integration_data:
          description: Information about the user integration
          type: object
      required:
      - created_at
      - id
      - integration_data
      - slug
      - updated_at
    CDP_User:
      description: User model definition
      properties:
        id:
          description: the identifier for the user
          type: string
        full_name:
          type: string
        avatar_url:
          description: the URL for the avatar
          type: string
        created_at:
          format: date-time
          type: string
        connected_accounts:
          $ref: '#/components/schemas/CDP_User_connected_accounts'
      required:
      - avatar_url
      - connected_accounts
      - created_at
      - full_name
      - id
    CDP_View:
      properties:
        id:
          description: The ID of the Event
          type: string
        user:
          $ref: '#/components/schemas/CDP_User'
        type:
          description: "The type of event (ticket, comment, view etc.)"
          type: string
        created_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        updated_at:
          description: When the Event ticket was created
          format: date-time
          type: string
        metadata:
          description: Information about the metadata for the Event
          type: object
        path:
          description: The page that was viewed
          type: string
      required:
      - created_at
      - id
      - metadata
      - path
      - type
      - updated_at
      - user
    CertOrder:
      description: CertOrder model definition
      properties:
        id:
          description: The ID of the certificate order
          type: string
        url:
          description: The URL of the certificate order
          type: string
        state:
          description: The state of the certificate order
          type: string
        aasm_state:
          description: The state of the certificate order managed by AASM gem
          type: string
        error_reason:
          description: The exception class and message putting the order into an error
            state
          type: string
        created_at:
          description: When the certificate order was created
          format: date-time
          type: string
        updated_at:
          description: When the certificate order was updated
          format: date-time
          type: string
      required:
      - aasm_state
      - created_at
      - error_reason
      - id
      - state
      - updated_at
      - url
    Committer:
      description: Committer model definition
      properties:
        id:
          description: The ID for the committer
          type: string
        account_id:
          description: The ID of the account the committer is associated with
          type: string
        user_id:
          description: "The ID of the user associated with the committer, if found"
          type: string
        provider:
          description: "The name of the provider, for example: **github**, **gitlab**,\
            \ **bitbucket**"
          type: string
        provider_id:
          description: The ID of the committer within the provider's system
          type: integer
        provider_slug:
          description: The username of the committer within the provider's system
          type: string
        member_id:
          description: The ID of the member of the account matched to this committer
          type: string
        invite_id:
          description: The invite ID matched to this committer
          type: string
        match_method:
          description: "How the member was matched to the committer: **automatic**\
            \ for our system, or **manual**  for a human"
          enum:
          - automatic
          - manual
          type: string
        last_seen:
          description: The last time an event (push/pull/merge request) was detected
            for the committer
          format: date-time
          type: string
      required:
      - account_id
      - id
      - invite_id
      - last_seen
      - match_method
      - member_id
      - provider
      - provider_id
      - provider_slug
      - user_id
    ConnectBandwidthUsage:
      properties:
        used:
          type: integer
        last_updated_at:
          format: date-time
          type: string
        period_start_date:
          format: date-time
          type: string
        period_end_date:
          format: date-time
          type: string
      required:
      - last_updated_at
      - period_end_date
      - period_start_date
      - used
    Deploy_LogAttributes:
      description: Deploy model definition
      properties: {}
      type: object
    Deploy_Simple:
      example:
        commit_url: commit_url
        title: title
        published_at: 2000-01-23T04:56:07.000+00:00
        admin_url: admin_url
        commit_ref: commit_ref
      properties:
        admin_url:
          type: string
        commit_ref:
          type: string
        commit_url:
          type: string
        title:
          type: string
        published_at:
          format: date-time
          type: string
      required:
      - admin_url
      - commit_ref
      - commit_url
      - published_at
      - title
    Deploy_SimpleState:
      properties:
        id:
          type: string
        site_id:
          type: string
        state:
          type: string
        created_at:
          description: When the deploy was created
          format: date-time
          type: string
        deploy_time:
          description: "The total time, in seconds, it took to deploy"
          type: integer
        context:
          description: The deploy context
          enum:
          - production
          - branch-deploy
          - deploy-preview
          type: string
        concurrent_upload_limit:
          type: integer
      required:
      - concurrent_upload_limit
      - context
      - created_at
      - deploy_time
      - id
      - site_id
      - state
    Deploy_SiteDeploy:
      properties:
        id:
          type: string
        site_id:
          type: string
        state:
          type: string
        created_at:
          description: When the deploy was created
          format: date-time
          type: string
        deploy_time:
          description: "The total time, in seconds, it took to deploy"
          type: integer
        context:
          description: The deploy context
          enum:
          - production
          - branch-deploy
          - deploy-preview
          type: string
        branch:
          description: The git branch name of the deploy
          type: string
        commit_ref:
          description: The git commit SHA
          type: string
        commit_url:
          description: The URL for the commit of the deploy
          type: string
        ssl_url:
          description: The HTTPS URL of the production deploy
          type: string
        deploy_ssl_url:
          description: The HTTPS URL of the Deploy Preview
          type: string
        build_id:
          description: The build ID
          type: string
        review_id:
          description: The pull request or merge request number
          type: integer
        error_message:
          description: "The error message, if an error occurred during the deploy"
          type: string
        title:
          description: The title of the pull request or merge request
          type: string
        skipped:
          description: Whether the deploy has been skipped
          type: boolean
        plugin_state:
          description: The state of the deploy's plugins
          enum:
          - success
          - canceled_build
          - failed_plugin
          - failed_build
          - skipped
          - none
          type: string
      required:
      - branch
      - build_id
      - commit_ref
      - commit_url
      - context
      - created_at
      - deploy_ssl_url
      - deploy_time
      - error_message
      - id
      - plugin_state
      - review_id
      - site_id
      - skipped
      - ssl_url
      - state
      - title
    SiteFile:
      example:
        path: path
        size: 0
        mime_type: mime_type
        site_id: site_id
        id: id
        sha: sha
        deploy_id: deploy_id
      properties:
        id:
          description: The path of the file
          type: string
        path:
          description: The path of the file
          type: string
        sha:
          description: The sha of the file
          type: string
        mime_type:
          description: The mime_type of the file
          type: string
        size:
          description: The size of the file in bytes
          type: integer
        site_id:
          description: The site ID of the file
          type: string
        deploy_id:
          description: The deploy ID of the file
          type: string
      required:
      - deploy_id
      - id
      - mime_type
      - path
      - sha
      - site_id
      - size
    SiteFileUploadResponse:
      properties:
        id:
          description: The path of the file
          type: string
        path:
          description: The path of the file
          type: string
        sha:
          description: The sha of the file
          type: string
        mime_type:
          description: The mime_type of the file
          type: string
        size:
          description: The size of the file in bytes
          type: integer
    DeployKey:
      description: DeployKey model definition
      example:
        public_key: public_key
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          description: The deploy key ID
          type: string
        public_key:
          description: The public key
          type: string
        created_at:
          description: When the deploy key was created
          format: date-time
          type: string
      required:
      - created_at
      - id
      - public_key
    Deploy:
      description: Deploy model definition
      example:
        review_id: 0
        deploy_url: deploy_url
        review_url: review_url
        created_at: 2000-01-23T04:56:07.000+00:00
        commit_message: commit_message
        entry_path: entry_path
        title: title
        branch: branch
        required:
        - required
        - required
        skipped: true
        commit_url: commit_url
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        committer: committer
        context: production
        id: id
        state: new
        deploy_time: 6
        views_count: 1
        locked: true
        published_at: 2000-01-23T04:56:07.000+00:00
        error_message: error_message
        summary:
          messages:
          - description: description
            details: details
            type: type
            title: title
          - description: description
            details: details
            type: type
            title: title
          status: status
        available_functions:
        - available_functions
        - available_functions
        function_schedules:
        - cron: cron
          name: name
        - cron: cron
          name: name
        admin_url: admin_url
        url: url
        skipped_log: true
        framework: framework
        ssl_url: ssl_url
        manual_deploy: true
        build_id: build_id
        deploy_ssl_url: deploy_ssl_url
        user_id: user_id
        site_id: site_id
        name: name
        plugin_state: success
        required_functions:
        - required_functions
        - required_functions
        screenshot_url: screenshot_url
        edge_functions_present: true
        commit_ref: commit_ref
      properties:
        id:
          description: The deploy ID
          type: string
        site_id:
          description: The site ID
          type: string
        build_id:
          description: The build ID
          type: string
        state:
          description: The state of the deploy
          enum:
          - new
          - pending_review
          - accepted
          - rejected
          - enqueued
          - building
          - uploading
          - uploaded
          - preparing
          - prepared
          - processing
          - ready
          - error
          - retrying
          type: string
        name:
          description: The site name
          type: string
        url:
          description: The HTTP URL of the production deploy
          type: string
        ssl_url:
          description: The HTTPS URL of the production deploy
          type: string
        admin_url:
          description: The URL of the deploy in the Netlify UI
          type: string
        deploy_url:
          description: The HTTP URL of the Deploy Preview
          type: string
        deploy_ssl_url:
          description: The HTTPS URL of the Deploy Preview
          type: string
        created_at:
          description: When the deploy was created
          format: date-time
          type: string
        updated_at:
          description: When the deploy was updated
          format: date-time
          type: string
        user_id:
          description: The user ID of the deploy's site owner
          type: string
        error_message:
          description: "The error message, if an error occurred during the deploy"
          type: string
        required:
          description: An array of required files that need to be uploaded to complete
            the deploy
          items:
            type: string
          type: array
        required_functions:
          description: An array of required functions that need to be uploaded to
            complete the deploy
          items:
            type: string
          type: array
        commit_ref:
          description: The git commit SHA
          type: string
        review_id:
          description: The pull request or merge request number
          type: integer
        branch:
          description: The git branch name of the deploy
          type: string
        commit_url:
          description: The URL for the commit of the deploy
          type: string
        skipped:
          description: Whether the deploy has been skipped
          type: boolean
        locked:
          description: Whether the deploy has been locked
          type: boolean
        title:
          description: The title of the pull request or merge request
          type: string
        commit_message:
          description: The latest commit message for the pull request or merge request
          type: string
        review_url:
          description: The URL of the pull request or merge request
          type: string
        published_at:
          description: When the deploy was published to production
          format: date-time
          type: string
        context:
          description: The deploy context
          enum:
          - production
          - branch-deploy
          - deploy-preview
          type: string
        deploy_time:
          description: "The total time, in seconds, it took to deploy"
          type: integer
        available_functions:
          description: An array of available functions
          items:
            type: string
          type: array
        screenshot_url:
          description: The URL of the screenshot of the deploy
          type: string
        committer:
          description: "The username of the committer on GitHub, GitLab, or BitBucket"
          type: string
        skipped_log:
          description: Whether the build logs have been skipped
          type: boolean
        manual_deploy:
          description: Whether the deploy was deployed manually
          type: boolean
        plugin_state:
          description: The state of the deploy's plugins
          enum:
          - success
          - canceled_build
          - failed_plugin
          - failed_build
          - skipped
          - none
          type: string
        framework:
          description: "The frontend framework detected, if any"
          type: string
        entry_path:
          description: The initial route of the Deploy Preview
          type: string
        summary:
          $ref: '#/components/schemas/Deploy_summary'
        views_count:
          description: The number of times the deploy has been viewed
          type: integer
        function_schedules:
          description: An array of function schedules
          items:
            $ref: '#/components/schemas/createSiteDeploy_request_function_schedules_inner'
          type: array
        edge_functions_present:
          description: Whether the deploy includes at least one Edge Function
          type: boolean
        expires_at:
          description: The date at which the deploy will be soft-deleted
          format: date-time
          type: string
      required:
      - admin_url
      - available_functions
      - branch
      - build_id
      - commit_message
      - commit_ref
      - commit_url
      - committer
      - context
      - created_at
      - deploy_ssl_url
      - deploy_time
      - deploy_url
      - entry_path
      - error_message
      - framework
      - function_schedules
      - id
      - locked
      - manual_deploy
      - name
      - plugin_state
      - published_at
      - required
      - required_functions
      - review_id
      - review_url
      - screenshot_url
      - site_id
      - skipped
      - skipped_log
      - ssl_url
      - state
      - summary
      - title
      - updated_at
      - url
      - user_id
      - views_count
    DeploySummary:
      description: Deploy summary details
      properties:
        status:
          description: The status of the summary
          enum:
          - ready
          - unavailable
          type: string
        messages:
          description: The messages of the summary
          items:
            $ref: '#/components/schemas/DeploySummaryMessage'
          type: array
      required:
      - messages
      - status
    DeploySummaryMessage:
      description: Deploy summary message
      properties:
        description:
          description: The description of the message in Markdown format
          type: string
        details:
          description: The details of the message in Markdown format
          type: string
        title:
          description: The title of the message
          type: string
        type:
          description: The type of the message
          enum:
          - info
          - warning
          type: string
    DeployedBranch:
      description: DeployedBranch model definition
      properties:
        id:
          description: The ID of the deployed branch
          type: string
        site_id:
          description: The site ID of the deployed branch
          type: string
        deploy_id:
          description: The deploy ID of the deployed branch
          type: string
        name:
          description: The name of the deployed branch
          type: string
        slug:
          description: The slugified name of the deployed branch
          type: string
        url:
          description: The URL of the deployed branch
          type: string
        ssl_url:
          description: The SSL URL of the deployed branch
          type: string
        created_at:
          description: When the deployed branch was created
          format: date-time
          type: string
        updated_at:
          description: When the deployed branch was updated
          format: date-time
          type: string
      required:
      - created_at
      - deploy_id
      - id
      - name
      - site_id
      - slug
      - ssl_url
      - updated_at
      - url
    DevServer_LogAttributes:
      description: DevServer model definition
      properties: {}
      type: object
    DevServerHook:
      example:
        msg: msg
        site_id: site_id
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        title: title
        type: type
        branch: branch
        url: url
      properties:
        id:
          description: The ID of the dev server hook
          type: string
        site_id:
          description: The site ID of the dev server hook
          type: string
        title:
          description: The title of the dev server hook
          type: string
        branch:
          description: The branch of the dev server hook
          type: string
        url:
          description: The URL of the dev server hook
          type: string
        msg:
          description: The message of the dev server hook
          type: string
        type:
          description: The type of the dev server hook
          type: string
        created_at:
          description: When the dev server hook was created
          format: date-time
          type: string
      required:
      - branch
      - created_at
      - id
      - msg
      - site_id
      - title
      - type
      - url
    CreateDevServerHook:
      example:
        title: title
        type: type
        branch: branch
      properties:
        title:
          description: The title of the dev server hook
          type: string
        branch:
          description: The branch of the dev server hook
          type: string
        type:
          description: The type of dev server hook
          type: string
    UpdateDevServerHook:
      example:
        title: title
        type: type
        branch: branch
      properties:
        title:
          description: The title of the dev server hook
          type: string
        branch:
          description: The branch of the dev server hook
          type: string
        type:
          description: The type of dev server hook
          type: string
    DevServer:
      properties:
        id:
          description: The id of the dev server
          type: string
        site_id:
          description: The id of the site
          type: string
        state:
          description: The state of the dev server
          type: string
        enqueued_at:
          description: The time the dev server was enqueued
          type: string
        created_at:
          description: The time the dev server was created
          type: string
        updated_at:
          description: The time the dev server was updated
          type: string
        url:
          description: The url of the dev server
          type: string
        starting_at:
          description: The time the dev server started
          type: string
        error_at:
          description: The time the dev server errored
          type: string
        live_at:
          description: The time the dev server went live
          type: string
        done_at:
          description: The time the dev server was done
          type: string
        branch:
          description: The branch of the dev server
          type: string
        title:
          description: The title of the dev server
          type: string
    DevServerEnvironment:
      properties:
        branch:
          description: The branch of the dev server environment
          type: string
        live:
          $ref: '#/components/schemas/DevServer'
        latest:
          $ref: '#/components/schemas/DevServer'
    DevServerConfig:
      properties:
        id:
          description: The id of the dev server
          type: string
        expires_at:
          description: The time the new config should expire
          type: string
        repo_url:
          description: The repo url
          type: string
    DirectorySyncEntity:
      example: {}
      properties: {}
      type: object
    DnsRecord:
      example:
        flag: 5
        dns_zone_id: dns_zone_id
        weight: 1
        type: type
        priority: 6
        ttl: 0
        hostname: hostname
        port: 5
        managed: true
        site_id: site_id
        id: id
        tag: tag
        value: value
        errors:
        - errors
        - errors
      properties:
        id:
          description: The ID of the DNS record
          type: string
        site_id:
          description: The site ID
          type: string
        dns_zone_id:
          description: The ID of the DNS zone the record belongs to
          type: string
        errors:
          description: An array of error messages
          items:
            type: string
          type: array
        managed:
          description: Whether Netlify created (managed) record or the user created
          type: boolean
        value:
          description: The value of the DNS record
          type: string
        hostname:
          description: The hostname of the DNS record
          type: string
        type:
          description: The type of the DNS record
          type: string
        ttl:
          description: The TTL of the DNS record
          type: integer
        priority:
          description: The priority of the DNS record
          type: integer
        weight:
          description: The weight of the DNS record (for SRV type record)
          type: integer
        port:
          description: The port of the DNS record (for SRV type record)
          type: integer
        flag:
          description: The flag of the DNS record (for CAA type record)
          type: integer
        tag:
          description: The tag of the DNS record (for CAA type record)
          type: string
      required:
      - dns_zone_id
      - errors
      - flag
      - hostname
      - id
      - managed
      - port
      - priority
      - site_id
      - tag
      - ttl
      - type
      - value
      - weight
    DnsRecordCreateParams:
      example:
        hostname: hostname
        flag: 5
        port: 5
        managed: true
        site_id: site_id
        weight: 1
        tag: tag
        type: type
        priority: 6
        value: value
        ttl: 0
      properties:
        site_id:
          description: The site ID
          type: string
        managed:
          description: Whether Netlify created (managed) record or the user created
          type: boolean
        value:
          description: The value of the DNS record
          type: string
        hostname:
          description: The hostname of the DNS record
          type: string
        type:
          description: The type of the DNS record
          type: string
        ttl:
          description: The TTL of the DNS record
          type: integer
        priority:
          description: The priority of the DNS record
          type: integer
        weight:
          description: The weight of the DNS record (for SRV type record)
          type: integer
        port:
          description: The port of the DNS record (for SRV type record)
          type: integer
        flag:
          description: The flag of the DNS record (for CAA type record)
          type: integer
        tag:
          description: The tag of the DNS record (for CAA type record)
          type: string
    DnsZone:
      example:
        dedicated: true
        records:
        - flag: 5
          dns_zone_id: dns_zone_id
          weight: 1
          type: type
          priority: 6
          ttl: 0
          hostname: hostname
          port: 5
          managed: true
          site_id: site_id
          id: id
          tag: tag
          value: value
          errors:
          - errors
          - errors
        - flag: 5
          dns_zone_id: dns_zone_id
          weight: 1
          type: type
          priority: 6
          ttl: 0
          hostname: hostname
          port: 5
          managed: true
          site_id: site_id
          id: id
          tag: tag
          value: value
          errors:
          - errors
          - errors
        supported_record_types:
        - supported_record_types
        - supported_record_types
        created_at: 2000-01-23T04:56:07.000+00:00
        dns_servers:
        - dns_servers
        - dns_servers
        account_slug: account_slug
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        account_name: account_name
        domain:
          expires_at: 2000-01-23T04:56:07.000+00:00
          registered_at: 2000-01-23T04:56:07.000+00:00
          auto_renew: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          renewal_price: renewal_price
          transferred_at: 2000-01-23T04:56:07.000+00:00
          auto_renew_at: 2000-01-23T04:56:07.000+00:00
          auth_code: auth_code
        name: name
        site_id: site_id
        ipv6_enabled: true
        id: id
        errors:
        - errors
        - errors
      properties:
        id:
          description: The ID of the DNS zone
          type: string
        name:
          description: The name of the DNS zone
          type: string
        errors:
          description: An array of error messages
          items:
            type: string
          type: array
        supported_record_types:
          description: An array of supported DNS record types
          items:
            type: string
          type: array
        user_id:
          description: The user ID of the DNS zone creator
          type: string
        records:
          description: An array of DNS records for this DNS zone
          items:
            $ref: '#/components/schemas/DnsRecord'
          type: array
        dns_servers:
          description: The name servers of the DNS zone
          items:
            type: string
          type: array
        account_id:
          description: The account ID
          type: string
        site_id:
          description: The site ID
          type: string
        account_slug:
          description: The account slug
          type: string
        account_name:
          description: The account name
          type: string
        domain:
          $ref: '#/components/schemas/Domain'
        ipv6_enabled:
          description: Whether IPv6 is enabled
          type: boolean
        dedicated:
          description: Whether using a dedicated network
          type: boolean
        created_at:
          description: When the DNS zone was created
          format: date-time
          type: string
        updated_at:
          description: When the DNS zone was updated
          format: date-time
          type: string
      required:
      - account_id
      - account_name
      - account_slug
      - created_at
      - dedicated
      - dns_servers
      - errors
      - id
      - ipv6_enabled
      - name
      - records
      - site_id
      - supported_record_types
      - updated_at
      - user_id
    DnsZoneCreateParams:
      example:
        account_slug: account_slug
        site_id: site_id
        name: name
      properties:
        site_id:
          description: The ID of the site
          type: string
        account_slug:
          description: "The account slug. If not provided, the current user's default\
            \ account will be used"
          type: string
        name:
          description: The name of the DNS zone
          type: string
    DnsZoneTransferParams:
      example:
        account_id: account_id
        transfer_user_id: transfer_user_id
        transfer_account_id: transfer_account_id
      properties:
        account_id:
          description: The current account ID of the DNS zone
          type: string
        transfer_account_id:
          description: The account ID to transfer the DNS zone to
          type: string
        transfer_user_id:
          description: The userID to transfer the DNS zone to
          type: string
    Domain:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        registered_at: 2000-01-23T04:56:07.000+00:00
        auto_renew: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        renewal_price: renewal_price
        transferred_at: 2000-01-23T04:56:07.000+00:00
        auto_renew_at: 2000-01-23T04:56:07.000+00:00
        auth_code: auth_code
      properties:
        id:
          description: The ID of the domain
          type: string
        name:
          description: The name of the domain
          type: string
        user_id:
          description: The user ID of the domain creator
          type: string
        expires_at:
          description: When the domain expires
          format: date-time
          type: string
        registered_at:
          description: When the domain was registered
          format: date-time
          type: string
        renewal_price:
          description: The renewal price of the domain
          type: string
        auto_renew:
          description: Whether the domain auto renews or not
          type: boolean
        auth_code:
          description: The auth code used for transferring out the domain
          type: string
        transferred_at:
          description: When the domain was transferred
          format: date-time
          type: string
        auto_renew_at:
          description: When the domain was auto renewed
          format: date-time
          type: string
        created_at:
          description: When the domain was created
          format: date-time
          type: string
        updated_at:
          description: When the domain was updated
          format: date-time
          type: string
      required:
      - auth_code
      - auto_renew
      - auto_renew_at
      - created_at
      - expires_at
      - id
      - name
      - registered_at
      - renewal_price
      - transferred_at
      - updated_at
      - user_id
    Doorkeeper_AccessToken:
      example:
        access_token: access_token
        refresh_token: refresh_token
        expires_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
      properties:
        id:
          description: The ID for the access token (same as access token)
          type: string
        access_token:
          description: The access token
          type: string
        refresh_token:
          description: The refresh token set during OAuth
          type: string
        user_id:
          description: The user ID of this token's owner
          type: string
        scopes:
          description: List of scopes for this token
          items:
            type: string
          type: array
        created_at:
          description: When the access token was created
          format: date-time
          type: string
        expires_at:
          description: When the access token expires
          format: date-time
          type: string
      required:
      - access_token
      - created_at
      - expires_at
      - id
      - refresh_token
      - scopes
      - user_id
    Doorkeeper_Application:
      description: Doorkeeper::Application model definition
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        personal:
          type: boolean
        redirect_uri:
          type: string
        client_id:
          type: string
        secret:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        authorized_at:
          format: date-time
          type: string
        saml_account_id:
          type: string
      required:
      - authorized_at
      - client_id
      - created_at
      - description
      - id
      - name
      - personal
      - redirect_uri
      - saml_account_id
      - secret
      - updated_at
    EdgeFunctionConfig:
      properties:
        function:
          type: string
        generator:
          type: string
        name:
          type: string
        path:
          type: string
        pattern:
          type: string
        excluded_patterns:
          items:
            type: string
          type: array
        cache:
          type: boolean
      required:
      - function
    EdgeFunctionsUsage:
      example:
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        period_end_date: 2000-01-23T04:56:07.000+00:00
        additional: 1
        period_start_date: 2000-01-23T04:56:07.000+00:00
        used: 0
        included: 6
      properties:
        used:
          type: integer
        included:
          type: integer
        additional:
          type: integer
        last_updated_at:
          format: date-time
          type: string
        period_start_date:
          format: date-time
          type: string
        period_end_date:
          format: date-time
          type: string
      required:
      - additional
      - included
      - last_updated_at
      - period_end_date
      - period_start_date
      - used
    EnvVar:
      description: Environment variable model definition
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        is_secret: true
        values:
        - context_parameter: context_parameter
          context: all
          id: id
          value: value
        - context_parameter: context_parameter
          context: all
          id: id
          value: value
        updated_by:
          full_name: full_name
          avatar_url: avatar_url
          id: id
          email: email
        scopes:
        - builds
        - builds
        key: key
      properties:
        key:
          description: "The environment variable key, like ALGOLIA_ID (case-sensitive)"
          type: string
          x-faker: commerce.productName
        scopes:
          description: The scopes that this environment variable is set to
          items:
            enum:
            - builds
            - functions
            - runtime
            - post_processing
            type: string
          type: array
        values:
          description: An array of Value objects containing values and metadata
          items:
            $ref: '#/components/schemas/EnvVarValue'
          type: array
          x-faker: internet.password
        updated_at:
          description: The timestamp of when the value was last updated
          format: date-time
          type: string
          x-faker: date.past
        updated_by:
          $ref: '#/components/schemas/EnvVarUser'
        is_secret:
          description: Should this environment variable be treated as a write-only
            variable and not accesible outside of Netlify runtimes
          type: boolean
      required:
      - key
      - scopes
      - updated_at
      - updated_by
      - values
    EnvVarValue:
      description: Environment variable value model definition
      example:
        context_parameter: context_parameter
        context: all
        id: id
        value: value
      properties:
        id:
          description: The environment variable value's universally unique ID
          type: string
          x-faker: datatype.uuid
        value:
          description: The environment variable's unencrypted value
          type: string
          x-faker: internet.password
        context:
          description: The deploy context in which this value will be used. `dev`
            refers to local development when running `netlify dev`. `branch` must
            be provided with a value in `context_parameter`.
          enum:
          - all
          - dev
          - branch-deploy
          - deploy-preview
          - production
          - branch
          type: string
        context_parameter:
          description: "An additional parameter for custom branches. Currently, this\
            \ is used for providing a branch name when `context=branch`."
          type: string
    EnvVarUser:
      example:
        full_name: full_name
        avatar_url: avatar_url
        id: id
        email: email
      properties:
        id:
          description: The user's unique identifier
          type: string
          x-faker: datatype.number
        full_name:
          description: The user's full name (first and last)
          type: string
          x-faker: name.findName
        email:
          description: The user's email address
          type: string
          x-faker: internet.email
        avatar_url:
          description: A URL pointing to the user's avatar
          type: string
          x-faker: internet.avatar
    EnvVarSet:
      example:
        is_secret: true
        context_parameter: context_parameter
        context: dev
        value: value
      properties:
        context:
          description: The deploy context where this value will be applied
          enum:
          - dev
          - branch-deploy
          - deploy-preview
          - production
          - branch
          type: string
        context_parameter:
          description: "If present, the name of the custom context related to the\
            \ context_parameter"
          type: string
        value:
          description: The plaintext value to be set on the key-context
          type: string
        is_secret:
          description: Should this environment variable be treated as a write-only
            variable and not accesible outside of Netlify runtimes
          type: boolean
    SiteFirewallConfig:
      properties:
        id:
          type: string
        unpublished_rules:
          $ref: '#/components/schemas/FirewallRuleSet'
        published_rules:
          $ref: '#/components/schemas/FirewallRuleSet'
        created_at:
          description: When the deployed branch was created
          format: date-time
          type: string
        updated_at:
          description: When the deployed branch was updated
          format: date-time
          type: string
      required:
      - created_at
      - id
      - published_rules
      - unpublished_rules
      - updated_at
    CreateSiteFirewallConfig:
      properties:
        unpublished:
          $ref: '#/components/schemas/FirewallRuleSet'
        published:
          $ref: '#/components/schemas/FirewallRuleSet'
    FirewallRule:
      properties:
        action:
          enum:
          - allow
          - deny
          type: string
        type:
          enum:
          - geo
          - ip
          type: string
        data:
          additionalProperties:
            items:
              type: string
        description:
          type: string
        disabled:
          type: bool
      required:
      - action
      - data
      - type
    FirewallRuleSet:
      properties:
        default:
          enum:
          - allow
          - deny
          type: string
        rules:
          items:
            $ref: '#/components/schemas/FirewallRule'
          type: array
      required:
      - default
      - rules
    Form:
      example:
        honeypot: true
        last_submission_at: 2000-01-23T04:56:07.000+00:00
        paths:
        - paths
        - paths
        submission_count: 0
        site_id: site_id
        name: name
        recaptcha: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        fields:
        - "{}"
        - "{}"
      properties:
        id:
          type: string
        site_id:
          type: string
        name:
          type: string
        paths:
          items:
            type: string
          type: array
        submission_count:
          type: integer
        fields:
          items:
            type: object
          type: array
        honeypot:
          type: boolean
        recaptcha:
          type: boolean
        last_submission_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - fields
      - honeypot
      - id
      - last_submission_at
      - name
      - paths
      - recaptcha
      - site_id
      - submission_count
    FormSubmission:
      example:
        summary: summary
        data: "{}"
        form_id: form_id
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        site_name: site_name
        number: 0
        site_url: site_url
        name: name
        company: company
        id: id
        form_name: form_name
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        form_id:
          type: string
        form_name:
          type: string
        site_url:
          type: string
        site_name:
          type: string
        number:
          type: integer
        email:
          type: string
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        company:
          type: string
        summary:
          type: string
        body:
          type: string
        data:
          type: object
        created_at:
          format: date-time
          type: string
      required:
      - body
      - company
      - created_at
      - data
      - email
      - first_name
      - form_id
      - form_name
      - id
      - last_name
      - name
      - number
      - site_name
      - site_url
      - summary
    FormSubmissionParams:
      properties:
        form_id:
          description: The form ID
          type: string
        deploy_id:
          description: The deploy ID of the form submission
          type: string
        form_submission:
          description: The form submission values in hash
          type: object
        dry:
          description: Whether to persist changes to the database or not
          type: boolean
        connection_ip:
          description: The client IP address of the form submission request
          type: string
        user_agent:
          description: The user agent of the form submission request
          type: string
        referrer:
          description: The referrer of the form submission request
          type: string
    FunctionBundle:
      description: FunctionBundle model definition
      properties:
        id:
          description: The function bundle ID
          type: string
        provider:
          description: The provider of the function
          enum:
          - aws_lambda
          type: string
        created_at:
          description: When the function bundle was created
          format: date-time
          type: string
        functions:
          description: An array of the functions of this function bundle
          items:
            $ref: '#/components/schemas/Function'
          type: array
        log_type:
          description: The function log type
          enum:
          - socketeer
          type: string
        branch:
          description: The branch of the deploy
          type: string
      required:
      - created_at
      - functions
      - id
      - log_type
      - provider
    Function:
      properties:
        "n":
          description: The name of the function
          type: string
        d:
          description: The sha256 of the function
          type: string
        id:
          description: The ID of the function
          type: string
        s:
          description: The size of the function
          type: string
        r:
          description: The runtime of the function
          type: string
        c:
          description: When the function was created
          format: date-time
          type: string
        ro:
          description: Routes for a function
          items:
            $ref: '#/components/schemas/Function_ro_inner'
          type: array
        endpoint:
          description: The endpoint of the function
          type: string
        schedule:
          description: The schedule of the function as a cron expression
          type: string
    GithubEnterpriseConfig:
      properties:
        instance_url:
          description: The URL for the GitHub instance
          type: string
        clone_url:
          description: The clone URL for the GitHub instance
          type: string
        client_id:
          description: The client ID of the GitHub application
          type: string
        client_secret:
          description: The client secret of the GitHub application
          type: string
        app_id:
          description: The app ID of the GitHub application
          type: integer
        private_key:
          description: The private key of the GitHub application
          type: string
        webhook_secret:
          description: The webhook secret of the GitHub application
          type: string
      required:
      - app_id
      - client_id
      - client_secret
      - clone_url
      - instance_url
      - private_key
      - webhook_secret
    GitlabSelfHostedConfig:
      properties:
        instance_url:
          description: the url for the gitlab instance
          type: string
        clone_url:
          description: the clone url for the gitlab instance
          type: string
        client_id:
          description: the client id of the gitlab application
          type: string
        client_secret:
          description: the client secret of the gitlab application
          type: string
      required:
      - client_id
      - client_secret
      - clone_url
      - instance_url
    HeroAccount:
      description: "HeroAccount model definition, see AccountUserMembershipSerializer\
        \ for other fields"
      properties:
        admin_url:
          type: string
        build_node_pool:
          type: string
        build_pre_process_timeout:
          type: integer
        build_resources:
          type: object
        build_timelimit:
          type: integer
        dev_server_resources:
          type: object
        concurrent_upload_limit:
          type: integer
        functions_config:
          type: object
        zuora_url:
          type: string
        sites_count:
          type: integer
        dunning:
          type: boolean
        enterprise_features:
          $ref: '#/components/schemas/EnterpriseFeatures'
      required:
      - admin_url
      - build_node_pool
      - build_pre_process_timeout
      - build_resources
      - build_timelimit
      - concurrent_upload_limit
      - dev_server_resources
      - dunning
      - enterprise_features
      - functions_config
      - sites_count
      - zuora_url
    EnterpriseFeatures:
      description: EnterpriseFeatures model definition.
      properties:
        high_performance_builds:
          $ref: '#/components/schemas/HighPerformanceFeatureAttributes'
        high_performance_edge:
          $ref: '#/components/schemas/HighPerformanceFeatureAttributes'
        support_level:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        concurrent_builds:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        build_minutes:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_build_minutes:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        edge_functions:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_edge_functions:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        bandwidth:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_bandwidth:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        seats:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_seats:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
    EnterpriseFeatureAttributes:
      description: EnterpriseFeatureAttributes model definition.
      properties:
        price:
          description: The custom price for the feature in the contract; per unit
            for features that start with `additional_`
          type: string
        included_quantity:
          description: The amount included in the contract; consult Account#capabilities
            first
          type: integer
    HighPerformanceFeatureAttributes:
      description: HighPerformanceFeatureAttributes model definition.
      properties:
        enabled:
          description: Whether the feature is enabled for the account
          type: boolean
        price:
          description: The custom price for the feature in the contract; per unit
            for features that start with `additional_`
          type: string
        included_quantity:
          description: The amount included in the contract; consult Account#capabilities
            first
          type: integer
    EnterpriseFeatureAdditional:
      description: EnterpriseFeatureAdditional model definition.
      properties:
        price:
          description: The custom per unit price for the feature in the contract
          type: string
    EnterpriseFeatureEnablePrice:
      description: EnterpriseFeatureEnablePrice model definition.
      properties:
        enabled:
          description: Whether the feature is enabled for the account
          type: boolean
        price:
          description: The custom price for the feature in the contract
          type: string
    EnterpriseFeatureSupport:
      description: EnterpriseFeatureSupport model definition.
      properties:
        price:
          description: The custom price for support in the contract
          type: string
        level:
          description: "The support level, either **0**, **1** or **2**"
          type: integer
    EnterpriseFeaturesParam:
      description: EnterpriseFeaturesParam model definition.
      properties:
        saml_enabled:
          description: Whether SAML is enabled for the account
          type: boolean
        connect_api_enabled:
          description: Whether Netlify Connect is enabled for the account
          type: boolean
        high_performance_builds:
          $ref: '#/components/schemas/EnterpriseFeatureEnablePrice'
        high_performance_edge:
          $ref: '#/components/schemas/EnterpriseFeatureEnablePrice'
        support_level:
          $ref: '#/components/schemas/EnterpriseFeatureSupport'
        concurrent_builds:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_concurrent_builds:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
        build_minutes:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_build_minutes:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
        edge_functions:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_edge_functions:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
        bandwidth:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_bandwidth:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
        seats:
          $ref: '#/components/schemas/EnterpriseFeatureAttributes'
        additional_seats:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
        additional_committers:
          $ref: '#/components/schemas/EnterpriseFeatureAdditional'
    HeroOrganization:
      description: "HeroOrganization model definition, see OrganizationSerializer\
        \ for other fields"
      properties:
        admin_url:
          description: The URL of the organization in the Netlify UI
          type: string
        zuora_url:
          description: The URL of the zuora account
          type: string
        capabilities:
          type: object
      required:
      - admin_url
      - capabilities
      - zuora_url
    HeroSitesSummary:
      description: HeroSitesSummary model definition
      properties:
        account_id:
          type: string
        total:
          type: integer
        use_functions_count:
          type: integer
        use_forms_count:
          type: integer
        use_edge_functions_count:
          type: integer
        use_lm_count:
          type: integer
        functions_breakdown:
          type: object
      required:
      - account_id
      - functions_breakdown
      - total
      - use_edge_functions_count
      - use_forms_count
      - use_functions_count
      - use_lm_count
    HeroUser:
      description: "HeroUser model definition, see UserSerializer for other fields"
      properties:
        disabled:
          type: boolean
        disabled_reason:
          type: string
        spam:
          type: boolean
        spam_score:
          type: number
        billing_details:
          type: string
        payments_gateway_name:
          type: string
        github_slug:
          type: string
        bitbucket_slug:
          type: string
        all_sites:
          type: integer
        support_priority:
          type: integer
        zuora_url:
          type: string
        all_accounts:
          items:
            type: string
          type: array
        all_organizations:
          items:
            type: string
          type: array
        sift_spam_score:
          type: number
        safe_to_spam:
          type: boolean
      required:
      - all_accounts
      - all_organizations
      - all_sites
      - billing_details
      - bitbucket_slug
      - disabled
      - disabled_reason
      - github_slug
      - payments_gateway_name
      - safe_to_spam
      - sift_spam_score
      - spam
      - spam_score
      - support_priority
      - zuora_url
    OutgoingHook:
      description: Outgoing hook model definition
      example:
        data:
          email: foo@example.com
        form_id: form_id
        created_at: 2000-01-23T04:56:07.000+00:00
        type: email
        actor: deploy
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        success: true
        restricted: true
        site_id: site_id
        disabled: true
        id: id
        event: deploy_created
        form_name: form_name
      properties:
        id:
          description: The ID of the hook
          type: string
        site_id:
          description: The site ID associated with this hook
          type: string
        form_id:
          description: The form ID associated with this hook
          type: string
        form_name:
          description: The form name of this hook
          type: string
        user_id:
          description: The user ID of the hook creator
          type: string
        type:
          description: The type of the hook
          example: email
          type: string
        event:
          description: The name of the hook event
          example: deploy_created
          type: string
        data:
          description: The additional data for the hook
          example:
            email: foo@example.com
          type: object
        success:
          description: Whether the last notification succeeded
          type: boolean
        created_at:
          description: When the hook was created
          format: date-time
          type: string
        updated_at:
          description: When the hook was updated
          format: date-time
          type: string
        actor:
          description: Which actor the hook is triggered by
          example: deploy
          type: string
        disabled:
          description: Whether the hook is disabled due to the error rate
          type: boolean
        restricted:
          description: Whether this hook type is supported by the account type
          type: boolean
      required:
      - actor
      - created_at
      - data
      - disabled
      - event
      - form_id
      - form_name
      - id
      - restricted
      - site_id
      - success
      - type
      - updated_at
      - user_id
    CreateOutgoingHook:
      example:
        data:
          email: foo@example.com
        site_id: site_id
        form_id: form_id
        type: email
        event: deploy_created
        form_name: form_name
      properties:
        site_id:
          description: The site ID of the hook
          type: string
        form_id:
          description: The form ID of the hook (either form_id or form_name is required
            if the hook will be created for the form)
          type: string
        form_name:
          description: The form name of the hook
          type: string
        type:
          description: The type of the hook
          example: email
          type: string
        event:
          description: The name of the hook event
          example: deploy_created
          type: string
        data:
          description: Additional data for the hook
          example:
            email: foo@example.com
          type: object
    UpdateOutgoingHook:
      example:
        data:
          email: foo@example.com
        site_id: site_id
        form_id: form_id
        event: deploy_created
        form_name: form_name
      properties:
        site_id:
          description: The site ID of the hook
          type: string
        form_id:
          description: The form ID of the hook (either form_id or form_name is required
            if the hook will be created for the form)
          type: string
        form_name:
          description: The form name of the hook
          type: string
        event:
          description: The name of the hook event
          example: deploy_created
          type: string
        data:
          description: Additional data for the hook
          example:
            email: foo@example.com
          type: object
    OutgoingHookType:
      example:
        name: name
        fields:
        - name: name
          options: "{}"
        - name: name
          options: "{}"
        events:
        - events
        - events
      properties:
        name:
          description: The name of the hook type
          type: string
        events:
          description: The list of available events for this type
          items:
            type: string
          type: array
        fields:
          description: The list of fields this hook type can take
          items:
            $ref: '#/components/schemas/OutgoingHookType_fields_inner'
          type: array
    IdentityVerification:
      properties:
        provider:
          description: The provider of the IdentityVerification (stripe)
          type: string
        code:
          description: The UUID for IdentityVerification lookups
          type: string
        session_id:
          description: The session_id for IdentityVerification session
          type: string
        report:
          description: The report from the identity verification service
          type: object
        user:
          $ref: '#/components/schemas/User'
        state:
          description: The current state of the verification
          type: string
        created_at:
          description: When the Event IdentityVerification was created
          format: date-time
          type: string
        updated_at:
          description: When the Event IdentityVerification was updated
          format: date-time
          type: string
    LogDrain:
      description: Log Drain model definition
      properties:
        id:
          description: The ID of the log drain
          type: integer
        site_id:
          description: The site ID
          type: string
        log_types:
          description: An array of the selected log types
          type: string
        format:
          description: The format for log drain output
          enum:
          - json
          - ndjson
          type: string
        destination:
          description: The destination of the log drain
          enum:
          - datadog
          type: string
        exclude_pii:
          description: Whether to exclude PII from the user traffic logs
          type: boolean
        service_config:
          $ref: '#/components/schemas/LogDrainServiceConfig'
      required:
      - destination
      - format
      - id
      - log_types
      - service_config
      - site_id
    LogDrainServiceConfig:
      description: The configuration for sending log drains to the destination service
      properties:
        url:
          description: The URL for the log drain
          type: string
      required:
      - url
    Member:
      description: |-
        Member model definition. Similar to the User model, but includes the information
        of the associated team (account).
      example:
        committer_match_method:
          automatic: automatic
          manual: manual
        role: role
        capabilities: "{}"
        connected_accounts:
          github: github
          gitlab: gitlab
          bitbucket: bitbucket
        site_ids:
        - site_ids
        - site_ids
        managed_by_directory_sync: true
        pending: true
        created_at: 2000-01-23T04:56:07.000+00:00
        last_activity_date: 2000-01-23
        avatar: avatar
        site_access: site_access
        full_name: full_name
        updated_at: 2000-01-23T04:56:07.000+00:00
        mfa_enabled: true
        id: id
        email: email
      properties:
        id:
          description: the identifier for the member (user ID)
          type: string
        full_name:
          description: the full name of the member
          type: string
        email:
          description: the email of the member
          type: string
        avatar:
          description: the avatar URL of the member
          type: string
        role:
          description: the role of the member in the team
          type: string
        mfa_enabled:
          description: if the member has 2Factor Auth enabled or
          type: boolean
        capabilities:
          description: the table of what CRUD actions that the member could take in
            the UI
          type: object
        connected_accounts:
          $ref: '#/components/schemas/CDP_User_connected_accounts'
        site_ids:
          description: site ids this member has access to
          items:
            type: string
          type: array
        site_access:
          description: "which site access this member has. either all, selected, or\
            \ none"
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        pending:
          description: if the associated invite is pending acceptance
          type: boolean
        managed_by_directory_sync:
          description: flag indicating if the member is managed by an idp directory
          type: boolean
        committer_match_method:
          $ref: '#/components/schemas/Member_committer_match_method'
        last_activity_date:
          description: "The last activity date of the member on the site. Note: activity\
            \ data cannot be accessed before Nov 17th 2023, null values indicate last\
            \ activity was before this date."
          format: date
          type: string
      required:
      - avatar
      - capabilities
      - connected_accounts
      - created_at
      - email
      - full_name
      - id
      - managed_by_directory_sync
      - mfa_enabled
      - pending
      - role
      - site_access
      - site_ids
      - updated_at
    OAuth_Ticket:
      example:
        authorized: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        client_id: client_id
      properties:
        id:
          description: The ID for the OAuth ticket
          type: string
        client_id:
          description: The UID of the OAuth application
          type: string
        authorized:
          description: Whether the OAuth ticket is authorized
          type: boolean
        created_at:
          description: When the OAuth ticket was created
          format: date-time
          type: string
      required:
      - authorized
      - client_id
      - created_at
      - id
    OrganizationAccount:
      description: "Account model definition, with more details relating to organizations."
      example:
        high_performance_edge_enabled: true
        bandwidth_usage:
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          period_end_date: 2000-01-23T04:56:07.000+00:00
          additional: 1
          period_start_date: 2000-01-23T04:56:07.000+00:00
          used: 0
          included: 6
        high_performance_builds_enabled: true
        support_level: support_level
        billing_name: billing_name
        member_roles:
        - {}
        - {}
        included_concurrent_builds: 4
        billing_email: billing_email
        name: name
        used_seats: 1
        build_status:
          enqueued: 2
          pending_concurrency: 5
          minutes:
            current: 7
            previous: 9
            period_end_date: 2000-01-23T04:56:07.000+00:00
            last_updated_at: 2000-01-23T04:56:07.000+00:00
            included_minutes: 3
            period_start_date: 2000-01-23T04:56:07.000+00:00
            included_minutes_with_packs: 2
          active: 5
        id: id
        total_seats: 7
        owner_ids:
        - owner_ids
        - owner_ids
        slug: slug
      properties:
        bandwidth_usage:
          $ref: '#/components/schemas/BandwidthUsage'
        billing_email:
          description: The billing email for the account
          type: string
        billing_name:
          description: The billing name for the account
          type: string
        build_status:
          $ref: '#/components/schemas/BuildStatus'
        high_performance_builds_enabled:
          description: Whether the HP builds is enabled for the account
          type: boolean
        high_performance_edge_enabled:
          description: Whether the HP edge is enabled for the account
          type: boolean
        id:
          description: The identifier for the account (account ID)
          type: string
        included_concurrent_builds:
          description: The number of included concurrent builds
          type: integer
        member_roles:
          items:
            $ref: '#/components/schemas/AccountMemberRole'
          type: array
        name:
          description: The name for the account
          type: string
        owner_ids:
          description: An array of owner_ids on the account
          items:
            type: string
          type: array
        slug:
          description: The slug for the account
          type: string
        support_level:
          description: The support level of the account
          type: string
        total_seats:
          description: Total seats
          type: integer
        used_seats:
          description: Used seats
          type: integer
      required:
      - bandwidth_usage
      - billing_email
      - billing_name
      - build_status
      - high_performance_builds_enabled
      - high_performance_edge_enabled
      - id
      - included_concurrent_builds
      - member_roles
      - name
      - owner_ids
      - slug
      - support_level
      - total_seats
      - used_seats
    Organization:
      description: Organization model definition
      example:
        billing_period: billing_period
        country: country
        bill_cycle_day: 6
        contract_term_months: 1
        logo_url: logo_url
        city: city
        created_at: 2000-01-23T04:56:07.000+00:00
        enforce_saml: not_enforced
        contract_start_date: 2000-01-23T04:56:07.000+00:00
        contract_end_date: 2000-01-23T04:56:07.000+00:00
        saml_enabled_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        billing_email: billing_email
        saml_enabled: true
        id: id
        state: state
        first_name: first_name
        slug: slug
        support_administration_enabled: true
        total_member_count: 5
        capabilities: "{}"
        payment_term: 0
        address2: address2
        address1: address1
        sandbox: true
        last_name: last_name
        enforce_mfa: not_enforced
        directory_sync_connected_at: 2000-01-23T04:56:07.000+00:00
        payment_method_id: payment_method_id
        directory_sync_activated_at: 2000-01-23T04:56:07.000+00:00
        auto_renew: true
        purchase_order: purchase_order
        company_name: company_name
        name: name
        invoicing: true
        directory_sync_deleted_at: 2000-01-23T04:56:07.000+00:00
        postal_code: postal_code
        directory_sync_deactivated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        slug:
          description: "The slug for the organization, a normalized internal identifier\
            \ for use in places like URLs"
          type: string
        id:
          description: The organization ID
          type: string
        name:
          description: The name for the organization
          type: string
        created_at:
          description: When the organization was created
          format: date-time
          type: string
        updated_at:
          description: When the organization was updated
          format: date-time
          type: string
        billing_email:
          description: The billing email for the organization
          type: string
        logo_url:
          description: The logo url of the organization
          type: string
        billing_period:
          description: Billing Period
          type: string
        invoicing:
          description: Whether the organization uses invoices
          type: boolean
        payment_term:
          description: "The number of days to pay the invoice; Only applies to organizations\
            \ where invoicing is true.  Value values: *30*, *60*, *null*, defaults\
            \ to 30."
          type: integer
        payment_method_id:
          description: The payment method ID
          type: string
        sandbox:
          description: Whether the organization uses Zuora sandbox
          type: boolean
        bill_cycle_day:
          description: The bill cycle day of the month for the Zuora account
          type: integer
        contract_start_date:
          description: When the current contract starts
          format: date-time
          type: string
        contract_end_date:
          description: When the current contract ends
          format: date-time
          type: string
        contract_term_months:
          description: The contract term length in months
          type: integer
        auto_renew:
          description: Whether the enterprise subscription automatically renews at
            the end of its term in Zuora
          type: boolean
        purchase_order:
          description: The purchase order number
          type: string
        first_name:
          description: The first name to show on invoice
          type: string
        last_name:
          description: The last name to show on invoice
          type: string
        company_name:
          description: The company name to show on invoice
          type: string
        address1:
          description: The first address line to show on invoice
          type: string
        address2:
          description: The second address line to show on invoice
          type: string
        city:
          description: The city to show on invoice
          type: string
        state:
          description: The state to show on invoice
          type: string
        postal_code:
          description: The postal code to show on invoice
          type: string
        country:
          description: The country to show on invoice
          type: string
        saml_enabled:
          description: Whether the organization has configured sso
          type: boolean
        enforce_saml:
          description: Determines type of saml enforcement
          enum:
          - not_enforced
          - enforced_strict
          nullable: true
          type: string
          nullable: true
        enforce_mfa:
          description: Determines type of mfa enforcement
          enum:
          - not_enforced
          - enforced
          - dry-run_strict
          nullable: true
          type: string
          nullable: true
        capabilities:
          type: object
        support_administration_enabled:
          description: Whether the organization allows Netlify support to access their
            account via UI
          type: boolean
        directory_sync_connected_at:
          description: When the organization connected to directory sync
          format: date-time
          nullable: true
          type: string
          nullable: true
        directory_sync_activated_at:
          description: When the organization activated directory sync
          format: date-time
          nullable: true
          type: string
          nullable: true
        directory_sync_deactivated_at:
          description: When the organization deactivated directory sync
          format: date-time
          nullable: true
          type: string
          nullable: true
        directory_sync_deleted_at:
          description: When the organization deleted directory sync
          format: date-time
          nullable: true
          type: string
          nullable: true
        saml_enabled_at:
          description: When the organization enabled SAML
          format: date-time
          nullable: true
          type: string
          nullable: true
        total_member_count:
          description: The number of team members in the organization
          type: integer
      required:
      - address1
      - address2
      - auto_renew
      - bill_cycle_day
      - billing_email
      - billing_period
      - capabilities
      - city
      - company_name
      - contract_end_date
      - contract_start_date
      - contract_term_months
      - country
      - created_at
      - directory_sync_activated_at
      - directory_sync_connected_at
      - directory_sync_deactivated_at
      - directory_sync_deleted_at
      - enforce_mfa
      - enforce_saml
      - first_name
      - id
      - invoicing
      - last_name
      - logo_url
      - name
      - payment_method_id
      - payment_term
      - postal_code
      - purchase_order
      - saml_enabled
      - saml_enabled_at
      - sandbox
      - slug
      - state
      - support_administration_enabled
      - total_member_count
      - updated_at
    PaymentMethod:
      description: PaymentMethod model definition
      example:
        zuora_id: zuora_id
        account_id: account_id
        data:
          last4: last4
          name: name
          card_type: card_type
        updated_at: 2000-01-23T04:56:07.000+00:00
        organization_id: organization_id
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        state: success
        type: type
        customer_id: customer_id
      properties:
        id:
          description: The payment method ID
          type: string
        type:
          description: The name for the organization
          type: string
        data:
          $ref: '#/components/schemas/PaymentMethod_data'
        state:
          description: The state of the payment method
          enum:
          - success
          - error
          type: string
        created_at:
          description: When the payment method was created
          format: date-time
          type: string
        updated_at:
          description: When the payment method was updated
          format: date-time
          type: string
        account_id:
          description: The ID of the account the payment method belongs to
          type: string
        customer_id:
          description: The ID of the customer the payment method belongs to
          type: string
        zuora_id:
          description: The Zuora payment method ID
          type: string
        organization_id:
          description: The ID of the organization the payment method belongs to
          type: string
      required:
      - account_id
      - created_at
      - customer_id
      - data
      - id
      - organization_id
      - state
      - type
      - updated_at
      - zuora_id
    PluginRun:
      description: PluginRun model definition
      properties:
        deploy_id:
          description: The ID of the deploy during which the plugin ran
          type: string
        site_id:
          description: The ID of the site for which the plugin ran
          type: string
        package:
          description: The name of the plugin npm package
          type: string
        version:
          description: The version of the plugin that ran during the deploy
          type: string
        reporting_event:
          description: The last build lifecycle event during which the plugin ran
          type: string
        state:
          description: "The resulting success, failure, or cancelation state"
          enum:
          - success
          - canceled_build
          - failed_plugin
          - failed_build
          - skipped
          - none
          type: string
        title:
          description: The title reported by the plugin
          type: string
        summary:
          description: The summary reported by the plugin
          type: string
        text:
          description: The full text result reported by the plugin
          type: string
      required:
      - deploy_id
      - package
      - reporting_event
      - site_id
      - state
      - summary
      - text
      - title
      - version
    PluginRunCreateParams:
      properties:
        package:
          description: The name of the plugin
          type: string
        version:
          description: The version of the plugin that was run
          type: string
        reporting_event:
          description: The plugin build lifecycle event that generated the report
            e.g onPostBuild
          type: string
        state:
          description: "The resulting success, failure or cancellation state"
          enum:
          - success
          - canceled_build
          - failed_plugin
          - failed_build
          - skipped
          - none
          type: string
        summary:
          description: The summary reported by the plugin
          type: string
        text:
          description: The full text result reported by the plugin
          type: string
        deploy_id:
          description: The ID of the deploy during which the plugin ran
          type: string
        site_id:
          description: The ID of the site for which the plugin ran
          type: string
    Plugin:
      description: Plugin model definition
      properties:
        package:
          description: The name of the plugin package
          type: string
        pinned_version:
          description: The pinned major version for the plugin
          type: string
      required:
      - package
      - pinned_version
    PluginParams:
      properties:
        pinned_version:
          description: The pinned major version for the plugin
          type: string
    PluginCreateParams:
      properties:
        package:
          description: The name of the plugin package
          type: string
        pinned_version:
          description: The pinned major version for the plugin
          type: string
    PublicDeploy:
      description: PublicDeploy model definition
      properties:
        id:
          description: The deploy ID
          type: string
        site_id:
          description: The site ID
          type: string
        build_id:
          description: The build ID
          type: string
        state:
          description: The state of the deploy
          enum:
          - new
          - pending_review
          - accepted
          - rejected
          - enqueued
          - building
          - uploading
          - uploaded
          - preparing
          - prepared
          - processing
          - ready
          - error
          - retrying
          type: string
        name:
          description: The site name
          type: string
        url:
          description: The HTTP URL of the production deploy
          type: string
        ssl_url:
          description: The HTTPS URL of the production deploy
          type: string
        admin_url:
          description: The URL of the deploy in the Netlify UI
          type: string
        deploy_url:
          description: The HTTP URL of the Deploy Preview
          type: string
        deploy_ssl_url:
          description: The HTTPS URL of the Deploy Preview
          type: string
        created_at:
          description: When the deploy was created
          format: date-time
          type: string
        updated_at:
          description: When the deploy was updated
          format: date-time
          type: string
        commit_ref:
          description: The git commit SHA
          type: string
        review_id:
          description: The pull request or merge request number
          type: integer
        skipped:
          description: Whether the deploy has been skipped
          type: boolean
        locked:
          description: Whether the deploy has been locked
          type: boolean
        branch:
          description: The git branch name of the deploy
          type: string
        commit_url:
          description: The URL for the commit of the deploy
          type: string
        title:
          description: The title of the pull request or merge request
          type: string
        review_url:
          description: The URL of the pull request or merge request
          type: string
        published_at:
          description: When the deploy was published to production
          format: date-time
          type: string
        context:
          description: The deploy context
          enum:
          - production
          - branch-deploy
          - deploy-preview
          type: string
        deploy_time:
          description: "The total time, in seconds, it took to deploy"
          type: integer
        summary:
          $ref: '#/components/schemas/Deploy_summary'
        plugin_state:
          description: The state of the deploy's plugins
          enum:
          - success
          - canceled_build
          - failed_plugin
          - failed_build
          - skipped
          - none
          type: string
        public:
          description: Whether the deploy is public
          type: boolean
      required:
      - admin_url
      - branch
      - build_id
      - commit_ref
      - commit_url
      - context
      - created_at
      - deploy_ssl_url
      - deploy_time
      - deploy_url
      - id
      - locked
      - name
      - plugin_state
      - public
      - published_at
      - review_id
      - review_url
      - site_id
      - skipped
      - ssl_url
      - state
      - summary
      - title
      - updated_at
      - url
    Receipt:
      example:
        transaction_id: transaction_id
        tax_amount: tax_amount
        html_stored: true
        amount: amount
        usage:
        - usage
        - usage
        created_at: 2000-01-23T04:56:07.000+00:00
        display_amount: display_amount
        payment_method_last_four: payment_method_last_four
        payment_method_card_type: payment_method_card_type
        payment_method_id: payment_method_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        site_id: site_id
        id: id
        transaction_created_at: 2000-01-23T04:56:07.000+00:00
        items:
        - items
        - items
        print_fields:
        - print_fields
        - print_fields
      properties:
        id:
          type: string
        transaction_id:
          type: string
        amount:
          type: string
        print_fields:
          items:
            type: string
          type: array
        items:
          items:
            type: string
          type: array
        usage:
          items:
            type: string
          type: array
        display_amount:
          type: string
        tax_amount:
          type: string
        user_id:
          type: string
        site_id:
          type: string
        payment_method_id:
          type: string
        payment_method_last_four:
          type: string
        payment_method_card_type:
          type: string
        html_stored:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        transaction_created_at:
          format: date-time
          type: string
      required:
      - amount
      - created_at
      - display_amount
      - html_stored
      - id
      - items
      - payment_method_card_type
      - payment_method_id
      - payment_method_last_four
      - print_fields
      - site_id
      - tax_amount
      - transaction_created_at
      - transaction_id
      - updated_at
      - usage
      - user_id
    Repo:
      description: Repo model definition
      example:
        repo_url: repo_url
        repo_type: repo_type
        stop_builds: true
        skip_automatic_builds: true
        deploy_key_id: deploy_key_id
        created_at: 2000-01-23T04:56:07.000+00:00
        installation_id: 0
        dir: dir
        env: "{}"
        repo_branch: repo_branch
        base_rel_dir: true
        private_logs: true
        allowed_branches:
        - allowed_branches
        - allowed_branches
        functions_dir: functions_dir
        repo_path: repo_path
        untrusted_flow: untrusted_flow
        skip_prs: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        provider: provider
        public_repo: true
        repo_owner_type: repo_owner_type
        cmd: cmd
        base: base
        configuration_file_path: configuration_file_path
      properties:
        allowed_branches:
          items:
            type: string
          type: array
        base:
          type: string
        base_rel_dir:
          type: boolean
        configuration_file_path:
          type: string
        cmd:
          type: string
        created_at:
          format: date-time
          type: string
        deploy_key_id:
          type: string
        dir:
          type: string
        env:
          type: object
        functions_dir:
          type: string
        installation_id:
          type: integer
        private_logs:
          type: boolean
        provider:
          type: string
        public_repo:
          type: boolean
        repo_branch:
          type: string
        repo_owner_type:
          type: string
        repo_path:
          type: string
        repo_type:
          description: Always "git"
          type: string
        repo_url:
          type: string
        skip_automatic_builds:
          type: boolean
        skip_prs:
          type: boolean
        stop_builds:
          type: boolean
        untrusted_flow:
          type: string
        updated_at:
          format: date-time
          type: string
    Reviewer:
      description: Reviewer model definition
      properties:
        id:
          description: The ID for the reviewer
          type: string
        account_id:
          description: The ID of the account the reviewer is associated with
          type: string
        user_id:
          description: The ID of the user associated with the reviewer
          type: string
        state:
          description: The state of the reviewer
          enum:
          - pending
          - approved
          - blocked
          type: string
        site_access:
          description: The site access type of the reviewer
          enum:
          - all
          - selected
          - none
          type: string
        email:
          description: The email address of the reviewer
          type: string
        full_name:
          description: The full name of the reviewer
          type: string
        created_at:
          description: When the reviewer was created
          format: date-time
          type: string
        updated_at:
          description: Last time the reviewer was updated
          format: date-time
          type: string
      required:
      - account_id
      - created_at
      - email
      - full_name
      - id
      - site_access
      - state
      - updated_at
      - user_id
    ReviewerSetup:
      properties:
        state:
          description: The state of the reviewer
          enum:
          - pending
          - approved
          - blocked
          type: string
        site_access:
          description: "The site access type of the reviewer. Currently, only **all**\
            \ is supported"
          enum:
          - all
          - selected
          - none
          type: string
        site_ids:
          description: An array of site IDs the reviewer has access to. Only required
            when site_access is selected
          items:
            type: string
          type: array
    ReviewerInvite:
      properties:
        email:
          description: The email address to send a reviewer invitation
          type: string
        deploy_id:
          description: The deploy ID of the deploy preview which will be used to create
            a deploy preview link as an invitation link
          type: string
    SecurityContact:
      description: SecurityContact model definition
      properties:
        email:
          description: Email address of the security contact
          type: string
        role:
          description: Role of the security contact
          type: string
        created_at:
          description: When the security contact was created
          format: date-time
          type: string
        updated_at:
          description: When the security contact was updated
          format: date-time
          type: string
      required:
      - created_at
      - email
      - role
      - updated_at
    ServiceInstance:
      example:
        service_slug: service_slug
        updated_at: 2000-01-23T04:56:07.000+00:00
        service_name: service_name
        snippets: "{}"
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        service_path: service_path
        auth_url: auth_url
        env: "{}"
        config: "{}"
        url: url
        external_attributes: "{}"
      properties:
        id:
          description: the identifier for the service instance
          type: string
        url:
          type: string
        config:
          type: object
        service_slug:
          description: the service slug of the instance
          type: string
        service_path:
          description: the service path of the instance
          type: string
        service_name:
          description: the service name of the instance
          type: string
        env:
          type: object
        snippets:
          type: object
        auth_url:
          type: string
        external_attributes:
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - auth_url
      - config
      - created_at
      - env
      - external_attributes
      - id
      - service_name
      - service_path
      - service_slug
      - snippets
      - updated_at
      - url
    Service:
      example:
        environments:
        - environments
        - environments
        icon: icon
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        long_description: long_description
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        manifest_url: manifest_url
        id: id
        service_path: service_path
        slug: slug
        events:
        - "{}"
        - "{}"
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        service_path:
          type: string
        long_description:
          type: string
        description:
          type: string
        events:
          items:
            type: object
          type: array
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        manifest_url:
          type: string
        environments:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - description
      - environments
      - events
      - icon
      - id
      - long_description
      - manifest_url
      - name
      - service_path
      - slug
      - tags
      - updated_at
    SimpleAccount:
      description: SimpleAccount model definition
      properties:
        id:
          description: The ID of the account
          type: string
        name:
          description: The name of the account
          type: string
        team_logo_url:
          description: The URL of the team logo
          type: string
        cdp_capabilities:
          description: The hash list of capabilities related to CDP
          type: object
      required:
      - cdp_capabilities
      - id
      - name
      - team_logo_url
    Site_Simple:
      example:
        pending_create_changes: 0.8008281904610115
        primary_create_project: primary_create_project
      properties:
        primary_create_project:
          type: string
        pending_create_changes:
          type: number
      required:
      - pending_create_changes
      - primary_create_project
    SiteLabel:
      example:
        account_id: account_id
        color: color
        name: name
        description: description
        id: id
      properties:
        id:
          description: the id of the label
          type: string
        name:
          description: the name of the label
          type: string
        description:
          description: the description of the label
          type: string
        color:
          description: the color of the label
          type: string
        account_id:
          description: the account_id of the label
          type: string
    Site:
      description: Site model definition
      example:
        sso_login: true
        id_domain: id_domain
        deploy_url: deploy_url
        deploy_hook: deploy_hook
        created_at: 2000-01-23T04:56:07.000+00:00
        sso_login_context: sso_login_context
        domain_aliases:
        - domain_aliases
        - domain_aliases
        password: password
        updated_at: 2000-01-23T04:56:07.000+00:00
        password_hash: password_hash
        account_name: account_name
        deploy_retention_in_days: 1.4658129805029452
        id: id
        state: state
        plan: plan
        default_domain: default_domain
        custom_domain: custom_domain
        deploy_preview_custom_domain: deploy_preview_custom_domain
        managed_dns: true
        force_ssl: true
        notification_email: notification_email
        capabilities: "{}"
        admin_url: admin_url
        build_settings:
          repo_url: repo_url
          repo_type: repo_type
          stop_builds: true
          skip_automatic_builds: true
          deploy_key_id: deploy_key_id
          created_at: 2000-01-23T04:56:07.000+00:00
          installation_id: 0
          dir: dir
          env: "{}"
          repo_branch: repo_branch
          base_rel_dir: true
          private_logs: true
          allowed_branches:
          - allowed_branches
          - allowed_branches
          functions_dir: functions_dir
          repo_path: repo_path
          untrusted_flow: untrusted_flow
          skip_prs: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          provider: provider
          public_repo: true
          repo_owner_type: repo_owner_type
          cmd: cmd
          base: base
          configuration_file_path: configuration_file_path
        password_context: password_context
        url: url
        labels:
        - account_id: account_id
          color: color
          name: name
          description: description
          id: id
        - account_id: account_id
          color: color
          name: name
          description: description
          id: id
        account_slug: account_slug
        account_id: account_id
        ssl_url: ssl_url
        name: name
        processing_settings:
          html:
            pretty_urls: true
          ignore_html_forms: true
        build_image: build_image
        branch_deploy_custom_domain: branch_deploy_custom_domain
        screenshot_url: screenshot_url
        build_timelimit: 6.027456183070403
      properties:
        id:
          type: string
        plan:
          type: string
        name:
          type: string
        default_domain:
          type: string
        custom_domain:
          type: string
        branch_deploy_custom_domain:
          type: string
        deploy_preview_custom_domain:
          type: string
        domain_aliases:
          items:
            type: string
          type: array
        password:
          type: string
        password_context:
          type: string
        password_hash:
          type: string
        sso_login:
          type: boolean
        sso_login_context:
          type: string
        notification_email:
          type: string
        url:
          type: string
        admin_url:
          type: string
        deploy_url:
          type: string
        state:
          type: string
        screenshot_url:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        ssl_url:
          type: string
        force_ssl:
          type: boolean
        build_settings:
          $ref: '#/components/schemas/Repo'
        processing_settings:
          $ref: '#/components/schemas/Site_processing_settings'
        deploy_hook:
          type: string
        managed_dns:
          type: boolean
        account_id:
          type: string
        account_slug:
          type: string
        account_name:
          type: string
        capabilities:
          type: object
        id_domain:
          type: string
        build_image:
          type: string
        build_timelimit:
          type: number
        deploy_retention_in_days:
          type: number
        labels:
          items:
            $ref: '#/components/schemas/SiteLabel'
          type: array
      required:
      - account_id
      - account_name
      - account_slug
      - admin_url
      - branch_deploy_custom_domain
      - build_image
      - build_settings
      - build_timelimit
      - capabilities
      - created_at
      - custom_domain
      - default_domain
      - deploy_hook
      - deploy_preview_custom_domain
      - deploy_retention_in_days
      - deploy_url
      - domain_aliases
      - force_ssl
      - id
      - id_domain
      - labels
      - managed_dns
      - name
      - notification_email
      - password
      - password_context
      - password_hash
      - plan
      - processing_settings
      - screenshot_url
      - ssl_url
      - sso_login
      - sso_login_context
      - state
      - updated_at
      - url
    SitesSummary:
      description: SitesSummary model definition
      properties:
        account_id:
          type: string
        total_sites:
          type: integer
        included_sites:
          type: integer
        sites_with_custom_domains_count:
          type: integer
        concurrent_builds_count:
          type: integer
        extra_concurrent_builds:
          type: integer
      required:
      - account_id
      - concurrent_builds_count
      - extra_concurrent_builds
      - included_sites
      - sites_with_custom_domains_count
      - total_sites
    Slack_Generic:
      properties:
        id:
          description: The ID of the TeamWorkspace
          type: string
        account_id:
          description: The ID of the TeamWorkspace's Account
          type: string
        data:
          description: The data for the Notification
          type: hash
    Slack_SniCertificate:
      description: "@property(x-internal:true) other_sites [array<object>] A list\
        \ of sites also using this certificate. Included only in `show` responses."
      example:
        migrate_to_le_running: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        renewable: true
        renew_running: true
        custom: true
        domains:
        - domains
        - domains
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        state: state
        renewal_error_message: renewal_error_message
      properties:
        id:
          type: string
        state:
          type: string
        domains:
          items:
            type: string
          type: array
        expires_at:
          format: date-time
          type: string
        custom:
          type: boolean
        migrate_to_le_running:
          type: boolean
        renewal_error_message:
          type: string
        renewable:
          type: boolean
        renew_running:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - custom
      - domains
      - expires_at
      - id
      - migrate_to_le_running
      - renew_running
      - renewable
      - renewal_error_message
      - state
      - updated_at
    CertificateInfo:
      example:
        ca_certificates: ca_certificates
        certificate: certificate
        key: key
      properties:
        certificate:
          type: string
        key:
          type: string
        ca_certificates:
          type: string
    Slack_TeamWorkspace:
      properties:
        id:
          description: The ID of the TeamWorkspace
          type: string
        account_id:
          description: The ID of the TeamWorkspace's Account
          type: string
        created_at:
          description: When the TeamWorkspace was created
          type: datetime
        updated_at:
          description: When the TeamWorkspace was updated
          type: datetime
        workspace:
          $ref: '#/components/schemas/Slack_Workspace'
      required:
      - workspace
    Slack_TeamWorkspaceSubscription:
      properties:
        id:
          description: The ID of the TeamWorkspaceSubscription
          type: string
        site_name:
          description: The name of the Site the subscription is configured to
          type: string
        site_id:
          description: The id of the Site the subscription is configured to
          type: string
        event_type:
          description: The event_type for the subscription (deploy / site / membership
            / collaboration)
          type: string
        channel_id:
          description: The slack channel ID for the subscription
          type: string
        deploy_contexts:
          description: The context for the subscription (only set for deploy events)
          items:
            type: string
          type: array
        deploy_states:
          description: The states for the subscription (only set for deploy events)
          items:
            type: string
          type: array
        created_at:
          description: When the subscription was created
          type: datetime
        updated_at:
          description: When the subscription was updated
          type: datetime
        account_id:
          description: The account ID for the subscription
          type: string
        paused:
          description: If the channel is paused
          type: boolean
      required:
      - channel_id
      - event_type
      - id
      - site_id
      - site_name
    Slack_UserWorkspace:
      properties:
        id:
          description: The ID of the UserWorkspace
          type: string
        slack_user_id:
          description: The Slack User ID for user in the Workspace
          type: string
        workspace:
          $ref: '#/components/schemas/Slack_Workspace'
        configuration:
          description: The settings for the Workspace
          type: object
      required:
      - configuration
      - id
      - slack_user_id
      - workspace
    Slack_Workspace:
      properties:
        id:
          description: The ID of the Workspace
          type: string
        name:
          description: The name of the Workspace
          type: string
        slack_team_id:
          description: The Slack ID of the Workspace
          type: string
        cooldown_until:
          description: The cooldown datetime for the Workspace
          type: datetime
        plan:
          description: The billing tier of the Workspace
          type: string
      required:
      - id
      - name
      - slack_team_id
    SniCertificate:
      description: "@property(x-internal:true) other_sites [array<object>] A list\
        \ of sites also using this certificate. Included only in `show` responses."
      example:
        migrate_to_le_running: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        renewable: true
        renew_running: true
        custom: true
        domains:
        - domains
        - domains
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        state: state
        renewal_error_message: renewal_error_message
      properties:
        id:
          type: string
        state:
          type: string
        domains:
          items:
            type: string
          type: array
        expires_at:
          format: date-time
          type: string
        custom:
          type: boolean
        migrate_to_le_running:
          type: boolean
        renewal_error_message:
          type: string
        renewable:
          type: boolean
        renew_running:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - custom
      - domains
      - expires_at
      - id
      - migrate_to_le_running
      - renew_running
      - renewable
      - renewal_error_message
      - state
      - updated_at
    Snippet:
      example:
        general: general
        goal: goal
        general_position: head
        id: 0
        title: title
        goal_position: head
      properties:
        id:
          description: The ID of the snippet
          type: integer
        title:
          description: The title of the snippet
          type: string
        general:
          description: The general snippet content
          type: string
        general_position:
          description: The position to inject the snippet. Uses footer if not specified
          enum:
          - head
          - footer
          type: string
        goal:
          description: The goal snippet content
          type: string
        goal_position:
          description: The position to inject the snippet. Uses footer if not specified
          enum:
          - head
          - footer
          type: string
      required:
      - general
      - general_position
      - goal
      - goal_position
      - id
      - title
    SnippetParams:
      properties:
        type:
          description: The type of the snippet
          type: string
        title:
          description: The title of the snippet
          type: string
        general:
          description: The general snippet content
          type: string
        general_position:
          description: The position to inject the snippet. Uses footer if not specified
          enum:
          - head
          - footer
          type: string
        goal:
          description: The goal snippet content
          type: string
        goal_position:
          description: The position to inject the snippet. Uses footer if not specified
          enum:
          - head
          - footer
          type: string
    TrafficRule:
      properties:
        action:
          $ref: '#/components/schemas/TrafficRule_Action'
        target:
          $ref: '#/components/schemas/TrafficRule_Target'
        description:
          type: string
        id:
          type: string
      required:
      - action
      - id
      - target
    TrafficRule_Action:
      properties:
        type:
          enum:
          - rate_limit
          - rewrite
          type: string
        config:
          $ref: '#/components/schemas/TrafficRule_Action_config'
      required:
      - config
      - type
    TrafficRule_Target:
      properties:
        type:
          enum:
          - or
          - and
          - geo
          - header
          - cookie
          - path
          - connection_ip
          - query
          - domain
          - method
          - client_ip
          type: string
        config:
          $ref: '#/components/schemas/TrafficRule_Target_config'
      required:
      - config
      - type
    ResponseConfig:
      properties:
        aggregate:
          $ref: '#/components/schemas/RateLimitConfig_AggregateConfig'
        rate_limit_config:
          $ref: '#/components/schemas/RateLimitConfig'
        status_code:
          description: "Response status code. Default: 429"
          type: integer
      required:
      - aggregate
      - rate_limit_config
    RateLimitConfig_AggregateConfig:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/RateLimitConfig_AggregateConfig_AggregateKey'
          type: array
      required:
      - keys
    RateLimitConfig:
      properties:
        algorithm:
          description: "]"
          enum:
          - sliding_window
          type: string
        window_size:
          description: In seconds
          type: integer
        window_limit:
          type: integer
      required:
      - algorithm
      - window_limit
    RateLimitConfig_RateLimits:
      properties:
        window:
          type: integer
      required:
      - window
    RateLimitConfig_AggregateConfig_AggregateKey:
      properties:
        type:
          enum:
          - ip
          - domain
          type: string
      required:
      - type
    RewriteConfig:
      properties:
        aggregate:
          $ref: '#/components/schemas/RateLimitConfig_AggregateConfig'
        limits:
          $ref: '#/components/schemas/RateLimitConfig_RateLimits'
        rate_limit_config:
          $ref: '#/components/schemas/RateLimitConfig'
        to:
          description: The path and query to rewrite the request to
          type: string
      required:
      - aggregate
      - limits
      - rate_limit_config
      - to
    CompositeTargetConfig:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/TrafficRule_Target'
          type: array
      required:
      - conditions
    GeoTargetConfig:
      properties:
        country:
          type: string
        sub_region:
          type: string
        exclude:
          type: boolean
      required:
      - country
    KeyValueTargetConfig:
      properties:
        key:
          type: string
        value:
          type: string
        regex:
          type: boolean
        exclude:
          type: boolean
      required:
      - key
      - value
    ValueTargetConfig:
      properties:
        value:
          type: string
        regex:
          type: boolean
        exclude:
          type: boolean
      required:
      - value
    IPTargetConfig:
      properties:
        address:
          type: string
        exclude:
          type: boolean
      required:
      - address
    TrafficRulesConfig:
      description: TrafficRulesConfig model definition
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/TrafficRule'
          type: array
        created_at:
          description: When the traffic rule config was created
          format: date-time
          type: string
        updated_at:
          description: When the traffic rule config was updated
          format: date-time
          type: string
      required:
      - created_at
      - id
      - rules
      - updated_at
    SetTrafficRulesConfig:
      properties:
        config_id:
          type: string
        scope:
          type: string
    SplitTest:
      example:
        path: path
        updated_at: 2000-01-23T04:56:07.000+00:00
        site_id: site_id
        name: name
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        branches:
        - "{}"
        - "{}"
        unpublished_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        site_id:
          type: string
        name:
          type: string
        path:
          type: string
        branches:
          items:
            type: object
          type: array
        active:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        unpublished_at:
          format: date-time
          type: string
      required:
      - active
      - branches
      - created_at
      - id
      - name
      - path
      - site_id
      - unpublished_at
      - updated_at
    User:
      description: User model definition
      example:
        connected_accounts:
          github: github
          gitlab: gitlab
          bitbucket: bitbucket
        last_login: 2000-01-23T04:56:07.000+00:00
        site_count: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        preferred_account_id: preferred_account_id
        saml_account_id: saml_account_id
        command_bar_user_id: command_bar_user_id
        saml_slug: saml_slug
        access_token: access_token
        uid: uid
        refresh_token: refresh_token
        full_name: full_name
        avatar_url: avatar_url
        mfa_enabled: true
        id: id
        favorite_sites:
        - favorite_sites
        - favorite_sites
        email: email
        login_providers:
        - login_providers
        - login_providers
        slug: slug
        tracking_id: tracking_id
      properties:
        id:
          description: The identifier for the user
          type: string
        uid:
          description: The uid for multipass
          type: string
        full_name:
          description: The full name of the user
          type: string
        avatar_url:
          description: The URL for the avatar
          type: string
        email:
          description: The email of the user
          type: string
        site_count:
          description: The number of sites the user has
          type: integer
        created_at:
          description: When the user was created
          format: date-time
          type: string
        last_login:
          description: Last time this user logged in
          format: date-time
          type: string
        login_providers:
          description: An array of login providers the user has
          items:
            type: string
          type: array
        slug:
          description: The slug of the user
          type: string
        connected_accounts:
          $ref: '#/components/schemas/User_connected_accounts'
        tracking_id:
          description: The tracking ID of the user
          type: string
        mfa_enabled:
          description: Whether the user has 2 Factor Auth enabled
          type: boolean
        saml_account_id:
          description: The account_id that is used for SSO
          type: string
        saml_slug:
          description: The account slug that is used for SSO
          type: string
        access_token:
          description: Only provided in `/auth/login` response
          type: string
        refresh_token:
          description: Issued during OAuth flows
          type: string
        preferred_account_id:
          description: Id of account user wants UI to start on
          type: string
        command_bar_user_id:
          description: HMAC-signed user ID to be shared with CommandBar for storing
            user preferences
          type: string
        favorite_sites:
          description: Favorited sites UUIDs
          items:
            type: string
          type: array
      required:
      - access_token
      - avatar_url
      - command_bar_user_id
      - connected_accounts
      - created_at
      - email
      - favorite_sites
      - full_name
      - id
      - last_login
      - login_providers
      - mfa_enabled
      - preferred_account_id
      - refresh_token
      - saml_account_id
      - saml_slug
      - site_count
      - slug
      - tracking_id
      - uid
    MfaSetup:
      properties:
        seed:
          description: OTP seed
          type: string
        qrcode:
          description: Base-64 encoded QR Code png to setup 2FA
          type: string
        token:
          description: To be returned on 2FA code confirmation
          type: string
    MfaConfirmation:
      properties:
        backup_codes:
          description: MFA Backup codes
          items:
            type: string
          type: array
    UserSignup:
      properties:
        email:
          description: The email address
          type: string
        password:
          description: The password
          type: string
        full_name:
          description: The full name
          type: string
        jobrole:
          description: The job role (used for the user identify)
          type: string
        reviewer_signup:
          $ref: '#/components/schemas/ReviewerSignupInfo'
    ReviewerSignupInfo:
      properties:
        deploy_id:
          description: The deploy ID that the user wants to join as a reviewer
          type: string
        path:
          description: The path of Deploy Previews page that the reviewer was on during
            the signup
          type: string
    UserQuestionnaireParams:
      properties:
        userId:
          type: string
        email:
          type: string
        fullName:
          type: string
        use_case_context:
          type: string
        teamName:
          type: string
        jobrole:
          type: string
        job_leadership_title:
          type: string
        company_size__c:
          type: string
        useCase:
          type: string
        useCaseSomethingElse:
          type: string
    Questionnaire:
      properties:
        company_size_c:
          type: string
        job_leadership_title:
          type: string
        job_role:
          type: string
        use_case:
          type: string
        use_case_context:
          type: string
        use_case_something_else:
          type: string
    createAccount_request:
      properties:
        name:
          type: string
        type_id:
          type: string
        payment_method_id:
          type: string
        period:
          enum:
          - monthly
          - yearly
          type: string
    getSiteAssetPublicSignature_200_response:
      example:
        url: url
      properties:
        url:
          type: string
    updateSiteBuildLog_request:
      properties:
        message:
          type: string
        error:
          type: boolean
        section:
          type: string
    updateSiteBuildLog_422_response:
      example:
        code: 0
        message: message
      properties:
        code:
          type: integer
        message:
          type: string
    createSiteDeploy_request_function_schedules_inner:
      example:
        cron: cron
        name: name
      properties:
        name:
          type: string
        cron:
          type: string
    createSiteDeploy_request_functions_config_name_routes_inner:
      properties:
        pattern:
          type: string
        literal:
          type: string
        expression:
          type: string
        methods:
          items:
            type: string
          type: array
    createSiteDeploy_request_functions_config_name:
      properties:
        priority:
          type: integer
        build_data:
          type: object
        display_name:
          type: string
        generator:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/createSiteDeploy_request_functions_config_name_routes_inner'
          type: array
    createSiteDeploy_request_functions_config:
      properties:
        name:
          $ref: '#/components/schemas/createSiteDeploy_request_functions_config_name'
    createSiteDeploy_request:
      properties:
        files:
          type: object
        draft:
          type: boolean
        async:
          type: boolean
        functions:
          type: object
        function_schedules:
          items:
            $ref: '#/components/schemas/createSiteDeploy_request_function_schedules_inner'
          type: array
        functions_config:
          $ref: '#/components/schemas/createSiteDeploy_request_functions_config'
        branch:
          type: string
        framework:
          type: string
    updateSiteDeploy_request_functions_config_name:
      properties:
        display_name:
          type: string
    updateSiteDeploy_request_functions_config:
      properties:
        name:
          $ref: '#/components/schemas/updateSiteDeploy_request_functions_config_name'
    updateSiteDeploy_request:
      properties:
        files:
          type: object
        draft:
          type: boolean
        async:
          type: boolean
        functions:
          type: object
        function_schedules:
          items:
            $ref: '#/components/schemas/createSiteDeploy_request_function_schedules_inner'
          type: array
        functions_config:
          $ref: '#/components/schemas/updateSiteDeploy_request_functions_config'
        branch:
          type: string
        framework:
          type: string
    transferDnsZone_200_response:
      example:
        success: true
        error: error
      properties:
        success:
          type: boolean
        error:
          type: string
    updateEnvVar_request:
      properties:
        values:
          items:
            $ref: '#/components/schemas/EnvVarValue'
          type: array
        scopes:
          items:
            enum:
            - builds
            - functions
            - runtime
            - post_processing
            type: string
          type: array
        is_secret:
          type: boolean
      requiredProperties:
      - values
      - scopes
      - is_secret
    uploadDeployFunction_200_response:
      example:
        name: name
      properties:
        name:
          type: string
    getOrganizationReceipts_422_response:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
    getOrganizationClientToken_200_response:
      example:
        signature: signature
        uri: uri
        payment_gateway_id: payment_gateway_id
        token: token
      properties:
        token:
          type: string
        signature:
          type: string
        uri:
          type: string
        payment_gateway_id:
          type: string
    createOrganizationPayment_data_parameter:
      properties:
        name:
          type: string
        last4:
          type: string
        card_type:
          type: string
    createSplitTest_request:
      properties:
        branch_tests:
          type: object
    getDirectory_200_response:
      example:
        name: name
        directory_type: directory_type
        scim_configured: true
        status: status
      properties:
        name:
          type: string
        directory_type:
          type: string
        scim_configured:
          type: boolean
        status:
          type: string
    AccountBuild_priority:
      description: included if the build is prioritized
      example:
        prioritized_by: prioritized_by
        prioritized_at: 2000-01-23T04:56:07.000+00:00
      properties:
        prioritized_at:
          format: date-time
          type: string
        prioritized_by:
          type: string
    AccountCompliance_private_corp_repos:
      properties:
        in_compliance:
          type: boolean
    AccountCompliance_max_members:
      properties:
        in_compliance:
          type: boolean
        count:
          type: integer
        in_negotiation:
          type: boolean
        continuous_deployment_disabled:
          type: boolean
    AdminSite_allOf_site_functions_config:
      type: object
    AssetCreateForm_fields:
      example:
        property2: property2
        property1: property1
      properties:
        property1:
          type: string
        property2:
          type: string
    BuildStatus_minutes:
      description: Build minutes information
      example:
        current: 7
        previous: 9
        period_end_date: 2000-01-23T04:56:07.000+00:00
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        included_minutes: 3
        period_start_date: 2000-01-23T04:56:07.000+00:00
        included_minutes_with_packs: 2
      properties:
        current:
          type: integer
        previous:
          type: integer
        period_start_date:
          format: date-time
          type: string
        period_end_date:
          format: date-time
          type: string
        last_updated_at:
          format: date-time
          type: string
        included_minutes:
          type: integer
        included_minutes_with_packs:
          type: integer
    CDP_User_connected_accounts:
      description: information of the connected providers' slug if any
      example:
        github: github
        gitlab: gitlab
        bitbucket: bitbucket
      properties:
        github:
          type: string
        gitlab:
          type: string
        bitbucket:
          type: string
    Deploy_summary_messages_inner:
      example:
        description: description
        details: details
        type: type
        title: title
      properties:
        type:
          type: string
        title:
          type: string
        description:
          type: string
        details:
          type: string
    Deploy_summary:
      description: Information about the summary of the deploy
      example:
        messages:
        - description: description
          details: details
          type: type
          title: title
        - description: description
          details: details
          type: type
          title: title
        status: status
      properties:
        status:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/Deploy_summary_messages_inner'
          type: array
    Function_ro_inner:
      properties:
        p:
          type: string
    OutgoingHookType_fields_inner:
      example:
        name: name
        options: "{}"
      properties:
        name:
          type: string
        options:
          type: object
    Member_committer_match_method:
      description: the method the member is matched to a committer by.
      example:
        automatic: automatic
        manual: manual
      properties:
        automatic:
          type: string
        manual:
          type: string
    PaymentMethod_data:
      description: The payment method data
      example:
        last4: last4
        name: name
        card_type: card_type
      properties:
        name:
          type: string
        last4:
          type: string
        card_type:
          type: string
    Site_processing_settings_html:
      example:
        pretty_urls: true
      properties:
        pretty_urls:
          type: boolean
    Site_processing_settings:
      example:
        html:
          pretty_urls: true
        ignore_html_forms: true
      properties:
        html:
          $ref: '#/components/schemas/Site_processing_settings_html'
        ignore_html_forms:
          type: boolean
    TrafficRule_Action_config:
      oneOf:
      - $ref: '#/components/schemas/ResponseConfig'
      - $ref: '#/components/schemas/RewriteConfig'
    TrafficRule_Target_config:
      oneOf:
      - $ref: '#/components/schemas/CompositeTargetConfig'
      - $ref: '#/components/schemas/GeoTargetConfig'
      - $ref: '#/components/schemas/KeyValueTargetConfig'
      - $ref: '#/components/schemas/ValueTargetConfig'
      - $ref: '#/components/schemas/IPTargetConfig'
    User_connected_accounts:
      description: Information of the connected providers' slug if any
      example:
        github: github
        gitlab: gitlab
        bitbucket: bitbucket
      properties:
        github:
          type: string
        gitlab:
          type: string
        bitbucket:
          type: string
  securitySchemes:
    netlifyAuth:
      flows:
        authorizationCode:
          authorizationUrl: https://app.netlify.com/authorize
          scopes:
            public: default scope
          tokenUrl: https://api.netlify.com/oauth/token
        implicit:
          authorizationUrl: https://app.netlify.com/authorize
          scopes:
            public: default scope
      type: oauth2
    bearerAuth:
      scheme: bearer
      type: http
x-tagGroups:
- name: OAuth
  tags:
  - Access tokens
  - OAuth tickets
- name: Builds
  tags:
  - Builds
- name: User Accounts
  tags:
  - Members
  - Accounts
  - Payment Methods
  - Users
- name: Sites
  tags:
  - Sites
  - Analytics
  - Files
  - Metadata
  - Snippets
- name: Site Assets
  tags:
  - Site assets
- name: Webhooks and Notifications
  tags:
  - Build Hooks
  - Dev Server Hooks
  - Hooks
- name: Deploys
  tags:
  - Deploy keys
  - Deploys
- name: Domain Names
  tags:
  - DNS zones
  - SNI certificates
- name: Environment Variables
  tags:
  - Environment variables
- name: Forms
  tags:
  - Forms
  - Form submissions
- name: Functions
  tags:
  - Functions
- name: Organizations
  tags:
  - Organization receipts
  - Organizations
- name: Services
  tags:
  - Service instances
  - Services
- name: Split Tests
  tags:
  - Split tests
- name: SCIM
  tags:
  - WorkOSScim
