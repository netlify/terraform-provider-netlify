/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the AssetCreateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetCreateParams{}

// AssetCreateParams struct for AssetCreateParams
type AssetCreateParams struct {
	AccountId *string `json:"account_id,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	UploadedUrl *string `json:"uploaded_url,omitempty"`
	Size *int64 `json:"size,omitempty"`
	ContentType *string `json:"content_type,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetCreateParams AssetCreateParams

// NewAssetCreateParams instantiates a new AssetCreateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetCreateParams() *AssetCreateParams {
	this := AssetCreateParams{}
	return &this
}

// NewAssetCreateParamsWithDefaults instantiates a new AssetCreateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetCreateParamsWithDefaults() *AssetCreateParams {
	this := AssetCreateParams{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AssetCreateParams) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AssetCreateParams) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AssetCreateParams) SetAccountId(v string) {
	o.AccountId = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AssetCreateParams) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AssetCreateParams) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AssetCreateParams) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetCreateParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetCreateParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetCreateParams) SetName(v string) {
	o.Name = &v
}

// GetUploadedUrl returns the UploadedUrl field value if set, zero value otherwise.
func (o *AssetCreateParams) GetUploadedUrl() string {
	if o == nil || IsNil(o.UploadedUrl) {
		var ret string
		return ret
	}
	return *o.UploadedUrl
}

// GetUploadedUrlOk returns a tuple with the UploadedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetUploadedUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UploadedUrl) {
		return nil, false
	}
	return o.UploadedUrl, true
}

// HasUploadedUrl returns a boolean if a field has been set.
func (o *AssetCreateParams) HasUploadedUrl() bool {
	if o != nil && !IsNil(o.UploadedUrl) {
		return true
	}

	return false
}

// SetUploadedUrl gets a reference to the given string and assigns it to the UploadedUrl field.
func (o *AssetCreateParams) SetUploadedUrl(v string) {
	o.UploadedUrl = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *AssetCreateParams) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *AssetCreateParams) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *AssetCreateParams) SetSize(v int64) {
	o.Size = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *AssetCreateParams) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *AssetCreateParams) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *AssetCreateParams) SetContentType(v string) {
	o.ContentType = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AssetCreateParams) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateParams) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AssetCreateParams) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AssetCreateParams) SetVisibility(v string) {
	o.Visibility = &v
}

func (o AssetCreateParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetCreateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UploadedUrl) {
		toSerialize["uploaded_url"] = o.UploadedUrl
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetCreateParams) UnmarshalJSON(data []byte) (err error) {
	varAssetCreateParams := _AssetCreateParams{}

	err = json.Unmarshal(data, &varAssetCreateParams)

	if err != nil {
		return err
	}

	*o = AssetCreateParams(varAssetCreateParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "key")
		delete(additionalProperties, "name")
		delete(additionalProperties, "uploaded_url")
		delete(additionalProperties, "size")
		delete(additionalProperties, "content_type")
		delete(additionalProperties, "visibility")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetCreateParams struct {
	value *AssetCreateParams
	isSet bool
}

func (v NullableAssetCreateParams) Get() *AssetCreateParams {
	return v.value
}

func (v *NullableAssetCreateParams) Set(val *AssetCreateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetCreateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetCreateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetCreateParams(val *AssetCreateParams) *NullableAssetCreateParams {
	return &NullableAssetCreateParams{value: val, isSet: true}
}

func (v NullableAssetCreateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetCreateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


