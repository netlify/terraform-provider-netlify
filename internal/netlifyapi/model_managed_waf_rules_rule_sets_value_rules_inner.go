/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the ManagedWafRulesRuleSetsValueRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedWafRulesRuleSetsValueRulesInner{}

// ManagedWafRulesRuleSetsValueRulesInner struct for ManagedWafRulesRuleSetsValueRulesInner
type ManagedWafRulesRuleSetsValueRulesInner struct {
	Id *string `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
	Phase *string `json:"phase,omitempty"`
	Category *string `json:"category,omitempty"`
	Severity *string `json:"severity,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagedWafRulesRuleSetsValueRulesInner ManagedWafRulesRuleSetsValueRulesInner

// NewManagedWafRulesRuleSetsValueRulesInner instantiates a new ManagedWafRulesRuleSetsValueRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedWafRulesRuleSetsValueRulesInner() *ManagedWafRulesRuleSetsValueRulesInner {
	this := ManagedWafRulesRuleSetsValueRulesInner{}
	return &this
}

// NewManagedWafRulesRuleSetsValueRulesInnerWithDefaults instantiates a new ManagedWafRulesRuleSetsValueRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedWafRulesRuleSetsValueRulesInnerWithDefaults() *ManagedWafRulesRuleSetsValueRulesInner {
	this := ManagedWafRulesRuleSetsValueRulesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManagedWafRulesRuleSetsValueRulesInner) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ManagedWafRulesRuleSetsValueRulesInner) SetDescription(v string) {
	o.Description = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *ManagedWafRulesRuleSetsValueRulesInner) SetPhase(v string) {
	o.Phase = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ManagedWafRulesRuleSetsValueRulesInner) SetCategory(v string) {
	o.Category = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ManagedWafRulesRuleSetsValueRulesInner) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ManagedWafRulesRuleSetsValueRulesInner) SetSeverity(v string) {
	o.Severity = &v
}

func (o ManagedWafRulesRuleSetsValueRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedWafRulesRuleSetsValueRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedWafRulesRuleSetsValueRulesInner) UnmarshalJSON(data []byte) (err error) {
	varManagedWafRulesRuleSetsValueRulesInner := _ManagedWafRulesRuleSetsValueRulesInner{}

	err = json.Unmarshal(data, &varManagedWafRulesRuleSetsValueRulesInner)

	if err != nil {
		return err
	}

	*o = ManagedWafRulesRuleSetsValueRulesInner(varManagedWafRulesRuleSetsValueRulesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "phase")
		delete(additionalProperties, "category")
		delete(additionalProperties, "severity")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedWafRulesRuleSetsValueRulesInner struct {
	value *ManagedWafRulesRuleSetsValueRulesInner
	isSet bool
}

func (v NullableManagedWafRulesRuleSetsValueRulesInner) Get() *ManagedWafRulesRuleSetsValueRulesInner {
	return v.value
}

func (v *NullableManagedWafRulesRuleSetsValueRulesInner) Set(val *ManagedWafRulesRuleSetsValueRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedWafRulesRuleSetsValueRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedWafRulesRuleSetsValueRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedWafRulesRuleSetsValueRulesInner(val *ManagedWafRulesRuleSetsValueRulesInner) *NullableManagedWafRulesRuleSetsValueRulesInner {
	return &NullableManagedWafRulesRuleSetsValueRulesInner{value: val, isSet: true}
}

func (v NullableManagedWafRulesRuleSetsValueRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedWafRulesRuleSetsValueRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


