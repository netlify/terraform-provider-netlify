/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AccountFirewallConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountFirewallConfig{}

// AccountFirewallConfig AccountFirewallConfig model definition
type AccountFirewallConfig struct {
	Id string `json:"id"`
	UnpublishedRules FirewallRuleSet `json:"unpublished_rules"`
	PublishedRules FirewallRuleSet `json:"published_rules"`
	SiteOverrides []map[string]interface{} `json:"site_overrides"`
	// When the deployed branch was created
	CreatedAt time.Time `json:"created_at"`
	// When the deployed branch was updated
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _AccountFirewallConfig AccountFirewallConfig

// NewAccountFirewallConfig instantiates a new AccountFirewallConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountFirewallConfig(id string, unpublishedRules FirewallRuleSet, publishedRules FirewallRuleSet, siteOverrides []map[string]interface{}, createdAt time.Time, updatedAt time.Time) *AccountFirewallConfig {
	this := AccountFirewallConfig{}
	this.Id = id
	this.UnpublishedRules = unpublishedRules
	this.PublishedRules = publishedRules
	this.SiteOverrides = siteOverrides
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewAccountFirewallConfigWithDefaults instantiates a new AccountFirewallConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountFirewallConfigWithDefaults() *AccountFirewallConfig {
	this := AccountFirewallConfig{}
	return &this
}

// GetId returns the Id field value
func (o *AccountFirewallConfig) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountFirewallConfig) SetId(v string) {
	o.Id = v
}

// GetUnpublishedRules returns the UnpublishedRules field value
func (o *AccountFirewallConfig) GetUnpublishedRules() FirewallRuleSet {
	if o == nil {
		var ret FirewallRuleSet
		return ret
	}

	return o.UnpublishedRules
}

// GetUnpublishedRulesOk returns a tuple with the UnpublishedRules field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetUnpublishedRulesOk() (*FirewallRuleSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnpublishedRules, true
}

// SetUnpublishedRules sets field value
func (o *AccountFirewallConfig) SetUnpublishedRules(v FirewallRuleSet) {
	o.UnpublishedRules = v
}

// GetPublishedRules returns the PublishedRules field value
func (o *AccountFirewallConfig) GetPublishedRules() FirewallRuleSet {
	if o == nil {
		var ret FirewallRuleSet
		return ret
	}

	return o.PublishedRules
}

// GetPublishedRulesOk returns a tuple with the PublishedRules field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetPublishedRulesOk() (*FirewallRuleSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedRules, true
}

// SetPublishedRules sets field value
func (o *AccountFirewallConfig) SetPublishedRules(v FirewallRuleSet) {
	o.PublishedRules = v
}

// GetSiteOverrides returns the SiteOverrides field value
func (o *AccountFirewallConfig) GetSiteOverrides() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.SiteOverrides
}

// GetSiteOverridesOk returns a tuple with the SiteOverrides field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetSiteOverridesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteOverrides, true
}

// SetSiteOverrides sets field value
func (o *AccountFirewallConfig) SetSiteOverrides(v []map[string]interface{}) {
	o.SiteOverrides = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountFirewallConfig) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountFirewallConfig) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AccountFirewallConfig) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountFirewallConfig) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AccountFirewallConfig) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o AccountFirewallConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountFirewallConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["unpublished_rules"] = o.UnpublishedRules
	toSerialize["published_rules"] = o.PublishedRules
	toSerialize["site_overrides"] = o.SiteOverrides
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountFirewallConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"unpublished_rules",
		"published_rules",
		"site_overrides",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountFirewallConfig := _AccountFirewallConfig{}

	err = json.Unmarshal(data, &varAccountFirewallConfig)

	if err != nil {
		return err
	}

	*o = AccountFirewallConfig(varAccountFirewallConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "unpublished_rules")
		delete(additionalProperties, "published_rules")
		delete(additionalProperties, "site_overrides")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountFirewallConfig struct {
	value *AccountFirewallConfig
	isSet bool
}

func (v NullableAccountFirewallConfig) Get() *AccountFirewallConfig {
	return v.value
}

func (v *NullableAccountFirewallConfig) Set(val *AccountFirewallConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountFirewallConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountFirewallConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountFirewallConfig(val *AccountFirewallConfig) *NullableAccountFirewallConfig {
	return &NullableAccountFirewallConfig{value: val, isSet: true}
}

func (v NullableAccountFirewallConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountFirewallConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


