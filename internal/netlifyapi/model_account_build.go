/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AccountBuild type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountBuild{}

// AccountBuild AccountBuild model definition
type AccountBuild struct {
	// the identifier for the build
	Id string `json:"id"`
	Sha string `json:"sha"`
	CreatedAt time.Time `json:"created_at"`
	StartedAt time.Time `json:"started_at"`
	State string `json:"state"`
	Error string `json:"error"`
	ErrorMessage string `json:"error_message"`
	Done bool `json:"done"`
	Priority AccountBuildPriority `json:"priority"`
	SiteId string `json:"site_id"`
	Subdomain string `json:"subdomain"`
	CustomDomain string `json:"custom_domain"`
	DeployId string `json:"deploy_id"`
	Context string `json:"context"`
	Branch string `json:"branch"`
	CommitRef string `json:"commit_ref"`
	CommitUrl string `json:"commit_url"`
	Committer string `json:"committer"`
	Title string `json:"title"`
	ReviewId string `json:"review_id"`
	ReviewUrl string `json:"review_url"`
	DeployTime time.Time `json:"deploy_time"`
	DeployState string `json:"deploy_state"`
	DeployPendingReviewReason string `json:"deploy_pending_review_reason"`
	DeploySslUrl string `json:"deploy_ssl_url"`
	AdditionalProperties map[string]interface{}
}

type _AccountBuild AccountBuild

// NewAccountBuild instantiates a new AccountBuild object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBuild(id string, sha string, createdAt time.Time, startedAt time.Time, state string, error_ string, errorMessage string, done bool, priority AccountBuildPriority, siteId string, subdomain string, customDomain string, deployId string, context string, branch string, commitRef string, commitUrl string, committer string, title string, reviewId string, reviewUrl string, deployTime time.Time, deployState string, deployPendingReviewReason string, deploySslUrl string) *AccountBuild {
	this := AccountBuild{}
	this.Id = id
	this.Sha = sha
	this.CreatedAt = createdAt
	this.StartedAt = startedAt
	this.State = state
	this.Error = error_
	this.ErrorMessage = errorMessage
	this.Done = done
	this.Priority = priority
	this.SiteId = siteId
	this.Subdomain = subdomain
	this.CustomDomain = customDomain
	this.DeployId = deployId
	this.Context = context
	this.Branch = branch
	this.CommitRef = commitRef
	this.CommitUrl = commitUrl
	this.Committer = committer
	this.Title = title
	this.ReviewId = reviewId
	this.ReviewUrl = reviewUrl
	this.DeployTime = deployTime
	this.DeployState = deployState
	this.DeployPendingReviewReason = deployPendingReviewReason
	this.DeploySslUrl = deploySslUrl
	return &this
}

// NewAccountBuildWithDefaults instantiates a new AccountBuild object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBuildWithDefaults() *AccountBuild {
	this := AccountBuild{}
	return &this
}

// GetId returns the Id field value
func (o *AccountBuild) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountBuild) SetId(v string) {
	o.Id = v
}

// GetSha returns the Sha field value
func (o *AccountBuild) GetSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha
}

// GetShaOk returns a tuple with the Sha field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha, true
}

// SetSha sets field value
func (o *AccountBuild) SetSha(v string) {
	o.Sha = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountBuild) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountBuild) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetStartedAt returns the StartedAt field value
func (o *AccountBuild) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *AccountBuild) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetState returns the State field value
func (o *AccountBuild) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *AccountBuild) SetState(v string) {
	o.State = v
}

// GetError returns the Error field value
func (o *AccountBuild) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *AccountBuild) SetError(v string) {
	o.Error = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *AccountBuild) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *AccountBuild) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

// GetDone returns the Done field value
func (o *AccountBuild) GetDone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Done
}

// GetDoneOk returns a tuple with the Done field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Done, true
}

// SetDone sets field value
func (o *AccountBuild) SetDone(v bool) {
	o.Done = v
}

// GetPriority returns the Priority field value
func (o *AccountBuild) GetPriority() AccountBuildPriority {
	if o == nil {
		var ret AccountBuildPriority
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetPriorityOk() (*AccountBuildPriority, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *AccountBuild) SetPriority(v AccountBuildPriority) {
	o.Priority = v
}

// GetSiteId returns the SiteId field value
func (o *AccountBuild) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *AccountBuild) SetSiteId(v string) {
	o.SiteId = v
}

// GetSubdomain returns the Subdomain field value
func (o *AccountBuild) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetSubdomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *AccountBuild) SetSubdomain(v string) {
	o.Subdomain = v
}

// GetCustomDomain returns the CustomDomain field value
func (o *AccountBuild) GetCustomDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetCustomDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomDomain, true
}

// SetCustomDomain sets field value
func (o *AccountBuild) SetCustomDomain(v string) {
	o.CustomDomain = v
}

// GetDeployId returns the DeployId field value
func (o *AccountBuild) GetDeployId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployId
}

// GetDeployIdOk returns a tuple with the DeployId field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDeployIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployId, true
}

// SetDeployId sets field value
func (o *AccountBuild) SetDeployId(v string) {
	o.DeployId = v
}

// GetContext returns the Context field value
func (o *AccountBuild) GetContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *AccountBuild) SetContext(v string) {
	o.Context = v
}

// GetBranch returns the Branch field value
func (o *AccountBuild) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *AccountBuild) SetBranch(v string) {
	o.Branch = v
}

// GetCommitRef returns the CommitRef field value
func (o *AccountBuild) GetCommitRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitRef
}

// GetCommitRefOk returns a tuple with the CommitRef field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetCommitRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitRef, true
}

// SetCommitRef sets field value
func (o *AccountBuild) SetCommitRef(v string) {
	o.CommitRef = v
}

// GetCommitUrl returns the CommitUrl field value
func (o *AccountBuild) GetCommitUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitUrl
}

// GetCommitUrlOk returns a tuple with the CommitUrl field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetCommitUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitUrl, true
}

// SetCommitUrl sets field value
func (o *AccountBuild) SetCommitUrl(v string) {
	o.CommitUrl = v
}

// GetCommitter returns the Committer field value
func (o *AccountBuild) GetCommitter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Committer
}

// GetCommitterOk returns a tuple with the Committer field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetCommitterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Committer, true
}

// SetCommitter sets field value
func (o *AccountBuild) SetCommitter(v string) {
	o.Committer = v
}

// GetTitle returns the Title field value
func (o *AccountBuild) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AccountBuild) SetTitle(v string) {
	o.Title = v
}

// GetReviewId returns the ReviewId field value
func (o *AccountBuild) GetReviewId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReviewId
}

// GetReviewIdOk returns a tuple with the ReviewId field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetReviewIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReviewId, true
}

// SetReviewId sets field value
func (o *AccountBuild) SetReviewId(v string) {
	o.ReviewId = v
}

// GetReviewUrl returns the ReviewUrl field value
func (o *AccountBuild) GetReviewUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReviewUrl
}

// GetReviewUrlOk returns a tuple with the ReviewUrl field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetReviewUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReviewUrl, true
}

// SetReviewUrl sets field value
func (o *AccountBuild) SetReviewUrl(v string) {
	o.ReviewUrl = v
}

// GetDeployTime returns the DeployTime field value
func (o *AccountBuild) GetDeployTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeployTime
}

// GetDeployTimeOk returns a tuple with the DeployTime field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDeployTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployTime, true
}

// SetDeployTime sets field value
func (o *AccountBuild) SetDeployTime(v time.Time) {
	o.DeployTime = v
}

// GetDeployState returns the DeployState field value
func (o *AccountBuild) GetDeployState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployState
}

// GetDeployStateOk returns a tuple with the DeployState field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDeployStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployState, true
}

// SetDeployState sets field value
func (o *AccountBuild) SetDeployState(v string) {
	o.DeployState = v
}

// GetDeployPendingReviewReason returns the DeployPendingReviewReason field value
func (o *AccountBuild) GetDeployPendingReviewReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployPendingReviewReason
}

// GetDeployPendingReviewReasonOk returns a tuple with the DeployPendingReviewReason field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDeployPendingReviewReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployPendingReviewReason, true
}

// SetDeployPendingReviewReason sets field value
func (o *AccountBuild) SetDeployPendingReviewReason(v string) {
	o.DeployPendingReviewReason = v
}

// GetDeploySslUrl returns the DeploySslUrl field value
func (o *AccountBuild) GetDeploySslUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploySslUrl
}

// GetDeploySslUrlOk returns a tuple with the DeploySslUrl field value
// and a boolean to check if the value has been set.
func (o *AccountBuild) GetDeploySslUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploySslUrl, true
}

// SetDeploySslUrl sets field value
func (o *AccountBuild) SetDeploySslUrl(v string) {
	o.DeploySslUrl = v
}

func (o AccountBuild) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountBuild) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["sha"] = o.Sha
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["started_at"] = o.StartedAt
	toSerialize["state"] = o.State
	toSerialize["error"] = o.Error
	toSerialize["error_message"] = o.ErrorMessage
	toSerialize["done"] = o.Done
	toSerialize["priority"] = o.Priority
	toSerialize["site_id"] = o.SiteId
	toSerialize["subdomain"] = o.Subdomain
	toSerialize["custom_domain"] = o.CustomDomain
	toSerialize["deploy_id"] = o.DeployId
	toSerialize["context"] = o.Context
	toSerialize["branch"] = o.Branch
	toSerialize["commit_ref"] = o.CommitRef
	toSerialize["commit_url"] = o.CommitUrl
	toSerialize["committer"] = o.Committer
	toSerialize["title"] = o.Title
	toSerialize["review_id"] = o.ReviewId
	toSerialize["review_url"] = o.ReviewUrl
	toSerialize["deploy_time"] = o.DeployTime
	toSerialize["deploy_state"] = o.DeployState
	toSerialize["deploy_pending_review_reason"] = o.DeployPendingReviewReason
	toSerialize["deploy_ssl_url"] = o.DeploySslUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountBuild) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"sha",
		"created_at",
		"started_at",
		"state",
		"error",
		"error_message",
		"done",
		"priority",
		"site_id",
		"subdomain",
		"custom_domain",
		"deploy_id",
		"context",
		"branch",
		"commit_ref",
		"commit_url",
		"committer",
		"title",
		"review_id",
		"review_url",
		"deploy_time",
		"deploy_state",
		"deploy_pending_review_reason",
		"deploy_ssl_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountBuild := _AccountBuild{}

	err = json.Unmarshal(data, &varAccountBuild)

	if err != nil {
		return err
	}

	*o = AccountBuild(varAccountBuild)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "sha")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "started_at")
		delete(additionalProperties, "state")
		delete(additionalProperties, "error")
		delete(additionalProperties, "error_message")
		delete(additionalProperties, "done")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "subdomain")
		delete(additionalProperties, "custom_domain")
		delete(additionalProperties, "deploy_id")
		delete(additionalProperties, "context")
		delete(additionalProperties, "branch")
		delete(additionalProperties, "commit_ref")
		delete(additionalProperties, "commit_url")
		delete(additionalProperties, "committer")
		delete(additionalProperties, "title")
		delete(additionalProperties, "review_id")
		delete(additionalProperties, "review_url")
		delete(additionalProperties, "deploy_time")
		delete(additionalProperties, "deploy_state")
		delete(additionalProperties, "deploy_pending_review_reason")
		delete(additionalProperties, "deploy_ssl_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountBuild struct {
	value *AccountBuild
	isSet bool
}

func (v NullableAccountBuild) Get() *AccountBuild {
	return v.value
}

func (v *NullableAccountBuild) Set(val *AccountBuild) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBuild) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBuild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBuild(val *AccountBuild) *NullableAccountBuild {
	return &NullableAccountBuild{value: val, isSet: true}
}

func (v NullableAccountBuild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBuild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


