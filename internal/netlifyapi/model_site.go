/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the Site type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Site{}

// Site Site model definition
type Site struct {
	Id string `json:"id"`
	Plan string `json:"plan"`
	Name string `json:"name"`
	DefaultDomain string `json:"default_domain"`
	CustomDomain string `json:"custom_domain"`
	BranchDeployCustomDomain string `json:"branch_deploy_custom_domain"`
	DeployPreviewCustomDomain string `json:"deploy_preview_custom_domain"`
	DomainAliases []string `json:"domain_aliases"`
	Password string `json:"password"`
	PasswordContext string `json:"password_context"`
	PasswordHash string `json:"password_hash"`
	SsoLogin bool `json:"sso_login"`
	SsoLoginContext string `json:"sso_login_context"`
	NotificationEmail string `json:"notification_email"`
	Url string `json:"url"`
	AdminUrl string `json:"admin_url"`
	DeployUrl string `json:"deploy_url"`
	State string `json:"state"`
	ScreenshotUrl string `json:"screenshot_url"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	SslUrl string `json:"ssl_url"`
	ForceSsl bool `json:"force_ssl"`
	BuildSettings Repo `json:"build_settings"`
	ProcessingSettings SiteProcessingSettings `json:"processing_settings"`
	DeployHook string `json:"deploy_hook"`
	ManagedDns bool `json:"managed_dns"`
	AccountId string `json:"account_id"`
	AccountSlug string `json:"account_slug"`
	AccountName string `json:"account_name"`
	Capabilities map[string]interface{} `json:"capabilities"`
	IdDomain string `json:"id_domain"`
	BuildImage string `json:"build_image"`
	BuildTimelimit float32 `json:"build_timelimit"`
	DeployRetentionInDays float32 `json:"deploy_retention_in_days"`
	Labels []SiteLabel `json:"labels"`
	FunctionsRegion *string `json:"functions_region,omitempty"`
	CdpEnabledContexts []string `json:"cdp_enabled_contexts,omitempty"`
	HudEnabled *bool `json:"hud_enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Site Site

// NewSite instantiates a new Site object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSite(id string, plan string, name string, defaultDomain string, customDomain string, branchDeployCustomDomain string, deployPreviewCustomDomain string, domainAliases []string, password string, passwordContext string, passwordHash string, ssoLogin bool, ssoLoginContext string, notificationEmail string, url string, adminUrl string, deployUrl string, state string, screenshotUrl string, createdAt time.Time, updatedAt time.Time, sslUrl string, forceSsl bool, buildSettings Repo, processingSettings SiteProcessingSettings, deployHook string, managedDns bool, accountId string, accountSlug string, accountName string, capabilities map[string]interface{}, idDomain string, buildImage string, buildTimelimit float32, deployRetentionInDays float32, labels []SiteLabel) *Site {
	this := Site{}
	this.Id = id
	this.Plan = plan
	this.Name = name
	this.DefaultDomain = defaultDomain
	this.CustomDomain = customDomain
	this.BranchDeployCustomDomain = branchDeployCustomDomain
	this.DeployPreviewCustomDomain = deployPreviewCustomDomain
	this.DomainAliases = domainAliases
	this.Password = password
	this.PasswordContext = passwordContext
	this.PasswordHash = passwordHash
	this.SsoLogin = ssoLogin
	this.SsoLoginContext = ssoLoginContext
	this.NotificationEmail = notificationEmail
	this.Url = url
	this.AdminUrl = adminUrl
	this.DeployUrl = deployUrl
	this.State = state
	this.ScreenshotUrl = screenshotUrl
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SslUrl = sslUrl
	this.ForceSsl = forceSsl
	this.BuildSettings = buildSettings
	this.ProcessingSettings = processingSettings
	this.DeployHook = deployHook
	this.ManagedDns = managedDns
	this.AccountId = accountId
	this.AccountSlug = accountSlug
	this.AccountName = accountName
	this.Capabilities = capabilities
	this.IdDomain = idDomain
	this.BuildImage = buildImage
	this.BuildTimelimit = buildTimelimit
	this.DeployRetentionInDays = deployRetentionInDays
	this.Labels = labels
	return &this
}

// NewSiteWithDefaults instantiates a new Site object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteWithDefaults() *Site {
	this := Site{}
	return &this
}

// GetId returns the Id field value
func (o *Site) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Site) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Site) SetId(v string) {
	o.Id = v
}

// GetPlan returns the Plan field value
func (o *Site) GetPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *Site) GetPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *Site) SetPlan(v string) {
	o.Plan = v
}

// GetName returns the Name field value
func (o *Site) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Site) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Site) SetName(v string) {
	o.Name = v
}

// GetDefaultDomain returns the DefaultDomain field value
func (o *Site) GetDefaultDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultDomain
}

// GetDefaultDomainOk returns a tuple with the DefaultDomain field value
// and a boolean to check if the value has been set.
func (o *Site) GetDefaultDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDomain, true
}

// SetDefaultDomain sets field value
func (o *Site) SetDefaultDomain(v string) {
	o.DefaultDomain = v
}

// GetCustomDomain returns the CustomDomain field value
func (o *Site) GetCustomDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value
// and a boolean to check if the value has been set.
func (o *Site) GetCustomDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomDomain, true
}

// SetCustomDomain sets field value
func (o *Site) SetCustomDomain(v string) {
	o.CustomDomain = v
}

// GetBranchDeployCustomDomain returns the BranchDeployCustomDomain field value
func (o *Site) GetBranchDeployCustomDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BranchDeployCustomDomain
}

// GetBranchDeployCustomDomainOk returns a tuple with the BranchDeployCustomDomain field value
// and a boolean to check if the value has been set.
func (o *Site) GetBranchDeployCustomDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BranchDeployCustomDomain, true
}

// SetBranchDeployCustomDomain sets field value
func (o *Site) SetBranchDeployCustomDomain(v string) {
	o.BranchDeployCustomDomain = v
}

// GetDeployPreviewCustomDomain returns the DeployPreviewCustomDomain field value
func (o *Site) GetDeployPreviewCustomDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployPreviewCustomDomain
}

// GetDeployPreviewCustomDomainOk returns a tuple with the DeployPreviewCustomDomain field value
// and a boolean to check if the value has been set.
func (o *Site) GetDeployPreviewCustomDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployPreviewCustomDomain, true
}

// SetDeployPreviewCustomDomain sets field value
func (o *Site) SetDeployPreviewCustomDomain(v string) {
	o.DeployPreviewCustomDomain = v
}

// GetDomainAliases returns the DomainAliases field value
func (o *Site) GetDomainAliases() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DomainAliases
}

// GetDomainAliasesOk returns a tuple with the DomainAliases field value
// and a boolean to check if the value has been set.
func (o *Site) GetDomainAliasesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainAliases, true
}

// SetDomainAliases sets field value
func (o *Site) SetDomainAliases(v []string) {
	o.DomainAliases = v
}

// GetPassword returns the Password field value
func (o *Site) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *Site) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *Site) SetPassword(v string) {
	o.Password = v
}

// GetPasswordContext returns the PasswordContext field value
func (o *Site) GetPasswordContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordContext
}

// GetPasswordContextOk returns a tuple with the PasswordContext field value
// and a boolean to check if the value has been set.
func (o *Site) GetPasswordContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordContext, true
}

// SetPasswordContext sets field value
func (o *Site) SetPasswordContext(v string) {
	o.PasswordContext = v
}

// GetPasswordHash returns the PasswordHash field value
func (o *Site) GetPasswordHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value
// and a boolean to check if the value has been set.
func (o *Site) GetPasswordHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordHash, true
}

// SetPasswordHash sets field value
func (o *Site) SetPasswordHash(v string) {
	o.PasswordHash = v
}

// GetSsoLogin returns the SsoLogin field value
func (o *Site) GetSsoLogin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SsoLogin
}

// GetSsoLoginOk returns a tuple with the SsoLogin field value
// and a boolean to check if the value has been set.
func (o *Site) GetSsoLoginOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoLogin, true
}

// SetSsoLogin sets field value
func (o *Site) SetSsoLogin(v bool) {
	o.SsoLogin = v
}

// GetSsoLoginContext returns the SsoLoginContext field value
func (o *Site) GetSsoLoginContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoLoginContext
}

// GetSsoLoginContextOk returns a tuple with the SsoLoginContext field value
// and a boolean to check if the value has been set.
func (o *Site) GetSsoLoginContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoLoginContext, true
}

// SetSsoLoginContext sets field value
func (o *Site) SetSsoLoginContext(v string) {
	o.SsoLoginContext = v
}

// GetNotificationEmail returns the NotificationEmail field value
func (o *Site) GetNotificationEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationEmail
}

// GetNotificationEmailOk returns a tuple with the NotificationEmail field value
// and a boolean to check if the value has been set.
func (o *Site) GetNotificationEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationEmail, true
}

// SetNotificationEmail sets field value
func (o *Site) SetNotificationEmail(v string) {
	o.NotificationEmail = v
}

// GetUrl returns the Url field value
func (o *Site) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Site) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Site) SetUrl(v string) {
	o.Url = v
}

// GetAdminUrl returns the AdminUrl field value
func (o *Site) GetAdminUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminUrl
}

// GetAdminUrlOk returns a tuple with the AdminUrl field value
// and a boolean to check if the value has been set.
func (o *Site) GetAdminUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminUrl, true
}

// SetAdminUrl sets field value
func (o *Site) SetAdminUrl(v string) {
	o.AdminUrl = v
}

// GetDeployUrl returns the DeployUrl field value
func (o *Site) GetDeployUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployUrl
}

// GetDeployUrlOk returns a tuple with the DeployUrl field value
// and a boolean to check if the value has been set.
func (o *Site) GetDeployUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployUrl, true
}

// SetDeployUrl sets field value
func (o *Site) SetDeployUrl(v string) {
	o.DeployUrl = v
}

// GetState returns the State field value
func (o *Site) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Site) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Site) SetState(v string) {
	o.State = v
}

// GetScreenshotUrl returns the ScreenshotUrl field value
func (o *Site) GetScreenshotUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScreenshotUrl
}

// GetScreenshotUrlOk returns a tuple with the ScreenshotUrl field value
// and a boolean to check if the value has been set.
func (o *Site) GetScreenshotUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScreenshotUrl, true
}

// SetScreenshotUrl sets field value
func (o *Site) SetScreenshotUrl(v string) {
	o.ScreenshotUrl = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Site) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Site) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Site) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Site) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Site) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Site) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSslUrl returns the SslUrl field value
func (o *Site) GetSslUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SslUrl
}

// GetSslUrlOk returns a tuple with the SslUrl field value
// and a boolean to check if the value has been set.
func (o *Site) GetSslUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SslUrl, true
}

// SetSslUrl sets field value
func (o *Site) SetSslUrl(v string) {
	o.SslUrl = v
}

// GetForceSsl returns the ForceSsl field value
func (o *Site) GetForceSsl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ForceSsl
}

// GetForceSslOk returns a tuple with the ForceSsl field value
// and a boolean to check if the value has been set.
func (o *Site) GetForceSslOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForceSsl, true
}

// SetForceSsl sets field value
func (o *Site) SetForceSsl(v bool) {
	o.ForceSsl = v
}

// GetBuildSettings returns the BuildSettings field value
func (o *Site) GetBuildSettings() Repo {
	if o == nil {
		var ret Repo
		return ret
	}

	return o.BuildSettings
}

// GetBuildSettingsOk returns a tuple with the BuildSettings field value
// and a boolean to check if the value has been set.
func (o *Site) GetBuildSettingsOk() (*Repo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildSettings, true
}

// SetBuildSettings sets field value
func (o *Site) SetBuildSettings(v Repo) {
	o.BuildSettings = v
}

// GetProcessingSettings returns the ProcessingSettings field value
func (o *Site) GetProcessingSettings() SiteProcessingSettings {
	if o == nil {
		var ret SiteProcessingSettings
		return ret
	}

	return o.ProcessingSettings
}

// GetProcessingSettingsOk returns a tuple with the ProcessingSettings field value
// and a boolean to check if the value has been set.
func (o *Site) GetProcessingSettingsOk() (*SiteProcessingSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingSettings, true
}

// SetProcessingSettings sets field value
func (o *Site) SetProcessingSettings(v SiteProcessingSettings) {
	o.ProcessingSettings = v
}

// GetDeployHook returns the DeployHook field value
func (o *Site) GetDeployHook() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployHook
}

// GetDeployHookOk returns a tuple with the DeployHook field value
// and a boolean to check if the value has been set.
func (o *Site) GetDeployHookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployHook, true
}

// SetDeployHook sets field value
func (o *Site) SetDeployHook(v string) {
	o.DeployHook = v
}

// GetManagedDns returns the ManagedDns field value
func (o *Site) GetManagedDns() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ManagedDns
}

// GetManagedDnsOk returns a tuple with the ManagedDns field value
// and a boolean to check if the value has been set.
func (o *Site) GetManagedDnsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagedDns, true
}

// SetManagedDns sets field value
func (o *Site) SetManagedDns(v bool) {
	o.ManagedDns = v
}

// GetAccountId returns the AccountId field value
func (o *Site) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Site) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Site) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountSlug returns the AccountSlug field value
func (o *Site) GetAccountSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountSlug
}

// GetAccountSlugOk returns a tuple with the AccountSlug field value
// and a boolean to check if the value has been set.
func (o *Site) GetAccountSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountSlug, true
}

// SetAccountSlug sets field value
func (o *Site) SetAccountSlug(v string) {
	o.AccountSlug = v
}

// GetAccountName returns the AccountName field value
func (o *Site) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *Site) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *Site) SetAccountName(v string) {
	o.AccountName = v
}

// GetCapabilities returns the Capabilities field value
func (o *Site) GetCapabilities() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *Site) GetCapabilitiesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Capabilities, true
}

// SetCapabilities sets field value
func (o *Site) SetCapabilities(v map[string]interface{}) {
	o.Capabilities = v
}

// GetIdDomain returns the IdDomain field value
func (o *Site) GetIdDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdDomain
}

// GetIdDomainOk returns a tuple with the IdDomain field value
// and a boolean to check if the value has been set.
func (o *Site) GetIdDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdDomain, true
}

// SetIdDomain sets field value
func (o *Site) SetIdDomain(v string) {
	o.IdDomain = v
}

// GetBuildImage returns the BuildImage field value
func (o *Site) GetBuildImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildImage
}

// GetBuildImageOk returns a tuple with the BuildImage field value
// and a boolean to check if the value has been set.
func (o *Site) GetBuildImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildImage, true
}

// SetBuildImage sets field value
func (o *Site) SetBuildImage(v string) {
	o.BuildImage = v
}

// GetBuildTimelimit returns the BuildTimelimit field value
func (o *Site) GetBuildTimelimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BuildTimelimit
}

// GetBuildTimelimitOk returns a tuple with the BuildTimelimit field value
// and a boolean to check if the value has been set.
func (o *Site) GetBuildTimelimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildTimelimit, true
}

// SetBuildTimelimit sets field value
func (o *Site) SetBuildTimelimit(v float32) {
	o.BuildTimelimit = v
}

// GetDeployRetentionInDays returns the DeployRetentionInDays field value
func (o *Site) GetDeployRetentionInDays() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DeployRetentionInDays
}

// GetDeployRetentionInDaysOk returns a tuple with the DeployRetentionInDays field value
// and a boolean to check if the value has been set.
func (o *Site) GetDeployRetentionInDaysOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployRetentionInDays, true
}

// SetDeployRetentionInDays sets field value
func (o *Site) SetDeployRetentionInDays(v float32) {
	o.DeployRetentionInDays = v
}

// GetLabels returns the Labels field value
func (o *Site) GetLabels() []SiteLabel {
	if o == nil {
		var ret []SiteLabel
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *Site) GetLabelsOk() ([]SiteLabel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Site) SetLabels(v []SiteLabel) {
	o.Labels = v
}

// GetFunctionsRegion returns the FunctionsRegion field value if set, zero value otherwise.
func (o *Site) GetFunctionsRegion() string {
	if o == nil || IsNil(o.FunctionsRegion) {
		var ret string
		return ret
	}
	return *o.FunctionsRegion
}

// GetFunctionsRegionOk returns a tuple with the FunctionsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetFunctionsRegionOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionsRegion) {
		return nil, false
	}
	return o.FunctionsRegion, true
}

// HasFunctionsRegion returns a boolean if a field has been set.
func (o *Site) HasFunctionsRegion() bool {
	if o != nil && !IsNil(o.FunctionsRegion) {
		return true
	}

	return false
}

// SetFunctionsRegion gets a reference to the given string and assigns it to the FunctionsRegion field.
func (o *Site) SetFunctionsRegion(v string) {
	o.FunctionsRegion = &v
}

// GetCdpEnabledContexts returns the CdpEnabledContexts field value if set, zero value otherwise.
func (o *Site) GetCdpEnabledContexts() []string {
	if o == nil || IsNil(o.CdpEnabledContexts) {
		var ret []string
		return ret
	}
	return o.CdpEnabledContexts
}

// GetCdpEnabledContextsOk returns a tuple with the CdpEnabledContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetCdpEnabledContextsOk() ([]string, bool) {
	if o == nil || IsNil(o.CdpEnabledContexts) {
		return nil, false
	}
	return o.CdpEnabledContexts, true
}

// HasCdpEnabledContexts returns a boolean if a field has been set.
func (o *Site) HasCdpEnabledContexts() bool {
	if o != nil && !IsNil(o.CdpEnabledContexts) {
		return true
	}

	return false
}

// SetCdpEnabledContexts gets a reference to the given []string and assigns it to the CdpEnabledContexts field.
func (o *Site) SetCdpEnabledContexts(v []string) {
	o.CdpEnabledContexts = v
}

// GetHudEnabled returns the HudEnabled field value if set, zero value otherwise.
func (o *Site) GetHudEnabled() bool {
	if o == nil || IsNil(o.HudEnabled) {
		var ret bool
		return ret
	}
	return *o.HudEnabled
}

// GetHudEnabledOk returns a tuple with the HudEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetHudEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HudEnabled) {
		return nil, false
	}
	return o.HudEnabled, true
}

// HasHudEnabled returns a boolean if a field has been set.
func (o *Site) HasHudEnabled() bool {
	if o != nil && !IsNil(o.HudEnabled) {
		return true
	}

	return false
}

// SetHudEnabled gets a reference to the given bool and assigns it to the HudEnabled field.
func (o *Site) SetHudEnabled(v bool) {
	o.HudEnabled = &v
}

func (o Site) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Site) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["plan"] = o.Plan
	toSerialize["name"] = o.Name
	toSerialize["default_domain"] = o.DefaultDomain
	toSerialize["custom_domain"] = o.CustomDomain
	toSerialize["branch_deploy_custom_domain"] = o.BranchDeployCustomDomain
	toSerialize["deploy_preview_custom_domain"] = o.DeployPreviewCustomDomain
	toSerialize["domain_aliases"] = o.DomainAliases
	toSerialize["password"] = o.Password
	toSerialize["password_context"] = o.PasswordContext
	toSerialize["password_hash"] = o.PasswordHash
	toSerialize["sso_login"] = o.SsoLogin
	toSerialize["sso_login_context"] = o.SsoLoginContext
	toSerialize["notification_email"] = o.NotificationEmail
	toSerialize["url"] = o.Url
	toSerialize["admin_url"] = o.AdminUrl
	toSerialize["deploy_url"] = o.DeployUrl
	toSerialize["state"] = o.State
	toSerialize["screenshot_url"] = o.ScreenshotUrl
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["ssl_url"] = o.SslUrl
	toSerialize["force_ssl"] = o.ForceSsl
	toSerialize["build_settings"] = o.BuildSettings
	toSerialize["processing_settings"] = o.ProcessingSettings
	toSerialize["deploy_hook"] = o.DeployHook
	toSerialize["managed_dns"] = o.ManagedDns
	toSerialize["account_id"] = o.AccountId
	toSerialize["account_slug"] = o.AccountSlug
	toSerialize["account_name"] = o.AccountName
	toSerialize["capabilities"] = o.Capabilities
	toSerialize["id_domain"] = o.IdDomain
	toSerialize["build_image"] = o.BuildImage
	toSerialize["build_timelimit"] = o.BuildTimelimit
	toSerialize["deploy_retention_in_days"] = o.DeployRetentionInDays
	toSerialize["labels"] = o.Labels
	if !IsNil(o.FunctionsRegion) {
		toSerialize["functions_region"] = o.FunctionsRegion
	}
	if !IsNil(o.CdpEnabledContexts) {
		toSerialize["cdp_enabled_contexts"] = o.CdpEnabledContexts
	}
	if !IsNil(o.HudEnabled) {
		toSerialize["hud_enabled"] = o.HudEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Site) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"plan",
		"name",
		"default_domain",
		"custom_domain",
		"branch_deploy_custom_domain",
		"deploy_preview_custom_domain",
		"domain_aliases",
		"password",
		"password_context",
		"password_hash",
		"sso_login",
		"sso_login_context",
		"notification_email",
		"url",
		"admin_url",
		"deploy_url",
		"state",
		"screenshot_url",
		"created_at",
		"updated_at",
		"ssl_url",
		"force_ssl",
		"build_settings",
		"processing_settings",
		"deploy_hook",
		"managed_dns",
		"account_id",
		"account_slug",
		"account_name",
		"capabilities",
		"id_domain",
		"build_image",
		"build_timelimit",
		"deploy_retention_in_days",
		"labels",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSite := _Site{}

	err = json.Unmarshal(data, &varSite)

	if err != nil {
		return err
	}

	*o = Site(varSite)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "plan")
		delete(additionalProperties, "name")
		delete(additionalProperties, "default_domain")
		delete(additionalProperties, "custom_domain")
		delete(additionalProperties, "branch_deploy_custom_domain")
		delete(additionalProperties, "deploy_preview_custom_domain")
		delete(additionalProperties, "domain_aliases")
		delete(additionalProperties, "password")
		delete(additionalProperties, "password_context")
		delete(additionalProperties, "password_hash")
		delete(additionalProperties, "sso_login")
		delete(additionalProperties, "sso_login_context")
		delete(additionalProperties, "notification_email")
		delete(additionalProperties, "url")
		delete(additionalProperties, "admin_url")
		delete(additionalProperties, "deploy_url")
		delete(additionalProperties, "state")
		delete(additionalProperties, "screenshot_url")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "ssl_url")
		delete(additionalProperties, "force_ssl")
		delete(additionalProperties, "build_settings")
		delete(additionalProperties, "processing_settings")
		delete(additionalProperties, "deploy_hook")
		delete(additionalProperties, "managed_dns")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_slug")
		delete(additionalProperties, "account_name")
		delete(additionalProperties, "capabilities")
		delete(additionalProperties, "id_domain")
		delete(additionalProperties, "build_image")
		delete(additionalProperties, "build_timelimit")
		delete(additionalProperties, "deploy_retention_in_days")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "functions_region")
		delete(additionalProperties, "cdp_enabled_contexts")
		delete(additionalProperties, "hud_enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSite struct {
	value *Site
	isSet bool
}

func (v NullableSite) Get() *Site {
	return v.value
}

func (v *NullableSite) Set(val *Site) {
	v.value = val
	v.isSet = true
}

func (v NullableSite) IsSet() bool {
	return v.isSet
}

func (v *NullableSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSite(val *Site) *NullableSite {
	return &NullableSite{value: val, isSet: true}
}

func (v NullableSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


