/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the AssetCreateResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetCreateResult{}

// AssetCreateResult struct for AssetCreateResult
type AssetCreateResult struct {
	Form *AssetCreateForm `json:"form,omitempty"`
	Asset *Asset `json:"asset,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetCreateResult AssetCreateResult

// NewAssetCreateResult instantiates a new AssetCreateResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetCreateResult() *AssetCreateResult {
	this := AssetCreateResult{}
	return &this
}

// NewAssetCreateResultWithDefaults instantiates a new AssetCreateResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetCreateResultWithDefaults() *AssetCreateResult {
	this := AssetCreateResult{}
	return &this
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *AssetCreateResult) GetForm() AssetCreateForm {
	if o == nil || IsNil(o.Form) {
		var ret AssetCreateForm
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateResult) GetFormOk() (*AssetCreateForm, bool) {
	if o == nil || IsNil(o.Form) {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *AssetCreateResult) HasForm() bool {
	if o != nil && !IsNil(o.Form) {
		return true
	}

	return false
}

// SetForm gets a reference to the given AssetCreateForm and assigns it to the Form field.
func (o *AssetCreateResult) SetForm(v AssetCreateForm) {
	o.Form = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AssetCreateResult) GetAsset() Asset {
	if o == nil || IsNil(o.Asset) {
		var ret Asset
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateResult) GetAssetOk() (*Asset, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AssetCreateResult) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given Asset and assigns it to the Asset field.
func (o *AssetCreateResult) SetAsset(v Asset) {
	o.Asset = &v
}

func (o AssetCreateResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetCreateResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Form) {
		toSerialize["form"] = o.Form
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetCreateResult) UnmarshalJSON(data []byte) (err error) {
	varAssetCreateResult := _AssetCreateResult{}

	err = json.Unmarshal(data, &varAssetCreateResult)

	if err != nil {
		return err
	}

	*o = AssetCreateResult(varAssetCreateResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "form")
		delete(additionalProperties, "asset")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetCreateResult struct {
	value *AssetCreateResult
	isSet bool
}

func (v NullableAssetCreateResult) Get() *AssetCreateResult {
	return v.value
}

func (v *NullableAssetCreateResult) Set(val *AssetCreateResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetCreateResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetCreateResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetCreateResult(val *AssetCreateResult) *NullableAssetCreateResult {
	return &NullableAssetCreateResult{value: val, isSet: true}
}

func (v NullableAssetCreateResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetCreateResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


