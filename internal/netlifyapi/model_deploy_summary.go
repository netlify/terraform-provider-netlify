/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the DeploySummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploySummary{}

// DeploySummary Information about the summary of the deploy
type DeploySummary struct {
	Status *string `json:"status,omitempty"`
	Messages []DeploySummaryMessagesInner `json:"messages,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeploySummary DeploySummary

// NewDeploySummary instantiates a new DeploySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploySummary() *DeploySummary {
	this := DeploySummary{}
	return &this
}

// NewDeploySummaryWithDefaults instantiates a new DeploySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploySummaryWithDefaults() *DeploySummary {
	this := DeploySummary{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeploySummary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploySummary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeploySummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeploySummary) SetStatus(v string) {
	o.Status = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *DeploySummary) GetMessages() []DeploySummaryMessagesInner {
	if o == nil || IsNil(o.Messages) {
		var ret []DeploySummaryMessagesInner
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploySummary) GetMessagesOk() ([]DeploySummaryMessagesInner, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *DeploySummary) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []DeploySummaryMessagesInner and assigns it to the Messages field.
func (o *DeploySummary) SetMessages(v []DeploySummaryMessagesInner) {
	o.Messages = v
}

func (o DeploySummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploySummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploySummary) UnmarshalJSON(data []byte) (err error) {
	varDeploySummary := _DeploySummary{}

	err = json.Unmarshal(data, &varDeploySummary)

	if err != nil {
		return err
	}

	*o = DeploySummary(varDeploySummary)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "messages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploySummary struct {
	value *DeploySummary
	isSet bool
}

func (v NullableDeploySummary) Get() *DeploySummary {
	return v.value
}

func (v *NullableDeploySummary) Set(val *DeploySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploySummary(val *DeploySummary) *NullableDeploySummary {
	return &NullableDeploySummary{value: val, isSet: true}
}

func (v NullableDeploySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


