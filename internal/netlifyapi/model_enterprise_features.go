/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the EnterpriseFeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterpriseFeatures{}

// EnterpriseFeatures EnterpriseFeatures model definition.
type EnterpriseFeatures struct {
	HighPerformanceBuilds *HighPerformanceFeatureAttributes `json:"high_performance_builds,omitempty"`
	HighPerformanceEdge *HighPerformanceFeatureAttributes `json:"high_performance_edge,omitempty"`
	SupportLevel *EnterpriseFeatureAttributes `json:"support_level,omitempty"`
	ConcurrentBuilds *EnterpriseFeatureAttributes `json:"concurrent_builds,omitempty"`
	BuildMinutes *EnterpriseFeatureAttributes `json:"build_minutes,omitempty"`
	AdditionalBuildMinutes *EnterpriseFeatureAttributes `json:"additional_build_minutes,omitempty"`
	EdgeFunctions *EnterpriseFeatureAttributes `json:"edge_functions,omitempty"`
	AdditionalEdgeFunctions *EnterpriseFeatureAttributes `json:"additional_edge_functions,omitempty"`
	Bandwidth *EnterpriseFeatureAttributes `json:"bandwidth,omitempty"`
	AdditionalBandwidth *EnterpriseFeatureAttributes `json:"additional_bandwidth,omitempty"`
	Seats *EnterpriseFeatureAttributes `json:"seats,omitempty"`
	AdditionalSeats *EnterpriseFeatureAttributes `json:"additional_seats,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnterpriseFeatures EnterpriseFeatures

// NewEnterpriseFeatures instantiates a new EnterpriseFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseFeatures() *EnterpriseFeatures {
	this := EnterpriseFeatures{}
	return &this
}

// NewEnterpriseFeaturesWithDefaults instantiates a new EnterpriseFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseFeaturesWithDefaults() *EnterpriseFeatures {
	this := EnterpriseFeatures{}
	return &this
}

// GetHighPerformanceBuilds returns the HighPerformanceBuilds field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetHighPerformanceBuilds() HighPerformanceFeatureAttributes {
	if o == nil || IsNil(o.HighPerformanceBuilds) {
		var ret HighPerformanceFeatureAttributes
		return ret
	}
	return *o.HighPerformanceBuilds
}

// GetHighPerformanceBuildsOk returns a tuple with the HighPerformanceBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetHighPerformanceBuildsOk() (*HighPerformanceFeatureAttributes, bool) {
	if o == nil || IsNil(o.HighPerformanceBuilds) {
		return nil, false
	}
	return o.HighPerformanceBuilds, true
}

// HasHighPerformanceBuilds returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasHighPerformanceBuilds() bool {
	if o != nil && !IsNil(o.HighPerformanceBuilds) {
		return true
	}

	return false
}

// SetHighPerformanceBuilds gets a reference to the given HighPerformanceFeatureAttributes and assigns it to the HighPerformanceBuilds field.
func (o *EnterpriseFeatures) SetHighPerformanceBuilds(v HighPerformanceFeatureAttributes) {
	o.HighPerformanceBuilds = &v
}

// GetHighPerformanceEdge returns the HighPerformanceEdge field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetHighPerformanceEdge() HighPerformanceFeatureAttributes {
	if o == nil || IsNil(o.HighPerformanceEdge) {
		var ret HighPerformanceFeatureAttributes
		return ret
	}
	return *o.HighPerformanceEdge
}

// GetHighPerformanceEdgeOk returns a tuple with the HighPerformanceEdge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetHighPerformanceEdgeOk() (*HighPerformanceFeatureAttributes, bool) {
	if o == nil || IsNil(o.HighPerformanceEdge) {
		return nil, false
	}
	return o.HighPerformanceEdge, true
}

// HasHighPerformanceEdge returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasHighPerformanceEdge() bool {
	if o != nil && !IsNil(o.HighPerformanceEdge) {
		return true
	}

	return false
}

// SetHighPerformanceEdge gets a reference to the given HighPerformanceFeatureAttributes and assigns it to the HighPerformanceEdge field.
func (o *EnterpriseFeatures) SetHighPerformanceEdge(v HighPerformanceFeatureAttributes) {
	o.HighPerformanceEdge = &v
}

// GetSupportLevel returns the SupportLevel field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetSupportLevel() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.SupportLevel) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.SupportLevel
}

// GetSupportLevelOk returns a tuple with the SupportLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetSupportLevelOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.SupportLevel) {
		return nil, false
	}
	return o.SupportLevel, true
}

// HasSupportLevel returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasSupportLevel() bool {
	if o != nil && !IsNil(o.SupportLevel) {
		return true
	}

	return false
}

// SetSupportLevel gets a reference to the given EnterpriseFeatureAttributes and assigns it to the SupportLevel field.
func (o *EnterpriseFeatures) SetSupportLevel(v EnterpriseFeatureAttributes) {
	o.SupportLevel = &v
}

// GetConcurrentBuilds returns the ConcurrentBuilds field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetConcurrentBuilds() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.ConcurrentBuilds) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.ConcurrentBuilds
}

// GetConcurrentBuildsOk returns a tuple with the ConcurrentBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetConcurrentBuildsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.ConcurrentBuilds) {
		return nil, false
	}
	return o.ConcurrentBuilds, true
}

// HasConcurrentBuilds returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasConcurrentBuilds() bool {
	if o != nil && !IsNil(o.ConcurrentBuilds) {
		return true
	}

	return false
}

// SetConcurrentBuilds gets a reference to the given EnterpriseFeatureAttributes and assigns it to the ConcurrentBuilds field.
func (o *EnterpriseFeatures) SetConcurrentBuilds(v EnterpriseFeatureAttributes) {
	o.ConcurrentBuilds = &v
}

// GetBuildMinutes returns the BuildMinutes field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetBuildMinutes() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.BuildMinutes) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.BuildMinutes
}

// GetBuildMinutesOk returns a tuple with the BuildMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetBuildMinutesOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.BuildMinutes) {
		return nil, false
	}
	return o.BuildMinutes, true
}

// HasBuildMinutes returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasBuildMinutes() bool {
	if o != nil && !IsNil(o.BuildMinutes) {
		return true
	}

	return false
}

// SetBuildMinutes gets a reference to the given EnterpriseFeatureAttributes and assigns it to the BuildMinutes field.
func (o *EnterpriseFeatures) SetBuildMinutes(v EnterpriseFeatureAttributes) {
	o.BuildMinutes = &v
}

// GetAdditionalBuildMinutes returns the AdditionalBuildMinutes field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetAdditionalBuildMinutes() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.AdditionalBuildMinutes) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.AdditionalBuildMinutes
}

// GetAdditionalBuildMinutesOk returns a tuple with the AdditionalBuildMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetAdditionalBuildMinutesOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.AdditionalBuildMinutes) {
		return nil, false
	}
	return o.AdditionalBuildMinutes, true
}

// HasAdditionalBuildMinutes returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasAdditionalBuildMinutes() bool {
	if o != nil && !IsNil(o.AdditionalBuildMinutes) {
		return true
	}

	return false
}

// SetAdditionalBuildMinutes gets a reference to the given EnterpriseFeatureAttributes and assigns it to the AdditionalBuildMinutes field.
func (o *EnterpriseFeatures) SetAdditionalBuildMinutes(v EnterpriseFeatureAttributes) {
	o.AdditionalBuildMinutes = &v
}

// GetEdgeFunctions returns the EdgeFunctions field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetEdgeFunctions() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.EdgeFunctions) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.EdgeFunctions
}

// GetEdgeFunctionsOk returns a tuple with the EdgeFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetEdgeFunctionsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.EdgeFunctions) {
		return nil, false
	}
	return o.EdgeFunctions, true
}

// HasEdgeFunctions returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasEdgeFunctions() bool {
	if o != nil && !IsNil(o.EdgeFunctions) {
		return true
	}

	return false
}

// SetEdgeFunctions gets a reference to the given EnterpriseFeatureAttributes and assigns it to the EdgeFunctions field.
func (o *EnterpriseFeatures) SetEdgeFunctions(v EnterpriseFeatureAttributes) {
	o.EdgeFunctions = &v
}

// GetAdditionalEdgeFunctions returns the AdditionalEdgeFunctions field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetAdditionalEdgeFunctions() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.AdditionalEdgeFunctions) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.AdditionalEdgeFunctions
}

// GetAdditionalEdgeFunctionsOk returns a tuple with the AdditionalEdgeFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetAdditionalEdgeFunctionsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.AdditionalEdgeFunctions) {
		return nil, false
	}
	return o.AdditionalEdgeFunctions, true
}

// HasAdditionalEdgeFunctions returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasAdditionalEdgeFunctions() bool {
	if o != nil && !IsNil(o.AdditionalEdgeFunctions) {
		return true
	}

	return false
}

// SetAdditionalEdgeFunctions gets a reference to the given EnterpriseFeatureAttributes and assigns it to the AdditionalEdgeFunctions field.
func (o *EnterpriseFeatures) SetAdditionalEdgeFunctions(v EnterpriseFeatureAttributes) {
	o.AdditionalEdgeFunctions = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetBandwidth() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.Bandwidth) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetBandwidthOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given EnterpriseFeatureAttributes and assigns it to the Bandwidth field.
func (o *EnterpriseFeatures) SetBandwidth(v EnterpriseFeatureAttributes) {
	o.Bandwidth = &v
}

// GetAdditionalBandwidth returns the AdditionalBandwidth field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetAdditionalBandwidth() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.AdditionalBandwidth
}

// GetAdditionalBandwidthOk returns a tuple with the AdditionalBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetAdditionalBandwidthOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		return nil, false
	}
	return o.AdditionalBandwidth, true
}

// HasAdditionalBandwidth returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasAdditionalBandwidth() bool {
	if o != nil && !IsNil(o.AdditionalBandwidth) {
		return true
	}

	return false
}

// SetAdditionalBandwidth gets a reference to the given EnterpriseFeatureAttributes and assigns it to the AdditionalBandwidth field.
func (o *EnterpriseFeatures) SetAdditionalBandwidth(v EnterpriseFeatureAttributes) {
	o.AdditionalBandwidth = &v
}

// GetSeats returns the Seats field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetSeats() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.Seats) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.Seats
}

// GetSeatsOk returns a tuple with the Seats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetSeatsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.Seats) {
		return nil, false
	}
	return o.Seats, true
}

// HasSeats returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasSeats() bool {
	if o != nil && !IsNil(o.Seats) {
		return true
	}

	return false
}

// SetSeats gets a reference to the given EnterpriseFeatureAttributes and assigns it to the Seats field.
func (o *EnterpriseFeatures) SetSeats(v EnterpriseFeatureAttributes) {
	o.Seats = &v
}

// GetAdditionalSeats returns the AdditionalSeats field value if set, zero value otherwise.
func (o *EnterpriseFeatures) GetAdditionalSeats() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.AdditionalSeats) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.AdditionalSeats
}

// GetAdditionalSeatsOk returns a tuple with the AdditionalSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeatures) GetAdditionalSeatsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.AdditionalSeats) {
		return nil, false
	}
	return o.AdditionalSeats, true
}

// HasAdditionalSeats returns a boolean if a field has been set.
func (o *EnterpriseFeatures) HasAdditionalSeats() bool {
	if o != nil && !IsNil(o.AdditionalSeats) {
		return true
	}

	return false
}

// SetAdditionalSeats gets a reference to the given EnterpriseFeatureAttributes and assigns it to the AdditionalSeats field.
func (o *EnterpriseFeatures) SetAdditionalSeats(v EnterpriseFeatureAttributes) {
	o.AdditionalSeats = &v
}

func (o EnterpriseFeatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterpriseFeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HighPerformanceBuilds) {
		toSerialize["high_performance_builds"] = o.HighPerformanceBuilds
	}
	if !IsNil(o.HighPerformanceEdge) {
		toSerialize["high_performance_edge"] = o.HighPerformanceEdge
	}
	if !IsNil(o.SupportLevel) {
		toSerialize["support_level"] = o.SupportLevel
	}
	if !IsNil(o.ConcurrentBuilds) {
		toSerialize["concurrent_builds"] = o.ConcurrentBuilds
	}
	if !IsNil(o.BuildMinutes) {
		toSerialize["build_minutes"] = o.BuildMinutes
	}
	if !IsNil(o.AdditionalBuildMinutes) {
		toSerialize["additional_build_minutes"] = o.AdditionalBuildMinutes
	}
	if !IsNil(o.EdgeFunctions) {
		toSerialize["edge_functions"] = o.EdgeFunctions
	}
	if !IsNil(o.AdditionalEdgeFunctions) {
		toSerialize["additional_edge_functions"] = o.AdditionalEdgeFunctions
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.AdditionalBandwidth) {
		toSerialize["additional_bandwidth"] = o.AdditionalBandwidth
	}
	if !IsNil(o.Seats) {
		toSerialize["seats"] = o.Seats
	}
	if !IsNil(o.AdditionalSeats) {
		toSerialize["additional_seats"] = o.AdditionalSeats
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnterpriseFeatures) UnmarshalJSON(data []byte) (err error) {
	varEnterpriseFeatures := _EnterpriseFeatures{}

	err = json.Unmarshal(data, &varEnterpriseFeatures)

	if err != nil {
		return err
	}

	*o = EnterpriseFeatures(varEnterpriseFeatures)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "high_performance_builds")
		delete(additionalProperties, "high_performance_edge")
		delete(additionalProperties, "support_level")
		delete(additionalProperties, "concurrent_builds")
		delete(additionalProperties, "build_minutes")
		delete(additionalProperties, "additional_build_minutes")
		delete(additionalProperties, "edge_functions")
		delete(additionalProperties, "additional_edge_functions")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "additional_bandwidth")
		delete(additionalProperties, "seats")
		delete(additionalProperties, "additional_seats")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnterpriseFeatures struct {
	value *EnterpriseFeatures
	isSet bool
}

func (v NullableEnterpriseFeatures) Get() *EnterpriseFeatures {
	return v.value
}

func (v *NullableEnterpriseFeatures) Set(val *EnterpriseFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseFeatures(val *EnterpriseFeatures) *NullableEnterpriseFeatures {
	return &NullableEnterpriseFeatures{value: val, isSet: true}
}

func (v NullableEnterpriseFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


