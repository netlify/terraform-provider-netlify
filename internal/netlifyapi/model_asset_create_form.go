/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the AssetCreateForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetCreateForm{}

// AssetCreateForm struct for AssetCreateForm
type AssetCreateForm struct {
	Url *string `json:"url,omitempty"`
	Fields *AssetCreateFormFields `json:"fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetCreateForm AssetCreateForm

// NewAssetCreateForm instantiates a new AssetCreateForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetCreateForm() *AssetCreateForm {
	this := AssetCreateForm{}
	return &this
}

// NewAssetCreateFormWithDefaults instantiates a new AssetCreateForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetCreateFormWithDefaults() *AssetCreateForm {
	this := AssetCreateForm{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AssetCreateForm) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateForm) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AssetCreateForm) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AssetCreateForm) SetUrl(v string) {
	o.Url = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *AssetCreateForm) GetFields() AssetCreateFormFields {
	if o == nil || IsNil(o.Fields) {
		var ret AssetCreateFormFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetCreateForm) GetFieldsOk() (*AssetCreateFormFields, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *AssetCreateForm) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given AssetCreateFormFields and assigns it to the Fields field.
func (o *AssetCreateForm) SetFields(v AssetCreateFormFields) {
	o.Fields = &v
}

func (o AssetCreateForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetCreateForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetCreateForm) UnmarshalJSON(data []byte) (err error) {
	varAssetCreateForm := _AssetCreateForm{}

	err = json.Unmarshal(data, &varAssetCreateForm)

	if err != nil {
		return err
	}

	*o = AssetCreateForm(varAssetCreateForm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetCreateForm struct {
	value *AssetCreateForm
	isSet bool
}

func (v NullableAssetCreateForm) Get() *AssetCreateForm {
	return v.value
}

func (v *NullableAssetCreateForm) Set(val *AssetCreateForm) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetCreateForm) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetCreateForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetCreateForm(val *AssetCreateForm) *NullableAssetCreateForm {
	return &NullableAssetCreateForm{value: val, isSet: true}
}

func (v NullableAssetCreateForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetCreateForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


