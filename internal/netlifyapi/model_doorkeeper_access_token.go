/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the DoorkeeperAccessToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DoorkeeperAccessToken{}

// DoorkeeperAccessToken struct for DoorkeeperAccessToken
type DoorkeeperAccessToken struct {
	// The ID for the access token (same as access token)
	Id string `json:"id"`
	// The access token
	AccessToken string `json:"access_token"`
	// The refresh token set during OAuth
	RefreshToken string `json:"refresh_token"`
	// The user ID of this token's owner
	UserId string `json:"user_id"`
	// List of scopes for this token
	Scopes []string `json:"scopes"`
	// When the access token was created
	CreatedAt time.Time `json:"created_at"`
	// When the access token expires
	ExpiresAt time.Time `json:"expires_at"`
	AdditionalProperties map[string]interface{}
}

type _DoorkeeperAccessToken DoorkeeperAccessToken

// NewDoorkeeperAccessToken instantiates a new DoorkeeperAccessToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDoorkeeperAccessToken(id string, accessToken string, refreshToken string, userId string, scopes []string, createdAt time.Time, expiresAt time.Time) *DoorkeeperAccessToken {
	this := DoorkeeperAccessToken{}
	this.Id = id
	this.AccessToken = accessToken
	this.RefreshToken = refreshToken
	this.UserId = userId
	this.Scopes = scopes
	this.CreatedAt = createdAt
	this.ExpiresAt = expiresAt
	return &this
}

// NewDoorkeeperAccessTokenWithDefaults instantiates a new DoorkeeperAccessToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDoorkeeperAccessTokenWithDefaults() *DoorkeeperAccessToken {
	this := DoorkeeperAccessToken{}
	return &this
}

// GetId returns the Id field value
func (o *DoorkeeperAccessToken) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DoorkeeperAccessToken) SetId(v string) {
	o.Id = v
}

// GetAccessToken returns the AccessToken field value
func (o *DoorkeeperAccessToken) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *DoorkeeperAccessToken) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *DoorkeeperAccessToken) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *DoorkeeperAccessToken) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetUserId returns the UserId field value
func (o *DoorkeeperAccessToken) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *DoorkeeperAccessToken) SetUserId(v string) {
	o.UserId = v
}

// GetScopes returns the Scopes field value
func (o *DoorkeeperAccessToken) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *DoorkeeperAccessToken) SetScopes(v []string) {
	o.Scopes = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DoorkeeperAccessToken) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DoorkeeperAccessToken) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *DoorkeeperAccessToken) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *DoorkeeperAccessToken) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *DoorkeeperAccessToken) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

func (o DoorkeeperAccessToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DoorkeeperAccessToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["access_token"] = o.AccessToken
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["user_id"] = o.UserId
	toSerialize["scopes"] = o.Scopes
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["expires_at"] = o.ExpiresAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DoorkeeperAccessToken) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"access_token",
		"refresh_token",
		"user_id",
		"scopes",
		"created_at",
		"expires_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDoorkeeperAccessToken := _DoorkeeperAccessToken{}

	err = json.Unmarshal(data, &varDoorkeeperAccessToken)

	if err != nil {
		return err
	}

	*o = DoorkeeperAccessToken(varDoorkeeperAccessToken)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "access_token")
		delete(additionalProperties, "refresh_token")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "scopes")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "expires_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDoorkeeperAccessToken struct {
	value *DoorkeeperAccessToken
	isSet bool
}

func (v NullableDoorkeeperAccessToken) Get() *DoorkeeperAccessToken {
	return v.value
}

func (v *NullableDoorkeeperAccessToken) Set(val *DoorkeeperAccessToken) {
	v.value = val
	v.isSet = true
}

func (v NullableDoorkeeperAccessToken) IsSet() bool {
	return v.isSet
}

func (v *NullableDoorkeeperAccessToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDoorkeeperAccessToken(val *DoorkeeperAccessToken) *NullableDoorkeeperAccessToken {
	return &NullableDoorkeeperAccessToken{value: val, isSet: true}
}

func (v NullableDoorkeeperAccessToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDoorkeeperAccessToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


