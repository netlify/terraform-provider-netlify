/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the EnterpriseFeaturesParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterpriseFeaturesParam{}

// EnterpriseFeaturesParam EnterpriseFeaturesParam model definition.
type EnterpriseFeaturesParam struct {
	// Whether SAML is enabled for the account
	SamlEnabled *bool `json:"saml_enabled,omitempty"`
	// Whether Netlify Connect is enabled for the account
	ConnectApiEnabled *bool `json:"connect_api_enabled,omitempty"`
	HighPerformanceBuilds *EnterpriseFeatureEnablePrice `json:"high_performance_builds,omitempty"`
	HighPerformanceEdge *EnterpriseFeatureEnablePrice `json:"high_performance_edge,omitempty"`
	SupportLevel *EnterpriseFeatureSupport `json:"support_level,omitempty"`
	ConcurrentBuilds *EnterpriseFeatureAttributes `json:"concurrent_builds,omitempty"`
	AdditionalConcurrentBuilds *EnterpriseFeatureAdditional `json:"additional_concurrent_builds,omitempty"`
	BuildMinutes *EnterpriseFeatureAttributes `json:"build_minutes,omitempty"`
	AdditionalBuildMinutes *EnterpriseFeatureAdditional `json:"additional_build_minutes,omitempty"`
	EdgeFunctions *EnterpriseFeatureAttributes `json:"edge_functions,omitempty"`
	AdditionalEdgeFunctions *EnterpriseFeatureAdditional `json:"additional_edge_functions,omitempty"`
	Bandwidth *EnterpriseFeatureAttributes `json:"bandwidth,omitempty"`
	AdditionalBandwidth *EnterpriseFeatureAdditional `json:"additional_bandwidth,omitempty"`
	Seats *EnterpriseFeatureAttributes `json:"seats,omitempty"`
	AdditionalSeats *EnterpriseFeatureAdditional `json:"additional_seats,omitempty"`
	AdditionalCommitters *EnterpriseFeatureAdditional `json:"additional_committers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnterpriseFeaturesParam EnterpriseFeaturesParam

// NewEnterpriseFeaturesParam instantiates a new EnterpriseFeaturesParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseFeaturesParam() *EnterpriseFeaturesParam {
	this := EnterpriseFeaturesParam{}
	return &this
}

// NewEnterpriseFeaturesParamWithDefaults instantiates a new EnterpriseFeaturesParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseFeaturesParamWithDefaults() *EnterpriseFeaturesParam {
	this := EnterpriseFeaturesParam{}
	return &this
}

// GetSamlEnabled returns the SamlEnabled field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetSamlEnabled() bool {
	if o == nil || IsNil(o.SamlEnabled) {
		var ret bool
		return ret
	}
	return *o.SamlEnabled
}

// GetSamlEnabledOk returns a tuple with the SamlEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetSamlEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SamlEnabled) {
		return nil, false
	}
	return o.SamlEnabled, true
}

// HasSamlEnabled returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasSamlEnabled() bool {
	if o != nil && !IsNil(o.SamlEnabled) {
		return true
	}

	return false
}

// SetSamlEnabled gets a reference to the given bool and assigns it to the SamlEnabled field.
func (o *EnterpriseFeaturesParam) SetSamlEnabled(v bool) {
	o.SamlEnabled = &v
}

// GetConnectApiEnabled returns the ConnectApiEnabled field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetConnectApiEnabled() bool {
	if o == nil || IsNil(o.ConnectApiEnabled) {
		var ret bool
		return ret
	}
	return *o.ConnectApiEnabled
}

// GetConnectApiEnabledOk returns a tuple with the ConnectApiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetConnectApiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectApiEnabled) {
		return nil, false
	}
	return o.ConnectApiEnabled, true
}

// HasConnectApiEnabled returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasConnectApiEnabled() bool {
	if o != nil && !IsNil(o.ConnectApiEnabled) {
		return true
	}

	return false
}

// SetConnectApiEnabled gets a reference to the given bool and assigns it to the ConnectApiEnabled field.
func (o *EnterpriseFeaturesParam) SetConnectApiEnabled(v bool) {
	o.ConnectApiEnabled = &v
}

// GetHighPerformanceBuilds returns the HighPerformanceBuilds field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetHighPerformanceBuilds() EnterpriseFeatureEnablePrice {
	if o == nil || IsNil(o.HighPerformanceBuilds) {
		var ret EnterpriseFeatureEnablePrice
		return ret
	}
	return *o.HighPerformanceBuilds
}

// GetHighPerformanceBuildsOk returns a tuple with the HighPerformanceBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetHighPerformanceBuildsOk() (*EnterpriseFeatureEnablePrice, bool) {
	if o == nil || IsNil(o.HighPerformanceBuilds) {
		return nil, false
	}
	return o.HighPerformanceBuilds, true
}

// HasHighPerformanceBuilds returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasHighPerformanceBuilds() bool {
	if o != nil && !IsNil(o.HighPerformanceBuilds) {
		return true
	}

	return false
}

// SetHighPerformanceBuilds gets a reference to the given EnterpriseFeatureEnablePrice and assigns it to the HighPerformanceBuilds field.
func (o *EnterpriseFeaturesParam) SetHighPerformanceBuilds(v EnterpriseFeatureEnablePrice) {
	o.HighPerformanceBuilds = &v
}

// GetHighPerformanceEdge returns the HighPerformanceEdge field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetHighPerformanceEdge() EnterpriseFeatureEnablePrice {
	if o == nil || IsNil(o.HighPerformanceEdge) {
		var ret EnterpriseFeatureEnablePrice
		return ret
	}
	return *o.HighPerformanceEdge
}

// GetHighPerformanceEdgeOk returns a tuple with the HighPerformanceEdge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetHighPerformanceEdgeOk() (*EnterpriseFeatureEnablePrice, bool) {
	if o == nil || IsNil(o.HighPerformanceEdge) {
		return nil, false
	}
	return o.HighPerformanceEdge, true
}

// HasHighPerformanceEdge returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasHighPerformanceEdge() bool {
	if o != nil && !IsNil(o.HighPerformanceEdge) {
		return true
	}

	return false
}

// SetHighPerformanceEdge gets a reference to the given EnterpriseFeatureEnablePrice and assigns it to the HighPerformanceEdge field.
func (o *EnterpriseFeaturesParam) SetHighPerformanceEdge(v EnterpriseFeatureEnablePrice) {
	o.HighPerformanceEdge = &v
}

// GetSupportLevel returns the SupportLevel field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetSupportLevel() EnterpriseFeatureSupport {
	if o == nil || IsNil(o.SupportLevel) {
		var ret EnterpriseFeatureSupport
		return ret
	}
	return *o.SupportLevel
}

// GetSupportLevelOk returns a tuple with the SupportLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetSupportLevelOk() (*EnterpriseFeatureSupport, bool) {
	if o == nil || IsNil(o.SupportLevel) {
		return nil, false
	}
	return o.SupportLevel, true
}

// HasSupportLevel returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasSupportLevel() bool {
	if o != nil && !IsNil(o.SupportLevel) {
		return true
	}

	return false
}

// SetSupportLevel gets a reference to the given EnterpriseFeatureSupport and assigns it to the SupportLevel field.
func (o *EnterpriseFeaturesParam) SetSupportLevel(v EnterpriseFeatureSupport) {
	o.SupportLevel = &v
}

// GetConcurrentBuilds returns the ConcurrentBuilds field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetConcurrentBuilds() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.ConcurrentBuilds) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.ConcurrentBuilds
}

// GetConcurrentBuildsOk returns a tuple with the ConcurrentBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetConcurrentBuildsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.ConcurrentBuilds) {
		return nil, false
	}
	return o.ConcurrentBuilds, true
}

// HasConcurrentBuilds returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasConcurrentBuilds() bool {
	if o != nil && !IsNil(o.ConcurrentBuilds) {
		return true
	}

	return false
}

// SetConcurrentBuilds gets a reference to the given EnterpriseFeatureAttributes and assigns it to the ConcurrentBuilds field.
func (o *EnterpriseFeaturesParam) SetConcurrentBuilds(v EnterpriseFeatureAttributes) {
	o.ConcurrentBuilds = &v
}

// GetAdditionalConcurrentBuilds returns the AdditionalConcurrentBuilds field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalConcurrentBuilds() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalConcurrentBuilds) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalConcurrentBuilds
}

// GetAdditionalConcurrentBuildsOk returns a tuple with the AdditionalConcurrentBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalConcurrentBuildsOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalConcurrentBuilds) {
		return nil, false
	}
	return o.AdditionalConcurrentBuilds, true
}

// HasAdditionalConcurrentBuilds returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalConcurrentBuilds() bool {
	if o != nil && !IsNil(o.AdditionalConcurrentBuilds) {
		return true
	}

	return false
}

// SetAdditionalConcurrentBuilds gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalConcurrentBuilds field.
func (o *EnterpriseFeaturesParam) SetAdditionalConcurrentBuilds(v EnterpriseFeatureAdditional) {
	o.AdditionalConcurrentBuilds = &v
}

// GetBuildMinutes returns the BuildMinutes field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetBuildMinutes() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.BuildMinutes) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.BuildMinutes
}

// GetBuildMinutesOk returns a tuple with the BuildMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetBuildMinutesOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.BuildMinutes) {
		return nil, false
	}
	return o.BuildMinutes, true
}

// HasBuildMinutes returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasBuildMinutes() bool {
	if o != nil && !IsNil(o.BuildMinutes) {
		return true
	}

	return false
}

// SetBuildMinutes gets a reference to the given EnterpriseFeatureAttributes and assigns it to the BuildMinutes field.
func (o *EnterpriseFeaturesParam) SetBuildMinutes(v EnterpriseFeatureAttributes) {
	o.BuildMinutes = &v
}

// GetAdditionalBuildMinutes returns the AdditionalBuildMinutes field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalBuildMinutes() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalBuildMinutes) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalBuildMinutes
}

// GetAdditionalBuildMinutesOk returns a tuple with the AdditionalBuildMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalBuildMinutesOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalBuildMinutes) {
		return nil, false
	}
	return o.AdditionalBuildMinutes, true
}

// HasAdditionalBuildMinutes returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalBuildMinutes() bool {
	if o != nil && !IsNil(o.AdditionalBuildMinutes) {
		return true
	}

	return false
}

// SetAdditionalBuildMinutes gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalBuildMinutes field.
func (o *EnterpriseFeaturesParam) SetAdditionalBuildMinutes(v EnterpriseFeatureAdditional) {
	o.AdditionalBuildMinutes = &v
}

// GetEdgeFunctions returns the EdgeFunctions field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetEdgeFunctions() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.EdgeFunctions) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.EdgeFunctions
}

// GetEdgeFunctionsOk returns a tuple with the EdgeFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetEdgeFunctionsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.EdgeFunctions) {
		return nil, false
	}
	return o.EdgeFunctions, true
}

// HasEdgeFunctions returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasEdgeFunctions() bool {
	if o != nil && !IsNil(o.EdgeFunctions) {
		return true
	}

	return false
}

// SetEdgeFunctions gets a reference to the given EnterpriseFeatureAttributes and assigns it to the EdgeFunctions field.
func (o *EnterpriseFeaturesParam) SetEdgeFunctions(v EnterpriseFeatureAttributes) {
	o.EdgeFunctions = &v
}

// GetAdditionalEdgeFunctions returns the AdditionalEdgeFunctions field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalEdgeFunctions() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalEdgeFunctions) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalEdgeFunctions
}

// GetAdditionalEdgeFunctionsOk returns a tuple with the AdditionalEdgeFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalEdgeFunctionsOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalEdgeFunctions) {
		return nil, false
	}
	return o.AdditionalEdgeFunctions, true
}

// HasAdditionalEdgeFunctions returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalEdgeFunctions() bool {
	if o != nil && !IsNil(o.AdditionalEdgeFunctions) {
		return true
	}

	return false
}

// SetAdditionalEdgeFunctions gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalEdgeFunctions field.
func (o *EnterpriseFeaturesParam) SetAdditionalEdgeFunctions(v EnterpriseFeatureAdditional) {
	o.AdditionalEdgeFunctions = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetBandwidth() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.Bandwidth) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetBandwidthOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given EnterpriseFeatureAttributes and assigns it to the Bandwidth field.
func (o *EnterpriseFeaturesParam) SetBandwidth(v EnterpriseFeatureAttributes) {
	o.Bandwidth = &v
}

// GetAdditionalBandwidth returns the AdditionalBandwidth field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalBandwidth() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalBandwidth
}

// GetAdditionalBandwidthOk returns a tuple with the AdditionalBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalBandwidthOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		return nil, false
	}
	return o.AdditionalBandwidth, true
}

// HasAdditionalBandwidth returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalBandwidth() bool {
	if o != nil && !IsNil(o.AdditionalBandwidth) {
		return true
	}

	return false
}

// SetAdditionalBandwidth gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalBandwidth field.
func (o *EnterpriseFeaturesParam) SetAdditionalBandwidth(v EnterpriseFeatureAdditional) {
	o.AdditionalBandwidth = &v
}

// GetSeats returns the Seats field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetSeats() EnterpriseFeatureAttributes {
	if o == nil || IsNil(o.Seats) {
		var ret EnterpriseFeatureAttributes
		return ret
	}
	return *o.Seats
}

// GetSeatsOk returns a tuple with the Seats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetSeatsOk() (*EnterpriseFeatureAttributes, bool) {
	if o == nil || IsNil(o.Seats) {
		return nil, false
	}
	return o.Seats, true
}

// HasSeats returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasSeats() bool {
	if o != nil && !IsNil(o.Seats) {
		return true
	}

	return false
}

// SetSeats gets a reference to the given EnterpriseFeatureAttributes and assigns it to the Seats field.
func (o *EnterpriseFeaturesParam) SetSeats(v EnterpriseFeatureAttributes) {
	o.Seats = &v
}

// GetAdditionalSeats returns the AdditionalSeats field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalSeats() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalSeats) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalSeats
}

// GetAdditionalSeatsOk returns a tuple with the AdditionalSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalSeatsOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalSeats) {
		return nil, false
	}
	return o.AdditionalSeats, true
}

// HasAdditionalSeats returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalSeats() bool {
	if o != nil && !IsNil(o.AdditionalSeats) {
		return true
	}

	return false
}

// SetAdditionalSeats gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalSeats field.
func (o *EnterpriseFeaturesParam) SetAdditionalSeats(v EnterpriseFeatureAdditional) {
	o.AdditionalSeats = &v
}

// GetAdditionalCommitters returns the AdditionalCommitters field value if set, zero value otherwise.
func (o *EnterpriseFeaturesParam) GetAdditionalCommitters() EnterpriseFeatureAdditional {
	if o == nil || IsNil(o.AdditionalCommitters) {
		var ret EnterpriseFeatureAdditional
		return ret
	}
	return *o.AdditionalCommitters
}

// GetAdditionalCommittersOk returns a tuple with the AdditionalCommitters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseFeaturesParam) GetAdditionalCommittersOk() (*EnterpriseFeatureAdditional, bool) {
	if o == nil || IsNil(o.AdditionalCommitters) {
		return nil, false
	}
	return o.AdditionalCommitters, true
}

// HasAdditionalCommitters returns a boolean if a field has been set.
func (o *EnterpriseFeaturesParam) HasAdditionalCommitters() bool {
	if o != nil && !IsNil(o.AdditionalCommitters) {
		return true
	}

	return false
}

// SetAdditionalCommitters gets a reference to the given EnterpriseFeatureAdditional and assigns it to the AdditionalCommitters field.
func (o *EnterpriseFeaturesParam) SetAdditionalCommitters(v EnterpriseFeatureAdditional) {
	o.AdditionalCommitters = &v
}

func (o EnterpriseFeaturesParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterpriseFeaturesParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SamlEnabled) {
		toSerialize["saml_enabled"] = o.SamlEnabled
	}
	if !IsNil(o.ConnectApiEnabled) {
		toSerialize["connect_api_enabled"] = o.ConnectApiEnabled
	}
	if !IsNil(o.HighPerformanceBuilds) {
		toSerialize["high_performance_builds"] = o.HighPerformanceBuilds
	}
	if !IsNil(o.HighPerformanceEdge) {
		toSerialize["high_performance_edge"] = o.HighPerformanceEdge
	}
	if !IsNil(o.SupportLevel) {
		toSerialize["support_level"] = o.SupportLevel
	}
	if !IsNil(o.ConcurrentBuilds) {
		toSerialize["concurrent_builds"] = o.ConcurrentBuilds
	}
	if !IsNil(o.AdditionalConcurrentBuilds) {
		toSerialize["additional_concurrent_builds"] = o.AdditionalConcurrentBuilds
	}
	if !IsNil(o.BuildMinutes) {
		toSerialize["build_minutes"] = o.BuildMinutes
	}
	if !IsNil(o.AdditionalBuildMinutes) {
		toSerialize["additional_build_minutes"] = o.AdditionalBuildMinutes
	}
	if !IsNil(o.EdgeFunctions) {
		toSerialize["edge_functions"] = o.EdgeFunctions
	}
	if !IsNil(o.AdditionalEdgeFunctions) {
		toSerialize["additional_edge_functions"] = o.AdditionalEdgeFunctions
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.AdditionalBandwidth) {
		toSerialize["additional_bandwidth"] = o.AdditionalBandwidth
	}
	if !IsNil(o.Seats) {
		toSerialize["seats"] = o.Seats
	}
	if !IsNil(o.AdditionalSeats) {
		toSerialize["additional_seats"] = o.AdditionalSeats
	}
	if !IsNil(o.AdditionalCommitters) {
		toSerialize["additional_committers"] = o.AdditionalCommitters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnterpriseFeaturesParam) UnmarshalJSON(data []byte) (err error) {
	varEnterpriseFeaturesParam := _EnterpriseFeaturesParam{}

	err = json.Unmarshal(data, &varEnterpriseFeaturesParam)

	if err != nil {
		return err
	}

	*o = EnterpriseFeaturesParam(varEnterpriseFeaturesParam)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "saml_enabled")
		delete(additionalProperties, "connect_api_enabled")
		delete(additionalProperties, "high_performance_builds")
		delete(additionalProperties, "high_performance_edge")
		delete(additionalProperties, "support_level")
		delete(additionalProperties, "concurrent_builds")
		delete(additionalProperties, "additional_concurrent_builds")
		delete(additionalProperties, "build_minutes")
		delete(additionalProperties, "additional_build_minutes")
		delete(additionalProperties, "edge_functions")
		delete(additionalProperties, "additional_edge_functions")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "additional_bandwidth")
		delete(additionalProperties, "seats")
		delete(additionalProperties, "additional_seats")
		delete(additionalProperties, "additional_committers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnterpriseFeaturesParam struct {
	value *EnterpriseFeaturesParam
	isSet bool
}

func (v NullableEnterpriseFeaturesParam) Get() *EnterpriseFeaturesParam {
	return v.value
}

func (v *NullableEnterpriseFeaturesParam) Set(val *EnterpriseFeaturesParam) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseFeaturesParam) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseFeaturesParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseFeaturesParam(val *EnterpriseFeaturesParam) *NullableEnterpriseFeaturesParam {
	return &NullableEnterpriseFeaturesParam{value: val, isSet: true}
}

func (v NullableEnterpriseFeaturesParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseFeaturesParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


