/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
	"fmt"
)

// checks if the BillingZuoraInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingZuoraInvoice{}

// BillingZuoraInvoice ZuoraInvoice model definition
type BillingZuoraInvoice struct {
	// The Zuora ID of the invoice
	Id string `json:"id"`
	// The Zuora invoice number
	InvoiceNumber string `json:"invoice_number"`
	// The Zuora invoice date
	InvoiceDate string `json:"invoice_date"`
	// The Zuora due_date
	DueDate string `json:"due_date"`
	// The remaining balance in Zuora
	Balance int64 `json:"balance"`
	// The amount due in Zuora
	Amount int64 `json:"amount"`
	// The payment amount on the Zuora invoice
	PaymentAmount int64 `json:"payment_amount"`
	// The refund amount on the Zuora invoice
	RefundAmount int64 `json:"refund_amount"`
	// The credit balance adjustment amount
	CreditBalanceAdjustmentAmount int64 `json:"credit_balance_adjustment_amount"`
	// The tax amount on the Zuora Invoice
	TaxAmount int64 `json:"tax_amount"`
	// Zuora invoice items
	InvoiceItems []BillingZuoraInvoiceItem `json:"invoice_items"`
	AdditionalProperties map[string]interface{}
}

type _BillingZuoraInvoice BillingZuoraInvoice

// NewBillingZuoraInvoice instantiates a new BillingZuoraInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingZuoraInvoice(id string, invoiceNumber string, invoiceDate string, dueDate string, balance int64, amount int64, paymentAmount int64, refundAmount int64, creditBalanceAdjustmentAmount int64, taxAmount int64, invoiceItems []BillingZuoraInvoiceItem) *BillingZuoraInvoice {
	this := BillingZuoraInvoice{}
	this.Id = id
	this.InvoiceNumber = invoiceNumber
	this.InvoiceDate = invoiceDate
	this.DueDate = dueDate
	this.Balance = balance
	this.Amount = amount
	this.PaymentAmount = paymentAmount
	this.RefundAmount = refundAmount
	this.CreditBalanceAdjustmentAmount = creditBalanceAdjustmentAmount
	this.TaxAmount = taxAmount
	this.InvoiceItems = invoiceItems
	return &this
}

// NewBillingZuoraInvoiceWithDefaults instantiates a new BillingZuoraInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingZuoraInvoiceWithDefaults() *BillingZuoraInvoice {
	this := BillingZuoraInvoice{}
	return &this
}

// GetId returns the Id field value
func (o *BillingZuoraInvoice) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingZuoraInvoice) SetId(v string) {
	o.Id = v
}

// GetInvoiceNumber returns the InvoiceNumber field value
func (o *BillingZuoraInvoice) GetInvoiceNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetInvoiceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceNumber, true
}

// SetInvoiceNumber sets field value
func (o *BillingZuoraInvoice) SetInvoiceNumber(v string) {
	o.InvoiceNumber = v
}

// GetInvoiceDate returns the InvoiceDate field value
func (o *BillingZuoraInvoice) GetInvoiceDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceDate
}

// GetInvoiceDateOk returns a tuple with the InvoiceDate field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetInvoiceDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceDate, true
}

// SetInvoiceDate sets field value
func (o *BillingZuoraInvoice) SetInvoiceDate(v string) {
	o.InvoiceDate = v
}

// GetDueDate returns the DueDate field value
func (o *BillingZuoraInvoice) GetDueDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetDueDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueDate, true
}

// SetDueDate sets field value
func (o *BillingZuoraInvoice) SetDueDate(v string) {
	o.DueDate = v
}

// GetBalance returns the Balance field value
func (o *BillingZuoraInvoice) GetBalance() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetBalanceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *BillingZuoraInvoice) SetBalance(v int64) {
	o.Balance = v
}

// GetAmount returns the Amount field value
func (o *BillingZuoraInvoice) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BillingZuoraInvoice) SetAmount(v int64) {
	o.Amount = v
}

// GetPaymentAmount returns the PaymentAmount field value
func (o *BillingZuoraInvoice) GetPaymentAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetPaymentAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentAmount, true
}

// SetPaymentAmount sets field value
func (o *BillingZuoraInvoice) SetPaymentAmount(v int64) {
	o.PaymentAmount = v
}

// GetRefundAmount returns the RefundAmount field value
func (o *BillingZuoraInvoice) GetRefundAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetRefundAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundAmount, true
}

// SetRefundAmount sets field value
func (o *BillingZuoraInvoice) SetRefundAmount(v int64) {
	o.RefundAmount = v
}

// GetCreditBalanceAdjustmentAmount returns the CreditBalanceAdjustmentAmount field value
func (o *BillingZuoraInvoice) GetCreditBalanceAdjustmentAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreditBalanceAdjustmentAmount
}

// GetCreditBalanceAdjustmentAmountOk returns a tuple with the CreditBalanceAdjustmentAmount field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetCreditBalanceAdjustmentAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditBalanceAdjustmentAmount, true
}

// SetCreditBalanceAdjustmentAmount sets field value
func (o *BillingZuoraInvoice) SetCreditBalanceAdjustmentAmount(v int64) {
	o.CreditBalanceAdjustmentAmount = v
}

// GetTaxAmount returns the TaxAmount field value
func (o *BillingZuoraInvoice) GetTaxAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetTaxAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxAmount, true
}

// SetTaxAmount sets field value
func (o *BillingZuoraInvoice) SetTaxAmount(v int64) {
	o.TaxAmount = v
}

// GetInvoiceItems returns the InvoiceItems field value
func (o *BillingZuoraInvoice) GetInvoiceItems() []BillingZuoraInvoiceItem {
	if o == nil {
		var ret []BillingZuoraInvoiceItem
		return ret
	}

	return o.InvoiceItems
}

// GetInvoiceItemsOk returns a tuple with the InvoiceItems field value
// and a boolean to check if the value has been set.
func (o *BillingZuoraInvoice) GetInvoiceItemsOk() ([]BillingZuoraInvoiceItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceItems, true
}

// SetInvoiceItems sets field value
func (o *BillingZuoraInvoice) SetInvoiceItems(v []BillingZuoraInvoiceItem) {
	o.InvoiceItems = v
}

func (o BillingZuoraInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingZuoraInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["invoice_number"] = o.InvoiceNumber
	toSerialize["invoice_date"] = o.InvoiceDate
	toSerialize["due_date"] = o.DueDate
	toSerialize["balance"] = o.Balance
	toSerialize["amount"] = o.Amount
	toSerialize["payment_amount"] = o.PaymentAmount
	toSerialize["refund_amount"] = o.RefundAmount
	toSerialize["credit_balance_adjustment_amount"] = o.CreditBalanceAdjustmentAmount
	toSerialize["tax_amount"] = o.TaxAmount
	toSerialize["invoice_items"] = o.InvoiceItems

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BillingZuoraInvoice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"invoice_number",
		"invoice_date",
		"due_date",
		"balance",
		"amount",
		"payment_amount",
		"refund_amount",
		"credit_balance_adjustment_amount",
		"tax_amount",
		"invoice_items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingZuoraInvoice := _BillingZuoraInvoice{}

	err = json.Unmarshal(data, &varBillingZuoraInvoice)

	if err != nil {
		return err
	}

	*o = BillingZuoraInvoice(varBillingZuoraInvoice)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "invoice_number")
		delete(additionalProperties, "invoice_date")
		delete(additionalProperties, "due_date")
		delete(additionalProperties, "balance")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "payment_amount")
		delete(additionalProperties, "refund_amount")
		delete(additionalProperties, "credit_balance_adjustment_amount")
		delete(additionalProperties, "tax_amount")
		delete(additionalProperties, "invoice_items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingZuoraInvoice struct {
	value *BillingZuoraInvoice
	isSet bool
}

func (v NullableBillingZuoraInvoice) Get() *BillingZuoraInvoice {
	return v.value
}

func (v *NullableBillingZuoraInvoice) Set(val *BillingZuoraInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingZuoraInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingZuoraInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingZuoraInvoice(val *BillingZuoraInvoice) *NullableBillingZuoraInvoice {
	return &NullableBillingZuoraInvoice{value: val, isSet: true}
}

func (v NullableBillingZuoraInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingZuoraInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


