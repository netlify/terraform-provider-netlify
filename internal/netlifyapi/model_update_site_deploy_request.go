/*
Netlify's API documentation

Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.   This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://docs.netlify.com/api/get-started/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).   Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/js-client) 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netlifyapi

import (
	"encoding/json"
)

// checks if the UpdateSiteDeployRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSiteDeployRequest{}

// UpdateSiteDeployRequest struct for UpdateSiteDeployRequest
type UpdateSiteDeployRequest struct {
	Files map[string]interface{} `json:"files,omitempty"`
	Draft *bool `json:"draft,omitempty"`
	Async *bool `json:"async,omitempty"`
	Functions map[string]interface{} `json:"functions,omitempty"`
	FunctionSchedules []CreateSiteDeployRequestFunctionSchedulesInner `json:"function_schedules,omitempty"`
	FunctionsConfig *UpdateSiteDeployRequestFunctionsConfig `json:"functions_config,omitempty"`
	Branch *string `json:"branch,omitempty"`
	Framework *string `json:"framework,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSiteDeployRequest UpdateSiteDeployRequest

// NewUpdateSiteDeployRequest instantiates a new UpdateSiteDeployRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSiteDeployRequest() *UpdateSiteDeployRequest {
	this := UpdateSiteDeployRequest{}
	return &this
}

// NewUpdateSiteDeployRequestWithDefaults instantiates a new UpdateSiteDeployRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSiteDeployRequestWithDefaults() *UpdateSiteDeployRequest {
	this := UpdateSiteDeployRequest{}
	return &this
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetFiles() map[string]interface{} {
	if o == nil || IsNil(o.Files) {
		var ret map[string]interface{}
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetFilesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Files) {
		return map[string]interface{}{}, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given map[string]interface{} and assigns it to the Files field.
func (o *UpdateSiteDeployRequest) SetFiles(v map[string]interface{}) {
	o.Files = v
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetDraft() bool {
	if o == nil || IsNil(o.Draft) {
		var ret bool
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetDraftOk() (*bool, bool) {
	if o == nil || IsNil(o.Draft) {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasDraft() bool {
	if o != nil && !IsNil(o.Draft) {
		return true
	}

	return false
}

// SetDraft gets a reference to the given bool and assigns it to the Draft field.
func (o *UpdateSiteDeployRequest) SetDraft(v bool) {
	o.Draft = &v
}

// GetAsync returns the Async field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetAsync() bool {
	if o == nil || IsNil(o.Async) {
		var ret bool
		return ret
	}
	return *o.Async
}

// GetAsyncOk returns a tuple with the Async field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetAsyncOk() (*bool, bool) {
	if o == nil || IsNil(o.Async) {
		return nil, false
	}
	return o.Async, true
}

// HasAsync returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasAsync() bool {
	if o != nil && !IsNil(o.Async) {
		return true
	}

	return false
}

// SetAsync gets a reference to the given bool and assigns it to the Async field.
func (o *UpdateSiteDeployRequest) SetAsync(v bool) {
	o.Async = &v
}

// GetFunctions returns the Functions field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetFunctions() map[string]interface{} {
	if o == nil || IsNil(o.Functions) {
		var ret map[string]interface{}
		return ret
	}
	return o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetFunctionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Functions) {
		return map[string]interface{}{}, false
	}
	return o.Functions, true
}

// HasFunctions returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasFunctions() bool {
	if o != nil && !IsNil(o.Functions) {
		return true
	}

	return false
}

// SetFunctions gets a reference to the given map[string]interface{} and assigns it to the Functions field.
func (o *UpdateSiteDeployRequest) SetFunctions(v map[string]interface{}) {
	o.Functions = v
}

// GetFunctionSchedules returns the FunctionSchedules field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetFunctionSchedules() []CreateSiteDeployRequestFunctionSchedulesInner {
	if o == nil || IsNil(o.FunctionSchedules) {
		var ret []CreateSiteDeployRequestFunctionSchedulesInner
		return ret
	}
	return o.FunctionSchedules
}

// GetFunctionSchedulesOk returns a tuple with the FunctionSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetFunctionSchedulesOk() ([]CreateSiteDeployRequestFunctionSchedulesInner, bool) {
	if o == nil || IsNil(o.FunctionSchedules) {
		return nil, false
	}
	return o.FunctionSchedules, true
}

// HasFunctionSchedules returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasFunctionSchedules() bool {
	if o != nil && !IsNil(o.FunctionSchedules) {
		return true
	}

	return false
}

// SetFunctionSchedules gets a reference to the given []CreateSiteDeployRequestFunctionSchedulesInner and assigns it to the FunctionSchedules field.
func (o *UpdateSiteDeployRequest) SetFunctionSchedules(v []CreateSiteDeployRequestFunctionSchedulesInner) {
	o.FunctionSchedules = v
}

// GetFunctionsConfig returns the FunctionsConfig field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetFunctionsConfig() UpdateSiteDeployRequestFunctionsConfig {
	if o == nil || IsNil(o.FunctionsConfig) {
		var ret UpdateSiteDeployRequestFunctionsConfig
		return ret
	}
	return *o.FunctionsConfig
}

// GetFunctionsConfigOk returns a tuple with the FunctionsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetFunctionsConfigOk() (*UpdateSiteDeployRequestFunctionsConfig, bool) {
	if o == nil || IsNil(o.FunctionsConfig) {
		return nil, false
	}
	return o.FunctionsConfig, true
}

// HasFunctionsConfig returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasFunctionsConfig() bool {
	if o != nil && !IsNil(o.FunctionsConfig) {
		return true
	}

	return false
}

// SetFunctionsConfig gets a reference to the given UpdateSiteDeployRequestFunctionsConfig and assigns it to the FunctionsConfig field.
func (o *UpdateSiteDeployRequest) SetFunctionsConfig(v UpdateSiteDeployRequestFunctionsConfig) {
	o.FunctionsConfig = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *UpdateSiteDeployRequest) SetBranch(v string) {
	o.Branch = &v
}

// GetFramework returns the Framework field value if set, zero value otherwise.
func (o *UpdateSiteDeployRequest) GetFramework() string {
	if o == nil || IsNil(o.Framework) {
		var ret string
		return ret
	}
	return *o.Framework
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSiteDeployRequest) GetFrameworkOk() (*string, bool) {
	if o == nil || IsNil(o.Framework) {
		return nil, false
	}
	return o.Framework, true
}

// HasFramework returns a boolean if a field has been set.
func (o *UpdateSiteDeployRequest) HasFramework() bool {
	if o != nil && !IsNil(o.Framework) {
		return true
	}

	return false
}

// SetFramework gets a reference to the given string and assigns it to the Framework field.
func (o *UpdateSiteDeployRequest) SetFramework(v string) {
	o.Framework = &v
}

func (o UpdateSiteDeployRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSiteDeployRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Draft) {
		toSerialize["draft"] = o.Draft
	}
	if !IsNil(o.Async) {
		toSerialize["async"] = o.Async
	}
	if !IsNil(o.Functions) {
		toSerialize["functions"] = o.Functions
	}
	if !IsNil(o.FunctionSchedules) {
		toSerialize["function_schedules"] = o.FunctionSchedules
	}
	if !IsNil(o.FunctionsConfig) {
		toSerialize["functions_config"] = o.FunctionsConfig
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.Framework) {
		toSerialize["framework"] = o.Framework
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSiteDeployRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateSiteDeployRequest := _UpdateSiteDeployRequest{}

	err = json.Unmarshal(data, &varUpdateSiteDeployRequest)

	if err != nil {
		return err
	}

	*o = UpdateSiteDeployRequest(varUpdateSiteDeployRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "files")
		delete(additionalProperties, "draft")
		delete(additionalProperties, "async")
		delete(additionalProperties, "functions")
		delete(additionalProperties, "function_schedules")
		delete(additionalProperties, "functions_config")
		delete(additionalProperties, "branch")
		delete(additionalProperties, "framework")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSiteDeployRequest struct {
	value *UpdateSiteDeployRequest
	isSet bool
}

func (v NullableUpdateSiteDeployRequest) Get() *UpdateSiteDeployRequest {
	return v.value
}

func (v *NullableUpdateSiteDeployRequest) Set(val *UpdateSiteDeployRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSiteDeployRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSiteDeployRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSiteDeployRequest(val *UpdateSiteDeployRequest) *NullableUpdateSiteDeployRequest {
	return &NullableUpdateSiteDeployRequest{value: val, isSet: true}
}

func (v NullableUpdateSiteDeployRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSiteDeployRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


